<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>monsteRbashSeq - Lisa K. Johnson</title><link href="https://johnsolk.github.io/blog/" rel="alternate"></link><link href="https://johnsolk.github.io/blog/feeds/lisa-k-johnson.atom.xml" rel="self"></link><id>https://johnsolk.github.io/blog/</id><updated>2019-08-30T00:00:00-07:00</updated><entry><title>17 sets, how to display all intersections with UpSetR plot?</title><link href="https://johnsolk.github.io/blog/17-sets-how-to-display-all-intersections-with-upsetr-plot.html" rel="alternate"></link><published>2019-08-30T00:00:00-07:00</published><updated>2019-08-30T00:00:00-07:00</updated><author><name>Lisa K. Johnson</name></author><id>tag:johnsolk.github.io,2019-08-30:/blog/17-sets-how-to-display-all-intersections-with-upsetr-plot.html</id><summary type="html">&lt;p&gt;There are overlapping identities between all 17 sets.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello! Trying to make an UpSetR plot showing overlapping gene annotations between 17 transcriptomes. &lt;/p&gt;
&lt;p&gt;What am I doing wrong?&lt;/p&gt;
&lt;p&gt;Is there a bug in the UpSetR library? &lt;/p&gt;
&lt;p&gt;I posted on the UpSetR library's community &lt;a href="https://github.com/hms-dbmi/UpSetR/issues/170"&gt;GitHub forum&lt;/a&gt;, but did not really get an answer to my questions. My R language expert colleagues at UC Davis could not seem to figure it out either.&lt;/p&gt;
&lt;p&gt;Here is what I know:&lt;/p&gt;
&lt;p&gt;There ARE overlapping identities between all 17 of my sets (see code and output below).&lt;/p&gt;
&lt;p&gt;However, my UpSetR plots do not reflect this. &lt;/p&gt;
&lt;p&gt;Below is some R code with a downloadable set of data.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UpSetR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# https://cran.r-project.org/web/packages/UpSetR/&lt;/span&gt;
&lt;span class="c1"&gt;# https://cran.r-project.org/web/packages/UpSetR/vignettes/basic.usage.html&lt;/span&gt;

&lt;span class="c1"&gt;# Download and import to a data.frame&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;presence_absence.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;&lt;span class="n"&gt;download&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;https://raw.githubusercontent.com/johnsolk/RNAseq_15killifish/master/evaluation/presence_absence.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;presence_absence.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="n"&gt;pa&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;presence_absence.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pa&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="n"&gt;rownames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;pa&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;Ensembl&lt;/span&gt;
&lt;span class="n"&gt;pa&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="n"&gt;pa&lt;/span&gt;&lt;span class="p"&gt;[,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This plot will display 4 intersects. THIS WORKS. This is what we should see for all 17 sets.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;upset(pa, sets = c(c(&amp;quot;A_xenica&amp;quot;,&amp;quot;F_catanatus&amp;quot;),c(&amp;quot;F_chrysotus&amp;quot;,&amp;quot;F_diaphanus&amp;quot;)),mb.ratio = c(0.55, 0.45),keep.order = F)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/pdki8ff.png"&gt;&lt;/p&gt;
&lt;p&gt;But, as soon as I move to 6, I am confused - there is no longer a bar crossing all 6 sets.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;upset(pa, sets = c(c(&amp;quot;A_xenica&amp;quot;,&amp;quot;F_catanatus&amp;quot;,&amp;quot;F_notatus&amp;quot;), c(&amp;quot;F_chrysotus&amp;quot;,&amp;quot;F_diaphanus&amp;quot;,&amp;quot;F_nottii&amp;quot;)),mb.ratio = c(0.55, 0.45),nsets = 6,keep.order = F)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/mokSySy.png"&gt;&lt;/p&gt;
&lt;p&gt;The full 17 sets does not make any sense&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;upset(pa, sets = c(c(&amp;quot;A_xenica&amp;quot;,&amp;quot;F_catanatus&amp;quot;),c(&amp;quot;F_chrysotus&amp;quot;,&amp;quot;F_diaphanus&amp;quot;),c(&amp;quot;F_grandis&amp;quot;,&amp;quot;F_heteroclitusMDPL&amp;quot;),c(&amp;quot;F_heteroclitusMDPP&amp;quot;,&amp;quot;F_notatus&amp;quot;),c(&amp;quot;F_nottii&amp;quot;,&amp;quot;F_olivaceous&amp;quot;),c(&amp;quot;F_parvapinis&amp;quot;,&amp;quot;F_rathbuni&amp;quot;),c(&amp;quot;F_sciadicus&amp;quot;,&amp;quot;F_similis&amp;quot;),c(&amp;quot;F_zebrinus&amp;quot;,&amp;quot;L_goodei&amp;quot;),c(&amp;quot;L_parva&amp;quot;)),mb.ratio = c(0.55, 0.45),keep.order = F)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/vbPSOYk.png"&gt;&lt;/p&gt;
&lt;p&gt;This confirms that there are overlaps between all 17 sets (and 16, 15, 14, etc)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;test&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;rowSums&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;pa&lt;span class="p"&gt;)&lt;/span&gt;
test&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kp"&gt;as.data.frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;test&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;test&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; &lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;sum&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;test&lt;span class="o"&gt;$&lt;/span&gt;sum &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;17&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;test&lt;span class="o"&gt;$&lt;/span&gt;sum &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;test&lt;span class="o"&gt;$&lt;/span&gt;sum &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kp"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;test&lt;span class="o"&gt;$&lt;/span&gt;sum &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;14&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; sum(test$sum == 17)
[1] 10897
&amp;gt; sum(test$sum == 16)
[1] 2979
&amp;gt; sum(test$sum == 15)
[1] 1585
&amp;gt; sum(test$sum == 14)
[1] 1247
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I'm wondering if there is a bug in the UpSetR library that prevents displaying overlaps from such a large number of sets. I remembered &lt;a href="https://github.com/dib-lab/2017-ectocooler/blob/master/Ectocooler-genes.ipynb"&gt;Titus made a similar set of data looking at annotations from a few species with the python library, pyupset&lt;/a&gt;. When I made a &lt;a href="https://github.com/johnsolk/RNAseq_15killifish/blob/master/notebooks/pyupset_annotations.ipynb"&gt;similar notebook using pyupset with my data&lt;/a&gt;, there was a performance issue. The notebook ran overnight and didn't produce any output. This makes me think that it might not be possible to produce a plot with 17 intersections?&lt;/p&gt;
&lt;p&gt;Any insight anyone has would be greatly appreciated!&lt;/p&gt;</content><category term="R"></category><category term="plotting"></category><category term="annotation"></category></entry><entry><title>XSEDE login with bridges</title><link href="https://johnsolk.github.io/blog/xsede-login-with-bridges.html" rel="alternate"></link><published>2019-04-15T00:00:00-07:00</published><updated>2019-04-15T00:00:00-07:00</updated><author><name>Lisa K. Johnson</name></author><id>tag:johnsolk.github.io,2019-04-15:/blog/xsede-login-with-bridges.html</id><summary type="html">&lt;p&gt;Logging in, orientation, and running jobs on PSC Bridges with XSEDE&lt;/p&gt;</summary><content type="html">&lt;p&gt;Quick tutorial for how to use PSC Bridges with an &lt;a href="https://www.xsede.org/"&gt;XSEDE&lt;/a&gt; allocation. &lt;/p&gt;
&lt;p&gt;See &lt;a href="https://johnsolk.github.io/blog/xrac-research-proposal.html"&gt;here&lt;/a&gt; for our &lt;a href="https://portal.xsede.org/allocations/research"&gt;research proposal&lt;/a&gt; and &lt;a href="https://github.com/johnsolk/jetstream-xsede-illo/tree/master/xsede_applications"&gt;here&lt;/a&gt; for examples of &lt;a href="https://portal.xsede.org/allocations/startup"&gt;startup allocation&lt;/a&gt; proposals.&lt;/p&gt;
&lt;h1&gt;1. Login&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://portal.xsede.org/psc-bridges"&gt;login info&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are two ways. (Pick one. If one doesn't work, try the other.)&lt;/p&gt;
&lt;h4&gt;A. &lt;a href="https://portal.xsede.org/psc-bridges"&gt;Direct login to bridges&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -p 2222 ljcohen@bridges.psc.xsede.org
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;password
select DUO option&lt;/p&gt;
&lt;p&gt;Now you're on bridges. The command prompt should look similar to this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ljcohen@login006 ~]$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;B. &lt;a href="https://portal.xsede.org/single-sign-on-hub"&gt;SSO (single sign-on hub)&lt;/a&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh ljcohen@login.xsede.org
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;password
select DUO option&lt;/p&gt;
&lt;p&gt;Prompt will then look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ljcohen@ssohub ~]$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gsissh bridges
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you're on bridges. The command prompt should look similar to this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ljcohen@login018 ~]$ 
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;2. Where are we?&lt;/h1&gt;
&lt;p&gt;Type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;projects
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will show you the allocations we have.&lt;/p&gt;
&lt;p&gt;We have &lt;a href="https://johnsolk.github.io/blog/xrac-research-proposal.html"&gt;three separate PSC bridges allocations&lt;/a&gt;. Keep track of how much allocation you're using with this &lt;code&gt;projects&lt;/code&gt; command.
1. Storage
2. RM
3. LM&lt;/p&gt;
&lt;p&gt;Under "BRIDGES PYLON STORAGE", it will list the directories path where the Lustre storage is located. All users who are on the allocation will have their own directory within this project. By default, you do not have read or write access to other users' directories, only your own. So, don't worry about making a mistake and deleting someone else's work.&lt;/p&gt;
&lt;p&gt;Note that space in your &lt;code&gt;~/&lt;/code&gt; home directory is limited. &lt;a href="https://www.psc.edu/bridges/user-guide/file-spaces"&gt;PSC says 10GB&lt;/a&gt;, but I've run out of space installing miniconda software, so I think it's more like 10 or 100 MB. (but haven't confirmed this)&lt;/p&gt;
&lt;p&gt;Because of this limited space in home, all files should go in your Lustre storage directory. For example, I've setup miniconda to install software in my storage directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/pylon5/bi5fpmp/ljcohen/miniconda3/bin
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you're on more than one allocation, your working directories should be in account-specific, project-specific storage. For example, I'm on 2 allocations:&lt;/p&gt;
&lt;p&gt;Allocation 1:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /pylon5/bi5fpmp/ljcohen/
ls -lah
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Allocation 2:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /pylon5/mc5phkp/ljcohen/
ls -lah
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;3. Computing Things.&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.psc.edu/bridges/user-guide/"&gt;PSC bridges user guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.psc.edu/bridges/user-guide/running-jobs"&gt;Running jobs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;There are generally 3 compute node &lt;a href="https://www.psc.edu/bridges/user-guide/running-jobs#partitions"&gt;partitions available&lt;/a&gt;, depending on what you need to do: &lt;ul&gt;
&lt;li&gt;Large Memory (LM)&lt;/li&gt;
&lt;li&gt;Regular Memory (RM)&lt;/li&gt;
&lt;li&gt;Regular Memory-Interactive (RM-interactive), for interactive login to test commands so they don't run on the head node.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Examples:&lt;/h2&gt;
&lt;p&gt;Run an interactive job for 1 hr to see if commands/software will run. (It might take a little while, ~5-10 min for job to be queued, so be patient):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;interact -p RM-shared --ntasks-per-node=4 -N 1 -t 1:00:00
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;LM job example script:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash -l&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -D /pylon5/mc5phkp/ljcohen/kfish_abyss&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -J Axen-abyss&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -o /pylon5/mc5phkp/ljcohen/kfish_abyss/abyss-Axen%j.o&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -e /pylon5/mc5phkp/ljcohen/kfish_abyss/abyss-Axen%j.o&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -t 120:00:00&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -p LM&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH --mem=1000GB&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH --ntasks-per-node 14&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;span class="nb"&gt;source&lt;/span&gt; activate assembly
&lt;span class="nb"&gt;cd&lt;/span&gt; /pylon5/mc5phkp/ljcohen/kfish_abyss

&lt;span class="nv"&gt;SPECIES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Axen
&lt;span class="nv"&gt;PROJECTDIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$LOCAL&lt;/span&gt;/&lt;span class="nv"&gt;$SPECIES&lt;/span&gt;/
mkdir &lt;span class="nv"&gt;$PROJECTDIR&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$PROJECTDIR&lt;/span&gt;
cp /pylon5/mc5phkp/ljcohen/kfish_abyss/Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L6_1.qc.fq.gz .
cp /pylon5/mc5phkp/ljcohen/kfish_abyss/Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L6_2.qc.fq.gz .
cp /pylon5/mc5phkp/ljcohen/kfish_abyss/Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L7_1.qc.fq.gz .
cp /pylon5/mc5phkp/ljcohen/kfish_abyss/Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L7_2.qc.fq.gz .

abyss-pe &lt;span class="nv"&gt;k&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;51&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Axen_abyss &lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L6_1.qc.fq.gz Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L6_2.qc.fq.gz Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L7_1.qc.fq.gz Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L7_2.qc.fq.gz&amp;quot;&lt;/span&gt; contigs

&lt;span class="c1"&gt;# Grab output assembly files and copy to your storage&lt;/span&gt;
cp &lt;span class="nv"&gt;$PROJECTDIR&lt;/span&gt;/Axen_abyss /pylon5/mc5phkp/ljcohen/kfish_abyss/

&lt;span class="c1"&gt;# remove temp files on $LOCAL&lt;/span&gt;
rm -rf &lt;span class="nv"&gt;$PROJECTDIR&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;RM job example script:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash -l&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -D /pylon5/mc5phkp/ljcohen/kfish_Illumina/&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -J Axen-diginorm&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -o /pylon5/mc5phkp/ljcohen/kfish_Illumina/diginorm-Axen%j.o&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -e /pylon5/mc5phkp/ljcohen/kfish_Illumina/diginorm-Axen%j.o&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -t 48:00:00&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH -p RM&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH --ntasks-per-node 8&lt;/span&gt;
&lt;span class="c1"&gt;#SBATCH --cpus-per-task 1&lt;/span&gt;

&lt;span class="nb"&gt;source&lt;/span&gt; /home/ljcohen/.bashrc
&lt;span class="nb"&gt;source&lt;/span&gt; activate sourmash_conda
&lt;span class="nb"&gt;cd&lt;/span&gt; /pylon5/mc5phkp/ljcohen/kfish_Illumina/

&lt;span class="o"&gt;(&lt;/span&gt;paste &lt;span class="se"&gt;\&lt;/span&gt;
&amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;zcat &lt;span class="o"&gt;{&lt;/span&gt;Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L6_1.qc.fq.gz,Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L7_1.qc.fq.gz&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; paste - - - - &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;zcat &lt;span class="o"&gt;{&lt;/span&gt;Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L6_2.qc.fq.gz,Axenica_USPD16092508-N706-AK391_HV3JCCCXY_L7_2.qc.fq.gz&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; paste - - - - &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; tr &lt;span class="s1"&gt;&amp;#39;\t&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\n&amp;#39;&lt;/span&gt;  &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;trim-low-abund.py -k &lt;span class="m"&gt;20&lt;/span&gt; -C &lt;span class="m"&gt;2&lt;/span&gt; - -o - -x 5e7&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;extract-paired-reads.py --gzip -p A_xen.paired.gz -s A_xen.single.gz&lt;span class="o"&gt;)&lt;/span&gt; &amp;gt; /dev/null
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h2&gt;Queue management&lt;/h2&gt;
&lt;p&gt;Submit script to slurm queue as a job:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sbatch yourfile
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check the queue status:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;squeue -u ljcohen
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cancel job:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;scancel 5280622
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In an emergency, if you've (hypothetically) submitted a lot of jobs you don't want, cancel all job ID beginning with numbers &lt;code&gt;528&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;squeue -u ljcohen | grep “528&amp;quot; | sed -r -e &amp;quot;s/[\t\ ]+/./g&amp;quot; | cut -d&amp;quot;.&amp;quot; -f 2 | xargs scancel
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Let's do something simple.&lt;/h2&gt;
&lt;p&gt;From the &lt;a href="https://angus.readthedocs.io/en/2018/running-command-line-blast.html"&gt;blast commandline tutorial from angus&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd /pylon5/mc5phkp/ljcohen
mkdir test
cd test
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Download:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -o mouse.1.protein.faa.gz -L https://osf.io/v6j9x/download
curl -o mouse.2.protein.faa.gz -L https://osf.io/j2qxk/download
curl -o zebrafish.1.protein.faa.gz -L https://osf.io/68mgf/download
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Decompress:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gunzip *.faa.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Load module:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;blast&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.7.1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Make &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;makeblastdb -in zebrafish.1.protein.faa -dbtype prot
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Run interactive job:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;interact -p RM-shared --ntasks-per-node=4 -N 1 -t 1:00:00
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run this interactively, or create a script file and submit as an RM job:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd test
blastp -query mouse.1.protein.faa -db zebrafish.1.protein.faa -out mm.x.zebrafish.tsv -outfmt 6
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;4. How to Transfer files&lt;/h1&gt;
&lt;p&gt;scp a directory of files from bridges to your local computer, must use port &lt;code&gt;2222&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;scp -r -P 2222 ljcohen@data.bridges.psc.edu:/location/ .
&lt;/pre&gt;&lt;/div&gt;</content><category term="XSEDE"></category><category term="computing resources"></category><category term="hpc"></category><category term="bridges"></category></entry><entry><title>Annotating multiple de novo transcriptome assemblies</title><link href="https://johnsolk.github.io/blog/annotating-multiple-de-novo-transcriptome-assemblies.html" rel="alternate"></link><published>2019-02-05T00:00:00-08:00</published><updated>2019-02-05T00:00:00-08:00</updated><author><name>Lisa K. Johnson</name></author><id>tag:johnsolk.github.io,2019-02-05:/blog/annotating-multiple-de-novo-transcriptome-assemblies.html</id><summary type="html">&lt;p&gt;Checking orthogroups (OGs) and comparing with transcript-level annotations&lt;/p&gt;</summary><content type="html">&lt;p&gt;Collapsing contigs by annotation is an appropriate method for a &lt;em&gt;de novo&lt;/em&gt; transcriptome assembly to be used as a reference for differential expression analysis.&lt;/p&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;I have been working with RNAseq data for several years now, which we're using for a cross-species differential expression analysis. This is not a trivial analysis, and I've had to go back and re-do everything a few times now because the annotations and/or quantification results haven't made sense for various reasons. I'm hoping that we're getting closer.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;De novo&lt;/em&gt; transcriptome assemblies were made with &lt;a href="https://github.com/trinityrnaseq/trinityrnaseq"&gt;Trinity&lt;/a&gt; (version 2.8.4) from 17 different species of North American &lt;em&gt;Fundulus&lt;/em&gt; killifish (17 separate assemblies with input ranging from 50 million to ~450 million PEx100 reads each). Expression was quantified using &lt;a href="https://github.com/COMBINE-lab/salmon"&gt;salmon&lt;/a&gt; (version 0.12.0) with the trimmed reads against Trinity assemblies. I've annotated the Trinity assemblies using the &lt;a href="http://dib-lab.github.io/dammit/"&gt;dammit&lt;/a&gt; pipeline (version 1.1).&lt;/p&gt;
&lt;p&gt;I would like to use OrthoFinder to guide a cross-species comparison of differential expression. I was thinking this would be a good way to ensure that we are comparing the same genes across all species. I ran OrthoFinder version 2.2.7 (&lt;a href="https://anaconda.org/bioconda/orthofinder"&gt;conda install in a python 2 conda environment&lt;/a&gt;) with all of the translated Trinity assemblies (.pep files from &lt;a href="https://github.com/TransDecoder/TransDecoder/wiki"&gt;Transdecoder&lt;/a&gt; version 3.0.1). From the &lt;code&gt;Orthogroups.csv&lt;/code&gt; output, I assigned OGs to their corresponding transcript ID from Trinity. Then, I summarized OG expression per species by collapsing multiple contigs per OG with &lt;a href="https://bioconductor.org/packages/release/bioc/html/tximport.html"&gt;tximport&lt;/a&gt;. I did the same for the NCBI annotations, collapsing multiple contigs per gene ID.&lt;/p&gt;
&lt;p&gt;However, I found that the expression tables per species summarized by OGs did not appear to be as specific as they are when summarized by NCBI genes.&lt;/p&gt;
&lt;p&gt;OGs:
&lt;img alt="" src="https://i.imgur.com/odHwv7Y.png"&gt;
NCBI:
&lt;img alt="" src="https://i.imgur.com/JepCVev.png"&gt;&lt;/p&gt;
&lt;p&gt;This was confusing, so I went digging a little further and posted this &lt;a href="https://github.com/davidemms/OrthoFinder/issues/240"&gt;question&lt;/a&gt; on the OrthoFinder repository. &lt;/p&gt;
&lt;p&gt;Is this what one might expect from expression summarized by OGs? There might be a different way to incorporate OrthoFinder results to this analysis. (Open to suggestions!)&lt;/p&gt;
&lt;p&gt;After going through this exercise, I'm further convinced that it is fine to use counts summarized by NCBI genes (or another annotation database). Decisions for what gene to assign to a contig might need some tweaking. This was helpful to go through by hand. Below I've pasted pieces of output files that I've created through scripts and various tools.&lt;/p&gt;
&lt;h2&gt;Example 1: What do the salmon quantification counts look like?&lt;/h2&gt;
&lt;p&gt;I started off by looking at the annotations and raw salmon output from each replicate for one of my species, &lt;em&gt;Adinia xenica&lt;/em&gt; (the diamond killfish). &lt;/p&gt;
&lt;p&gt;Since &lt;a href="https://github.com/trinityrnaseq/trinityrnaseq/wiki/Output-of-Trinity-Assembly"&gt;Trinity groups contigs based on shared sequence content&lt;/a&gt;, we would expect this transcript cluster to encode for mostly same gene. According to the Trinity assembler, these contigs should be grouped together. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TrinityID   seqid
TRINITY_DN8_c0_g1_i7    Transcript_0
TRINITY_DN8_c0_g1_i6    Transcript_1
TRINITY_DN8_c0_g1_i1    Transcript_2
TRINITY_DN8_c0_g1_i9    Transcript_3
TRINITY_DN8_c0_g1_i4    Transcript_4
TRINITY_DN8_c0_g1_i5    Transcript_5
TRINITY_DN8_c0_g1_i2    Transcript_6
TRINITY_DN8_c0_g1_i3    Transcript_7
TRINITY_DN8_c0_g2_i1    Transcript_8
TRINITY_DN8_c1_g1_i8    Transcript_9
TRINITY_DN8_c1_g1_i1    Transcript_10
TRINITY_DN8_c1_g1_i6    Transcript_11
TRINITY_DN8_c1_g1_i9    Transcript_12
TRINITY_DN8_c1_g1_i3    Transcript_13
TRINITY_DN8_c1_g1_i4    Transcript_14
TRINITY_DN8_c1_g1_i7    Transcript_15
TRINITY_DN8_c1_g1_i5    Transcript_16
TRINITY_DN8_c6_g1_i2    Transcript_17
TRINITY_DN8_c6_g1_i7    Transcript_18
TRINITY_DN8_c6_g1_i4    Transcript_19
TRINITY_DN8_c6_g1_i1    Transcript_20
TRINITY_DN8_c12_g1_i1   Transcript_21
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;At a glance, the transcript-level quantification results for the same block of transcripts &lt;code&gt;TRINITY_DN8&lt;/code&gt; seem reasonably consistent across samples.&lt;/p&gt;
&lt;p&gt;A_xenica_BW_1.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN8_c0_g1_i7    1034    813.841 99.087379   1090.219
TRINITY_DN8_c0_g1_i6    1035    814.841 508.960349  5606.770
TRINITY_DN8_c0_g1_i1    3195    2974.841    174.769095  7028.853
TRINITY_DN8_c0_g1_i9    2874    2653.841    142.575381  5115.352
TRINITY_DN8_c0_g1_i4    2155    1934.841    121.333793  3173.826
TRINITY_DN8_c0_g1_i5    2107    1886.841    62.580847   1596.367
TRINITY_DN8_c0_g1_i2    1083    862.841 648.745796  7567.654
TRINITY_DN8_c0_g1_i3    986 766.007 75.482570   781.692
TRINITY_DN8_c0_g2_i1    961 741.012 5.490111    55.000
TRINITY_DN8_c1_g1_i8    5552    5331.841    0.213893    15.418
TRINITY_DN8_c1_g1_i1    4350    4129.841    14.202186   792.948
TRINITY_DN8_c1_g1_i6    1785    1564.841    2.334244    49.382
TRINITY_DN8_c1_g1_i9    5729    5508.841    0.000000    0.000
TRINITY_DN8_c1_g1_i3    1920    1699.841    25.058676   575.867
TRINITY_DN8_c1_g1_i4    4375    4154.841    0.000000    0.000
TRINITY_DN8_c1_g1_i7    4198    3977.841    37.372865   2009.833
TRINITY_DN8_c1_g1_i5    5704    5483.841    1.180930    87.552
TRINITY_DN8_c6_g1_i2    2373    2152.841    0.000000    0.000
TRINITY_DN8_c6_g1_i7    2371    2150.841    1.360954    39.574
TRINITY_DN8_c6_g1_i4    1995    1774.841    0.309493    7.426
TRINITY_DN8_c6_g1_i1    2369    2148.841    0.000000    0.000
TRINITY_DN8_c12_g1_i1   391 172.918 0.855528    2.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_BW_2.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN8_c0_g1_i7    1034    784.489 59.392151   460.803
TRINITY_DN8_c0_g1_i6    1035    785.489 388.568757  3018.610
TRINITY_DN8_c0_g1_i1    3195    2945.489    51.097357   1488.521
TRINITY_DN8_c0_g1_i9    2874    2624.489    425.297355  11039.176
TRINITY_DN8_c0_g1_i4    2155    1905.489    118.953657  2241.731
TRINITY_DN8_c0_g1_i5    2107    1857.489    41.453127   761.523
TRINITY_DN8_c0_g1_i2    1083    833.489 793.453684  6540.645
TRINITY_DN8_c0_g1_i3    986 736.730 31.564827   229.991
TRINITY_DN8_c0_g2_i1    961 711.735 1.136507    8.000
TRINITY_DN8_c1_g1_i8    5552    5302.489    0.544643    28.562
TRINITY_DN8_c1_g1_i1    4350    4100.489    9.770186    396.221
TRINITY_DN8_c1_g1_i6    1785    1535.489    2.184526    33.174
TRINITY_DN8_c1_g1_i9    5729    5479.489    0.000000    0.000
TRINITY_DN8_c1_g1_i3    1920    1670.489    13.325110   220.147
TRINITY_DN8_c1_g1_i4    4375    4125.489    0.000000    0.000
TRINITY_DN8_c1_g1_i7    4198    3948.489    34.021297   1328.560
TRINITY_DN8_c1_g1_i5    5704    5454.489    1.822869    98.335
TRINITY_DN8_c6_g1_i2    2373    2123.489    1.634330    34.323
TRINITY_DN8_c6_g1_i7    2371    2121.489    0.000000    0.000
TRINITY_DN8_c6_g1_i4    1995    1745.489    1.429456    24.677
TRINITY_DN8_c6_g1_i1    2369    2119.489    0.000000    0.000
TRINITY_DN8_c12_g1_i1   391 148.487 0.680946    1.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_BW_3.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN8_c0_g1_i7    1034    806.011 81.299939   878.686
TRINITY_DN8_c0_g1_i6    1035    807.011 419.558693  4540.195
TRINITY_DN8_c0_g1_i1    3195    2967.011    110.800505  4408.222
TRINITY_DN8_c0_g1_i9    2874    2646.011    364.374601  12928.325
TRINITY_DN8_c0_g1_i4    2155    1927.011    102.662765  2652.770
TRINITY_DN8_c0_g1_i5    2107    1879.011    47.025571   1184.857
TRINITY_DN8_c0_g1_i2    1083    855.011 752.616894  8628.753
TRINITY_DN8_c0_g1_i3    986 758.184 44.182512   449.188
TRINITY_DN8_c0_g2_i1    961 733.190 1.118854    11.000
TRINITY_DN8_c1_g1_i8    5552    5324.011    1.615538    115.334
TRINITY_DN8_c1_g1_i1    4350    4122.011    14.339296   792.573
TRINITY_DN8_c1_g1_i6    1785    1557.011    1.727863    36.075
TRINITY_DN8_c1_g1_i9    5729    5501.011    0.000000    0.000
TRINITY_DN8_c1_g1_i3    1920    1692.011    15.569566   353.250
TRINITY_DN8_c1_g1_i4    4375    4147.011    0.000000    0.000
TRINITY_DN8_c1_g1_i7    4198    3970.011    33.733068   1795.767
TRINITY_DN8_c1_g1_i5    5704    5476.011    0.000000    0.000
TRINITY_DN8_c6_g1_i2    2373    2145.011    0.000000    0.000
TRINITY_DN8_c6_g1_i7    2371    2143.011    0.000000    0.000
TRINITY_DN8_c6_g1_i4    1995    1767.011    0.832253    19.720
TRINITY_DN8_c6_g1_i1    2369    2141.011    1.890698    54.280
TRINITY_DN8_c12_g1_i1   391 165.937 0.449423    1.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_FW_1.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN8_c0_g1_i7    1034    788.009 47.336066   401.851
TRINITY_DN8_c0_g1_i6    1035    789.009 312.887387  2659.571
TRINITY_DN8_c0_g1_i1    3195    2949.009    112.315309  3568.261
TRINITY_DN8_c0_g1_i9    2874    2628.009    324.583185  9189.553
TRINITY_DN8_c0_g1_i4    2155    1909.009    148.931103  3062.915
TRINITY_DN8_c0_g1_i5    2107    1861.009    63.996918   1283.066
TRINITY_DN8_c0_g1_i2    1083    837.009 673.591852  6073.912
TRINITY_DN8_c0_g1_i3    986 740.278 12.936307   103.168
TRINITY_DN8_c0_g2_i1    961 715.285 1.816801    14.000
TRINITY_DN8_c1_g1_i8    5552    5306.009    0.334470    19.119
TRINITY_DN8_c1_g1_i1    4350    4104.009    6.898364    304.997
TRINITY_DN8_c1_g1_i6    1785    1539.009    1.348775    22.363
TRINITY_DN8_c1_g1_i9    5729    5483.009    0.000000    0.000
TRINITY_DN8_c1_g1_i3    1920    1674.009    7.257498    130.884
TRINITY_DN8_c1_g1_i4    4375    4129.009    0.211485    9.407
TRINITY_DN8_c1_g1_i7    4198    3952.009    29.853242   1271.016
TRINITY_DN8_c1_g1_i5    5704    5458.009    1.330174    78.214
TRINITY_DN8_c6_g1_i2    2373    2127.009    1.172117    26.859
TRINITY_DN8_c6_g1_i7    2371    2125.009    0.000000    0.000
TRINITY_DN8_c6_g1_i4    1995    1749.009    0.236377    4.454
TRINITY_DN8_c6_g1_i1    2369    2123.009    0.292400    6.688
TRINITY_DN8_c12_g1_i1   391 151.312 0.613457    1.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_FW_2.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN8_c0_g1_i7    1034    774.910 26.168216   92.852
TRINITY_DN8_c0_g1_i6    1035    775.910 368.774479  1310.196
TRINITY_DN8_c0_g1_i1    3195    2935.910    65.835643   885.050
TRINITY_DN8_c0_g1_i9    2874    2614.910    344.014191  4119.052
TRINITY_DN8_c0_g1_i4    2155    1895.910    96.229381   835.391
TRINITY_DN8_c0_g1_i5    2107    1847.910    46.501945   393.474
TRINITY_DN8_c0_g1_i2    1083    823.910 763.951306  2882.103
TRINITY_DN8_c0_g1_i3    986 727.293 18.882308   62.882
TRINITY_DN8_c0_g2_i1    961 702.316 0.932878    3.000
TRINITY_DN8_c1_g1_i8    5552    5292.910    1.212649    29.390
TRINITY_DN8_c1_g1_i1    4350    4090.910    1.688974    31.638
TRINITY_DN8_c1_g1_i6    1785    1525.910    0.000000    0.000
TRINITY_DN8_c1_g1_i9    5729    5469.910    0.000000    0.000
TRINITY_DN8_c1_g1_i3    1920    1660.910    14.384900   109.400
TRINITY_DN8_c1_g1_i4    4375    4115.910    3.276124    61.743
TRINITY_DN8_c1_g1_i7    4198    3938.910    19.118940   344.829
TRINITY_DN8_c1_g1_i5    5704    5444.910    0.000000    0.000
TRINITY_DN8_c6_g1_i2    2373    2113.910    0.000000    0.000
TRINITY_DN8_c6_g1_i7    2371    2111.910    0.000000    0.000
TRINITY_DN8_c6_g1_i4    1995    1735.910    1.028673    8.177
TRINITY_DN8_c6_g1_i1    2369    2109.910    0.602774    5.823
TRINITY_DN8_c12_g1_i1   391 145.374 0.000000    0.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_FW_3.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN8_c0_g1_i7    1034    792.418 22.799205   135.849
TRINITY_DN8_c0_g1_i6    1035    793.418 367.594140  2193.075
TRINITY_DN8_c0_g1_i1    3195    2953.418    174.862317  3883.328
TRINITY_DN8_c0_g1_i9    2874    2632.418    237.778604  4706.635
TRINITY_DN8_c0_g1_i4    2155    1913.418    122.259545  1759.039
TRINITY_DN8_c0_g1_i5    2107    1865.418    54.748614   767.949
TRINITY_DN8_c0_g1_i2    1083    841.418 639.029431  4043.110
TRINITY_DN8_c0_g1_i3    986 744.682 1.430236    8.009
TRINITY_DN8_c0_g2_i1    961 719.700 2.032631    11.000
TRINITY_DN8_c1_g1_i8    5552    5310.418    1.565068    62.495
TRINITY_DN8_c1_g1_i1    4350    4108.418    5.263584    162.607
TRINITY_DN8_c1_g1_i6    1785    1543.418    5.029330    58.368
TRINITY_DN8_c1_g1_i9    5729    5487.418    0.000000    0.000
TRINITY_DN8_c1_g1_i3    1920    1678.418    10.760137   135.800
TRINITY_DN8_c1_g1_i4    4375    4133.418    3.783087    117.581
TRINITY_DN8_c1_g1_i7    4198    3956.418    22.526090   670.148
TRINITY_DN8_c1_g1_i5    5704    5462.418    0.000000    0.000
TRINITY_DN8_c6_g1_i2    2373    2131.418    0.000000    0.000
TRINITY_DN8_c6_g1_i7    2371    2129.418    0.000000    0.000
TRINITY_DN8_c6_g1_i4    1995    1753.418    1.050799    13.854
TRINITY_DN8_c6_g1_i1    2369    2127.418    0.509199    8.146
TRINITY_DN8_c12_g1_i1   391 156.028 1.704682    2.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_transfer_1.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN8_c0_g1_i7    1034    761.427 42.045850   183.616
TRINITY_DN8_c0_g1_i6    1035    762.427 421.240379  1841.993
TRINITY_DN8_c0_g1_i1    3195    2922.427    82.092914   1375.969
TRINITY_DN8_c0_g1_i9    2874    2601.427    431.688220  6440.822
TRINITY_DN8_c0_g1_i4    2155    1882.427    119.424714  1289.353
TRINITY_DN8_c0_g1_i5    2107    1834.427    49.064477   516.211
TRINITY_DN8_c0_g1_i2    1083    810.427 626.969454  2914.204
TRINITY_DN8_c0_g1_i3    986 713.872 24.696449   101.115
TRINITY_DN8_c0_g2_i1    961 688.889 1.012398    4.000
TRINITY_DN8_c1_g1_i8    5552    5279.427    1.365849    41.357
TRINITY_DN8_c1_g1_i1    4350    4077.427    19.437530   454.555
TRINITY_DN8_c1_g1_i6    1785    1512.427    0.000000    0.000
TRINITY_DN8_c1_g1_i9    5729    5456.427    0.000000    0.000
TRINITY_DN8_c1_g1_i3    1920    1647.427    32.650452   308.500
TRINITY_DN8_c1_g1_i4    4375    4102.427    0.000000    0.000
TRINITY_DN8_c1_g1_i7    4198    3925.427    37.025857   833.588
TRINITY_DN8_c1_g1_i5    5704    5431.427    0.000000    0.000
TRINITY_DN8_c6_g1_i2    2373    2100.427    0.000000    0.000
TRINITY_DN8_c6_g1_i7    2371    2098.427    0.000000    0.000
TRINITY_DN8_c6_g1_i4    1995    1722.427    1.187644    11.732
TRINITY_DN8_c6_g1_i1    2369    2096.427    2.683661    32.268
TRINITY_DN8_c12_g1_i1   391 135.535 0.000000    0.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_transfer_2.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN8_c0_g1_i7    1034    771.393 39.898805   341.813
TRINITY_DN8_c0_g1_i6    1035    772.393 1003.467606 8607.854
TRINITY_DN8_c0_g1_i1    3195    2932.393    230.111051  7493.986
TRINITY_DN8_c0_g1_i9    2874    2611.393    256.161817  7429.162
TRINITY_DN8_c0_g1_i4    2155    1892.393    56.405708   1185.462
TRINITY_DN8_c0_g1_i5    2107    1844.393    43.565650   892.382
TRINITY_DN8_c0_g1_i2    1083    820.393 1091.461340 9944.513
TRINITY_DN8_c0_g1_i3    986 723.703 23.367980   187.817
TRINITY_DN8_c0_g2_i1    961 698.716 3.092980    24.001
TRINITY_DN8_c1_g1_i8    5552    5289.393    1.448678    85.100
TRINITY_DN8_c1_g1_i1    4350    4087.393    5.006828    227.281
TRINITY_DN8_c1_g1_i6    1785    1522.393    3.087889    52.209
TRINITY_DN8_c1_g1_i9    5729    5466.393    0.000000    0.000
TRINITY_DN8_c1_g1_i3    1920    1657.393    9.252460    170.308
TRINITY_DN8_c1_g1_i4    4375    4112.393    4.877161    222.749
TRINITY_DN8_c1_g1_i7    4198    3935.393    32.406373   1416.354
TRINITY_DN8_c1_g1_i5    5704    5441.393    0.000000    0.000
TRINITY_DN8_c6_g1_i2    2373    2110.393    0.261327    6.125
TRINITY_DN8_c6_g1_i7    2371    2108.393    0.000000    0.000
TRINITY_DN8_c6_g1_i4    1995    1732.393    0.159295    3.065
TRINITY_DN8_c6_g1_i1    2369    2106.393    2.257490    52.810
TRINITY_DN8_c12_g1_i1   391 138.140 1.303641    2.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_transfer_3.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN8_c0_g1_i7    1034    782.654 60.180869   339.372
TRINITY_DN8_c0_g1_i6    1035    783.654 448.120287  2530.270
TRINITY_DN8_c0_g1_i1    3195    2943.654    154.230800  3271.191
TRINITY_DN8_c0_g1_i9    2874    2622.654    303.041947  5726.533
TRINITY_DN8_c0_g1_i4    2155    1903.654    109.596180  1503.251
TRINITY_DN8_c0_g1_i5    2107    1855.654    43.912369   587.127
TRINITY_DN8_c0_g1_i2    1083    831.654 780.203110  4675.179
TRINITY_DN8_c0_g1_i3    986 734.924 35.517974   188.078
TRINITY_DN8_c0_g2_i1    961 709.935 2.736916    14.000
TRINITY_DN8_c1_g1_i8    5552    5300.654    0.000000    0.000
TRINITY_DN8_c1_g1_i1    4350    4098.654    6.297119    185.965
TRINITY_DN8_c1_g1_i6    1785    1533.654    6.600886    72.942
TRINITY_DN8_c1_g1_i9    5729    5477.654    1.543412    60.915
TRINITY_DN8_c1_g1_i3    1920    1668.654    33.524846   403.071
TRINITY_DN8_c1_g1_i4    4375    4123.654    7.936309    235.803
TRINITY_DN8_c1_g1_i7    4198    3946.654    50.227757   1428.305
TRINITY_DN8_c1_g1_i5    5704    5452.654    0.000000    0.000
TRINITY_DN8_c6_g1_i2    2373    2121.654    0.000000    0.000
TRINITY_DN8_c6_g1_i7    2371    2119.654    0.000000    0.000
TRINITY_DN8_c6_g1_i4    1995    1743.654    1.010916    12.701
TRINITY_DN8_c6_g1_i1    2369    2117.654    1.658089    25.299
TRINITY_DN8_c12_g1_i1   391 146.630 0.000000    0.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Each of these contigs in theory represent a transcript. What are they?&lt;/p&gt;
&lt;h2&gt;Annotations from the dammit pipeline&lt;/h2&gt;
&lt;p&gt;I have annotated each transcriptome using Camille Scott's &lt;a href="http://dib-lab.github.io/dammit/"&gt;dammit&lt;/a&gt; (version 1.1) pipeline using three custom amino acid databases from &lt;a href="http://uswest.ensembl.org/Fundulus_heteroclitus/Info/Index"&gt;Ensembl&lt;/a&gt;, &lt;a href="http://arthropods.eugenes.org/EvidentialGene/vertebrates/killifish/Genes/"&gt;EviGene&lt;/a&gt;, and &lt;a href="https://www.ncbi.nlm.nih.gov/genome/743"&gt;NCBI&lt;/a&gt; annotations of the &lt;em&gt;Fundulus heteroclitus&lt;/em&gt; genome. Several steps were taken to choose which annotation to assign to each contig. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make .csv file: &lt;a href="https://github.com/WhiteheadLab/RNAseq_15killifish/blob/master/notebooks/dammit-Trinity_conversions.ipynb"&gt;connect Trinity transcript ID to dammit transcript ID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Append .csv file &lt;a href="https://github.com/WhiteheadLab/RNAseq_15killifish/blob/master/notebooks/makeEnsemblannotationstablefromdammit.ipynb"&gt;connecting to transcript annotations from each database (NCBI, Ensembl, EviGene)&lt;/a&gt;. Assumes one transcript makes one protein. Picks the annotation from each database with the highest length and drops all other duplicates from the same transcript/database. Ends up with three columns of annotations for each transcript, one from each database.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/WhiteheadLab/RNAseq_15killifish/blob/master/notebooks/annotations_addingOG.ipynb"&gt;Connect annotation table to OGs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The resulting file &lt;a href="https://osf.io/ux3tn/"&gt;A_xenica.annotations.OGs.merged.csv&lt;/a&gt; contains all merged annotations for this one species, &lt;em&gt;Adinia xenica&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;The transcript, &lt;code&gt;TRINITY_DN8_c0_g1_i7&lt;/code&gt; is also known as &lt;code&gt;Transcript_0&lt;/code&gt; (the dammit pipeline renames the transcripts) and matches with the annotations &lt;code&gt;Funhe2EKm033401t1&lt;/code&gt; and &lt;code&gt;XP_012730079.1&lt;/code&gt;, which is a &lt;a href="https://www.ncbi.nlm.nih.gov/gene/?term=XP_012730079.1"&gt;cold-inducible RNA-binding protein isoform X2 from the &lt;em&gt;Fundulus heteroclitus&lt;/em&gt; genome&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Transcripts 17-21 have no annotation from any of the databases provided to the dammit pipeline. Were they quantified by salmon? Not really. See last 5 contigs in each list above. They are consistently lower compared to quant of other contigs, which supposedly are the same thing. This indicates a potential assembly mishap with these contigs.&lt;/p&gt;
&lt;p&gt;There is no OG for this grouping. Why not?&lt;/p&gt;
&lt;p&gt;Now, let's compare the 3 different annotation types that we have available: NCBI, EviGene, and Ensembl.&lt;/p&gt;
&lt;p&gt;Therea are five NCBI IDs that match to sequences in this transcript block:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;NCBI&lt;/span&gt;    &lt;span class="n"&gt;start_x&lt;/span&gt; &lt;span class="n"&gt;end_x&lt;/span&gt;   &lt;span class="n"&gt;length_x&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012730079&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cold&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;inducible&lt;/span&gt; &lt;span class="n"&gt;RNA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X2&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="mi"&gt;82&lt;/span&gt;  &lt;span class="mi"&gt;258&lt;/span&gt; &lt;span class="mi"&gt;176&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012730080&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cold&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;inducible&lt;/span&gt; &lt;span class="n"&gt;RNA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X3&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="mi"&gt;82&lt;/span&gt;  &lt;span class="mi"&gt;244&lt;/span&gt; &lt;span class="mi"&gt;162&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                      
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012730079&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cold&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;inducible&lt;/span&gt; &lt;span class="n"&gt;RNA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X2&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="mi"&gt;82&lt;/span&gt;  &lt;span class="mi"&gt;259&lt;/span&gt; &lt;span class="mi"&gt;177&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012730081&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cold&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;inducible&lt;/span&gt; &lt;span class="n"&gt;RNA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X4&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="mi"&gt;82&lt;/span&gt;  &lt;span class="mi"&gt;243&lt;/span&gt; &lt;span class="mi"&gt;161&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012730076&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cold&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;inducible&lt;/span&gt; &lt;span class="n"&gt;RNA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="mi"&gt;82&lt;/span&gt;  &lt;span class="mi"&gt;260&lt;/span&gt; &lt;span class="mi"&gt;178&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012730080&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cold&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;inducible&lt;/span&gt; &lt;span class="n"&gt;RNA&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X3&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="mi"&gt;82&lt;/span&gt;  &lt;span class="mi"&gt;242&lt;/span&gt; &lt;span class="mi"&gt;160&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012735776&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;zinc&lt;/span&gt; &lt;span class="n"&gt;finger&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;aebp2&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;394&lt;/span&gt; &lt;span class="mi"&gt;604&lt;/span&gt; &lt;span class="mi"&gt;210&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012735776&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;zinc&lt;/span&gt; &lt;span class="n"&gt;finger&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;aebp2&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;445&lt;/span&gt; &lt;span class="mi"&gt;657&lt;/span&gt; &lt;span class="mi"&gt;212&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012735776&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;zinc&lt;/span&gt; &lt;span class="n"&gt;finger&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;aebp2&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;394&lt;/span&gt; &lt;span class="mi"&gt;499&lt;/span&gt; &lt;span class="mi"&gt;105&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012735776&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;zinc&lt;/span&gt; &lt;span class="n"&gt;finger&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;aebp2&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;453&lt;/span&gt; &lt;span class="mi"&gt;663&lt;/span&gt; &lt;span class="mi"&gt;210&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012735776&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;zinc&lt;/span&gt; &lt;span class="n"&gt;finger&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;aebp2&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;394&lt;/span&gt; &lt;span class="mi"&gt;595&lt;/span&gt; &lt;span class="mi"&gt;201&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012735776&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;zinc&lt;/span&gt; &lt;span class="n"&gt;finger&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;aebp2&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;453&lt;/span&gt; &lt;span class="mi"&gt;665&lt;/span&gt; &lt;span class="mi"&gt;212&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012735776&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;zinc&lt;/span&gt; &lt;span class="n"&gt;finger&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;aebp2&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;394&lt;/span&gt; &lt;span class="mi"&gt;606&lt;/span&gt; &lt;span class="mi"&gt;212&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_012735776&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;zinc&lt;/span&gt; &lt;span class="n"&gt;finger&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="n"&gt;aebp2&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;445&lt;/span&gt; &lt;span class="mi"&gt;655&lt;/span&gt; &lt;span class="mi"&gt;210&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ensembl IDs are slightly different:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Ensembl_info    start   end length
ENSFHEP00000001828  82  259 177
ENSFHEP00000001826  82  244 162
(missing Transcript_2)
ENSFHEP00000001828  82  243 161
(missing Transcript_4)
ENSFHEP00000022306  82  243 161
ENSFHEP00000001826  82  260 178
ENSFHEP00000001828  82  243 161
(missing Transcript_8)
ENSFHEP00000025887  394 604 210
ENSFHEP00000025887  445 657 212
ENSFHEP00000025887  394 499 105
ENSFHEP00000025887  453 663 210
ENSFHEP00000025887  394 595 201
ENSFHEP00000025887  453 665 212
ENSFHEP00000025887  394 606 212
ENSFHEP00000025887  445 655 210
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and EviGene simliar to Ensembl:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;EviGene_transcript  start_y end_y   length_y
Funhe2EKm033401t1   82  258 176
Funhe2EKm033401t1   82  244 162
(missing Transcript_2)
Funhe2EKm033401t1   82  242 160
(missing Transcript_4)  
Funhe2EKm033401t1   82  242 160
Funhe2EKm033401t1   82  260 178
Funhe2EKm033401t1   82  242 160
(missing Transcript_8)  
Funhe2EKm038372t1   394 604 210
Funhe2EKm038372t1   445 657 212
Funhe2EKm038372t2   394 499 105
Funhe2EKm038372t1   453 663 210
Funhe2EKm038372t1   394 595 201
Funhe2EKm038372t1   453 665 212
Funhe2EKm038372t2   394 606 212
Funhe2EKm038372t1   445 655 210
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Collapsing with tximport&lt;/h2&gt;
&lt;p&gt;The Bioconductor package, &lt;a href="http://bioconductor.org/packages/release/bioc/html/tximport.html"&gt;tximport&lt;/a&gt; by &lt;a href="https://f1000research.com/articles/4-1521/"&gt;Soneson et al. 2015&lt;/a&gt; (awesome paper showing that gene-level analysis is more accurate than transcript-level) collapses/summarizes the counts for the same gene ID together.&lt;/p&gt;
&lt;p&gt;From &lt;a href="https://f1000research.com/articles/4-1521/"&gt;Soneson et al. 2015&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"...isoform quantification is more complex than the simple counting, due to the high degree of overlap among transcripts. Currently, there is no consensus regarding the optimal resolution or method for quantification and downstream analysis of transcriptomic output."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The steps for tximport:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make &lt;a href="https://github.com/WhiteheadLab/RNAseq_15killifish/blob/933769272ad2d9b5ba6e97f50bff980dddb3683d/notebooks/make_tx2gene.ipynb"&gt;separate tx2gene files for Ensembl, Evigene, NCBI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;a href="https://github.com/WhiteheadLab/RNAseq_15killifish/blob/master/DE_scripts/tximport_annotations_species_29Jan2019.R"&gt;tximport 3 times (1 for each database) to collapse transcript counts by unique protein annotation ID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Summarize counts tables across species, one table for each: &lt;a href="https://github.com/WhiteheadLab/RNAseq_15killifish/blob/933769272ad2d9b5ba6e97f50bff980dddb3683d/scripts/4_merge_counts_tables_Evigene.ipynb"&gt;Evigene&lt;/a&gt;, &lt;a href="https://github.com/WhiteheadLab/RNAseq_15killifish/blob/933769272ad2d9b5ba6e97f50bff980dddb3683d/scripts/4_merge_counts_tables_NCBI.ipynb"&gt;NCBI&lt;/a&gt;, &lt;a href="https://github.com/WhiteheadLab/RNAseq_15killifish/blob/933769272ad2d9b5ba6e97f50bff980dddb3683d/scripts/4_merge_counts_tables_Ensembl.ipynb"&gt;Ensembl&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A file called 'tx2gene` is required for tximport, which consists of two columns:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tx2gene_ncbi &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; read.csv&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A_xenica_ncbi.tx2gene.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;colnames&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tx2gene_ncbi&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;-&lt;/span&gt;&lt;span class="kt"&gt;c&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;NCBI&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;head&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tx2gene_ncbi&lt;span class="p"&gt;)&lt;/span&gt;
                     Name           NCBI
&lt;span class="m"&gt;1&lt;/span&gt;    TRINITY_DN8_c0_g1_i7 XP_012730079.1
&lt;span class="m"&gt;2&lt;/span&gt;    TRINITY_DN8_c0_g1_i6 XP_012730080.1
&lt;span class="m"&gt;3&lt;/span&gt;    TRINITY_DN8_c1_g1_i1 XP_012735776.1
&lt;span class="m"&gt;4&lt;/span&gt;   TRINITY_DN14_c1_g1_i8 XP_021179903.1
&lt;span class="m"&gt;5&lt;/span&gt; TRINITY_DN7641_c0_g1_i5 XP_012714310.2
&lt;span class="m"&gt;6&lt;/span&gt; TRINITY_DN7606_c0_g2_i4 XP_012735011.1
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;tx2gene_ncbi&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;70774&lt;/span&gt;     &lt;span class="m"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The tx2gene file contains the information for which transcripts/contigs are to be collapsed by unique gene ID. The tximport function is run with the counts file, and summarized. 70,774 annotations get reduced to 21,650 genes. Note that the majority of the fragments (230,890) from the transcriptome are not annotated.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; txi_ncbi.salmon &lt;span class="o"&gt;&amp;lt;-&lt;/span&gt; tximport&lt;span class="p"&gt;(&lt;/span&gt;files&lt;span class="p"&gt;,&lt;/span&gt; type &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;salmon&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; tx2gene &lt;span class="o"&gt;=&lt;/span&gt; tx2gene_ncbi&lt;span class="p"&gt;)&lt;/span&gt;
reading &lt;span class="kr"&gt;in&lt;/span&gt; files with read_tsv
&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="m"&gt;9&lt;/span&gt; 
transcripts missing from tx2gene&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;230890&lt;/span&gt;
summarizing abundance
summarizing counts
summarizing &lt;span class="kp"&gt;length&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;dim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;txi_ncbi.salmon&lt;span class="o"&gt;$&lt;/span&gt;counts&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="m"&gt;21650&lt;/span&gt;     &lt;span class="m"&gt;9&lt;/span&gt;
write.csv&lt;span class="p"&gt;(&lt;/span&gt;txi_ncbi.salmon&lt;span class="o"&gt;$&lt;/span&gt;counts&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;A_xenica_counts.ncbi.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output after &lt;code&gt;tximport&lt;/code&gt;:&lt;/p&gt;
&lt;h3&gt;ENSEMBL&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ENSFHEP00000001828  6991.557    11733.51    14262.502   9701.572    4274.786    4851.493    6727.553    7969.737    6261.57
ENSFHEP00000001826  13174.424   9559.255    13168.948   8733.483    4192.299    6236.185    4756.197    18552.367   7205.449
ENSFHEP00000022306  1596.367    761.523 1184.857    1283.066    393.474 767.949 516.211 892.382 587.127
ENSFHEP00000025887  4019    2385.999    3483.999    2027    669 1378.999    1836    2428.001    2801.001
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;NCBI:&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;XP_012730079.1  4277.751    2712.994    3543.154    3477.77 937.243 1899.893    1479.687    1532.331    1847.036
XP_012730080.1  6390.756    3251.141    4992.686    2762.739    1373.078    2201.084    1944.108    8803.616    2723.935
XP_012730081.1  1596.367    761.523 1184.857    1283.066    393.474 767.949 516.211 892.382 587.127
XP_012730076.1  7578.476    6542.645    8633.753    6080.608    2888.103    4047.111    2917.204    9949.523    4679.179
XP_012735776.1  4019    2385.999    3483.999    2027    669 1378.999    1836    2428.001    2801.001
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;EviGene (collapses at gene level)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Funhe2EKm033401 21786.876   22063.317   28626.56    19730.832   8872.15 11863.633   12008.679   27422.497   14058.146
Funhe2EKm038372 3934    2331.999    3389.999    1992    630 1326.999    1778    2366.001    2674.001
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Which one is correct?&lt;/p&gt;
&lt;h2&gt;Example 2: Which transcripts have OGs?&lt;/h2&gt;
&lt;p&gt;From this block of Trinity contigs, there are two OGs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    TRINITY_DN18_c0_g1_i16  Transcript_22
    TRINITY_DN18_c0_g1_i6   Transcript_23
    TRINITY_DN18_c0_g1_i17  Transcript_24
    TRINITY_DN18_c0_g1_i4   Transcript_25
    TRINITY_DN18_c0_g1_i8   Transcript_26
    TRINITY_DN18_c0_g1_i21  Transcript_27
    TRINITY_DN18_c0_g1_i9   Transcript_28
    TRINITY_DN18_c0_g1_i3   Transcript_29
    TRINITY_DN18_c0_g1_i11  Transcript_30
    TRINITY_DN18_c0_g1_i15  Transcript_31
    TRINITY_DN18_c0_g1_i7   Transcript_32
OG0001688   TRINITY_DN18_c0_g1_i10  Transcript_33
    TRINITY_DN18_c0_g1_i5   Transcript_34
OG0006300   TRINITY_DN18_c0_g1_i14  Transcript_35
    TRINITY_DN18_c0_g2_i1   Transcript_36
    TRINITY_DN18_c1_g1_i1   Transcript_37
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Why only these two contigs?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OG0001688   TRINITY_DN18_c0_g1_i10  Transcript_33
OG0006300   TRINITY_DN18_c0_g1_i14  Transcript_35
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The other contigs in the block have the same annotations.
Ensembl:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Ensembl_info    start   end length
ENSFHEP00000034241.1    149 705 556
ENSFHEP00000034241.1    180 283 103
ENSFHEP00000034241.1    149 299 150
ENSFHEP00000034241.1    149 705 556
ENSFHEP00000034241.1    149 705 556
ENSFHEP00000034241.1    149 705 556
ENSFHEP00000034241.1    149 705 556
ENSFHEP00000034241.1    149 239 90
ENSFHEP00000034241.1    149 705 556
ENSFHEP00000034241.1    149 705 556
ENSFHEP00000034241.1    149 705 556
(missing Transcript_33)
ENSFHEP00000034241.1    149 705 556
ENSFHEP00000034241.1    0   208 208
(missing Transcript_36)
(missing Transcript_37)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;NCBI:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;NCBI&lt;/span&gt;    &lt;span class="n"&gt;start_x&lt;/span&gt; &lt;span class="n"&gt;end_x&lt;/span&gt;   &lt;span class="n"&gt;length_x&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;1937&lt;/span&gt;    &lt;span class="mi"&gt;1822&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;180&lt;/span&gt; &lt;span class="mi"&gt;283&lt;/span&gt; &lt;span class="mi"&gt;103&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;299&lt;/span&gt; &lt;span class="mi"&gt;184&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;1170&lt;/span&gt;    &lt;span class="mi"&gt;1055&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;1440&lt;/span&gt;    &lt;span class="mi"&gt;1325&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;1834&lt;/span&gt;    &lt;span class="mi"&gt;1719&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;1472&lt;/span&gt;    &lt;span class="mi"&gt;1357&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;239&lt;/span&gt; &lt;span class="mi"&gt;124&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;1622&lt;/span&gt;    &lt;span class="mi"&gt;1507&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;1418&lt;/span&gt;    &lt;span class="mi"&gt;1303&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;1418&lt;/span&gt;    &lt;span class="mi"&gt;1303&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;182&lt;/span&gt; &lt;span class="mi"&gt;1225&lt;/span&gt;    &lt;span class="mi"&gt;1043&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;115&lt;/span&gt; &lt;span class="mi"&gt;1709&lt;/span&gt;    &lt;span class="mi"&gt;1594&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;216&lt;/span&gt; &lt;span class="mi"&gt;216&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_36&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_37&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;EviGene:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;EviGene_transcript  start_y end_y   length_y
Funhe2EKm036495t2   249 1937    1688
Funhe2EKm036495t2   180 283 103
Funhe2EKm036495t1   115 299 184
Funhe2EKm036495t1   115 1170    1055
Funhe2EKm036495t4   115 1514    1399
Funhe2EKm036495t2   249 1834    1585
Funhe2EKm036495t4   115 1457    1342
Funhe2EKm036495t1   115 239 124
Funhe2EKm036495t2   249 1622    1373
Funhe2EKm036495t1   115 1418    1303
Funhe2EKm036495t1   115 1418    1303
Funhe2EKm036495t2   182 1225    1043
Funhe2EKm036495t2   249 1709    1460
Funhe2EKm036495t7   0   254 254
(missing Transcript_36)
(missing Transcript_37)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here are the quantifications from salmon:&lt;/p&gt;
&lt;p&gt;A_xenica_BW_1&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN18_c0_g1_i16  6454    6233.841    30.846165   2599.639
TRINITY_DN18_c0_g1_i6   849 629.036 1.393892    11.854
TRINITY_DN18_c0_g1_i17  1091    870.841 0.578251    6.808
TRINITY_DN18_c0_g1_i4   4712    4491.841    3.797259    230.595
TRINITY_DN18_c0_g1_i8   6533    6312.841    0.000000    0.000
TRINITY_DN18_c0_g1_i21  7883    7662.841    0.256581    26.581
TRINITY_DN18_c0_g1_i9   6587    6366.841    0.256579    22.085
TRINITY_DN18_c0_g1_i3   884 664.026 0.327397    2.939
TRINITY_DN18_c0_g1_i11  5220    4999.841    0.501775    33.917
TRINITY_DN18_c0_g1_i15  6566    6345.841    0.333891    28.645
TRINITY_DN18_c0_g1_i7   6645    6424.841    0.000000    0.000
TRINITY_DN18_c0_g1_i10  3678    3457.841    0.219124    10.244
TRINITY_DN18_c0_g1_i5   5585    5364.841    0.064707    4.693
TRINITY_DN18_c0_g1_i14  765 545.061 0.000000    0.000
TRINITY_DN18_c0_g2_i1   871 651.029 0.568085    5.000
TRINITY_DN18_c1_g1_i1   364 147.523 1.002797    2.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_BW_2&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN18_c0_g1_i16  6454    6204.489    22.527351   1382.342
TRINITY_DN18_c0_g1_i6   849 599.790 0.216304    1.283
TRINITY_DN18_c0_g1_i17  1091    841.489 1.008484    8.393
TRINITY_DN18_c0_g1_i4   4712    4462.489    1.861701    82.165
TRINITY_DN18_c0_g1_i8   6533    6283.489    0.000000    0.000
TRINITY_DN18_c0_g1_i21  7883    7633.489    0.537603    40.587
TRINITY_DN18_c0_g1_i9   6587    6337.489    0.000000    0.000
TRINITY_DN18_c0_g1_i3   884 634.776 0.000000    0.000
TRINITY_DN18_c0_g1_i11  5220    4970.489    0.364668    17.927
TRINITY_DN18_c0_g1_i15  6566    6316.489    0.536235    33.499
TRINITY_DN18_c0_g1_i7   6645    6395.489    0.510573    32.295
TRINITY_DN18_c0_g1_i10  3678    3428.489    0.606792    20.575
TRINITY_DN18_c0_g1_i5   5585    5335.489    0.207233    10.935
TRINITY_DN18_c0_g1_i14  765 515.845 0.000000    0.000
TRINITY_DN18_c0_g2_i1   871 621.778 0.487850    3.000
TRINITY_DN18_c1_g1_i1   364 125.722 0.000000    0.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_BW_3&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN18_c0_g1_i16  6454    6226.011    24.577486   2051.870
TRINITY_DN18_c0_g1_i6   849 621.219 0.514900    4.289
TRINITY_DN18_c0_g1_i17  1091    863.011 0.000000    0.000
TRINITY_DN18_c0_g1_i4   4712    4484.011    1.503027    90.372
TRINITY_DN18_c0_g1_i8   6533    6305.011    0.000000    0.000
TRINITY_DN18_c0_g1_i21  7883    7655.011    0.604365    62.037
TRINITY_DN18_c0_g1_i9   6587    6359.011    0.100474    8.567
TRINITY_DN18_c0_g1_i3   884 656.210 0.191564    1.686
TRINITY_DN18_c0_g1_i11  5220    4992.011    0.496279    33.220
TRINITY_DN18_c0_g1_i15  6566    6338.011    0.606954    51.584
TRINITY_DN18_c0_g1_i7   6645    6417.011    0.394091    33.910
TRINITY_DN18_c0_g1_i10  3678    3450.011    0.445096    20.591
TRINITY_DN18_c0_g1_i5   5585    5357.011    0.457638    32.874
TRINITY_DN18_c0_g1_i14  765 537.258 0.000000    0.000
TRINITY_DN18_c0_g2_i1   871 643.215 0.463769    4.000
TRINITY_DN18_c1_g1_i1   364 140.974 0.000000    0.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_FW_1&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN18_c0_g1_i16  6454    6208.009    28.137333   1881.814
TRINITY_DN18_c0_g1_i6   849 603.321 0.805496    5.235
TRINITY_DN18_c0_g1_i17  1091    845.009 0.401774    3.658
TRINITY_DN18_c0_g1_i4   4712    4466.009    0.113310    5.452
TRINITY_DN18_c0_g1_i8   6533    6287.009    0.588066    39.830
TRINITY_DN18_c0_g1_i21  7883    7637.009    0.466627    38.391
TRINITY_DN18_c0_g1_i9   6587    6341.009    0.000000    0.000
TRINITY_DN18_c0_g1_i3   884 638.311 0.000000    0.000
TRINITY_DN18_c0_g1_i11  5220    4974.009    0.312379    16.739
TRINITY_DN18_c0_g1_i15  6566    6320.009    0.447333    30.457
TRINITY_DN18_c0_g1_i7   6645    6399.009    0.000000    0.000
TRINITY_DN18_c0_g1_i10  3678    3432.009    0.838865    31.016
TRINITY_DN18_c0_g1_i5   5585    5339.009    0.076627    4.407
TRINITY_DN18_c0_g1_i14  765 519.364 0.000000    0.000
TRINITY_DN18_c0_g2_i1   871 625.314 0.148443    1.000
TRINITY_DN18_c1_g1_i1   364 128.239 0.000000    0.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_FW_2&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN18_c0_g1_i16  6454    6194.910    30.603870   868.112
TRINITY_DN18_c0_g1_i6   849 590.386 0.000000    0.000
TRINITY_DN18_c0_g1_i17  1091    831.910 0.000000    0.000
TRINITY_DN18_c0_g1_i4   4712    4452.910    1.350102    27.528
TRINITY_DN18_c0_g1_i8   6533    6273.910    0.404081    11.608
TRINITY_DN18_c0_g1_i21  7883    7623.910    0.267190    9.327
TRINITY_DN18_c0_g1_i9   6587    6327.910    0.000000    0.000
TRINITY_DN18_c0_g1_i3   884 625.368 0.000000    0.000
TRINITY_DN18_c0_g1_i11  5220    4960.910    0.360567    8.191
TRINITY_DN18_c0_g1_i15  6566    6306.910    0.000000    0.000
TRINITY_DN18_c0_g1_i7   6645    6385.910    0.000000    0.000
TRINITY_DN18_c0_g1_i10  3678    3418.910    0.589855    9.234
TRINITY_DN18_c0_g1_i5   5585    5325.910    0.000000    0.000
TRINITY_DN18_c0_g1_i14  765 506.466 0.000000    0.000
TRINITY_DN18_c0_g2_i1   871 612.375 0.000000    0.000
TRINITY_DN18_c1_g1_i1   364 124.670 0.000000    0.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_FW_3&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN18_c0_g1_i16  6454    6212.418    28.368698   1325.205
TRINITY_DN18_c0_g1_i6   849 607.760 0.000000    0.000
TRINITY_DN18_c0_g1_i17  1091    849.418 0.000000    0.000
TRINITY_DN18_c0_g1_i4   4712    4470.418    2.193529    73.735
TRINITY_DN18_c0_g1_i8   6533    6291.418    0.000000    0.000
TRINITY_DN18_c0_g1_i21  7883    7641.418    0.525952    30.221
TRINITY_DN18_c0_g1_i9   6587    6345.418    0.000000    0.000
TRINITY_DN18_c0_g1_i3   884 642.740 1.555589    7.518
TRINITY_DN18_c0_g1_i11  5220    4978.418    0.596278    22.321
TRINITY_DN18_c0_g1_i15  6566    6324.418    0.000000    0.000
TRINITY_DN18_c0_g1_i7   6645    6403.418    0.000000    0.000
TRINITY_DN18_c0_g1_i10  3678    3436.418    0.000000    0.000
TRINITY_DN18_c0_g1_i5   5585    5343.418    0.000000    0.000
TRINITY_DN18_c0_g1_i14  765 523.809 0.000000    0.000
TRINITY_DN18_c0_g2_i1   871 629.746 0.000000    0.000
TRINITY_DN18_c1_g1_i1   364 132.991 0.999992    1.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_transfer_1&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN18_c0_g1_i16  6454    6181.427    31.122892   1103.388
TRINITY_DN18_c0_g1_i6   849 576.983 1.439049    4.762
TRINITY_DN18_c0_g1_i17  1091    818.427 0.000000    0.000
TRINITY_DN18_c0_g1_i4   4712    4439.427    3.659486    93.176
TRINITY_DN18_c0_g1_i8   6533    6260.427    0.000000    0.000
TRINITY_DN18_c0_g1_i21  7883    7610.427    0.463348    20.224
TRINITY_DN18_c0_g1_i9   6587    6314.427    0.000000    0.000
TRINITY_DN18_c0_g1_i3   884 611.950 3.059572    10.738
TRINITY_DN18_c0_g1_i11  5220    4947.427    0.730161    20.718
TRINITY_DN18_c0_g1_i15  6566    6293.427    0.000000    0.000
TRINITY_DN18_c0_g1_i7   6645    6372.427    0.208309    7.613
TRINITY_DN18_c0_g1_i10  3678    3405.427    1.070710    20.912
TRINITY_DN18_c0_g1_i5   5585    5312.427    0.179431    5.467
TRINITY_DN18_c0_g1_i14  765 493.125 0.000000    0.000
TRINITY_DN18_c0_g2_i1   871 598.958 0.582203    2.000
TRINITY_DN18_c1_g1_i1   364 114.839 1.518283    1.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_transfer_2&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN18_c0_g1_i16  6454    6191.393    22.196557   1526.255
TRINITY_DN18_c0_g1_i6   849 586.777 0.601647    3.921
TRINITY_DN18_c0_g1_i17  1091    828.393 0.173338    1.595
TRINITY_DN18_c0_g1_i4   4712    4449.393    1.696002    83.807
TRINITY_DN18_c0_g1_i8   6533    6270.393    0.287994    20.055
TRINITY_DN18_c0_g1_i21  7883    7620.393    0.326335    27.618
TRINITY_DN18_c0_g1_i9   6587    6324.393    0.327247    22.985
TRINITY_DN18_c0_g1_i3   884 621.753 0.228701    1.579
TRINITY_DN18_c0_g1_i11  5220    4957.393    0.340199    18.730
TRINITY_DN18_c0_g1_i15  6566    6303.393    0.000000    0.000
TRINITY_DN18_c0_g1_i7   6645    6382.393    0.000000    0.000
TRINITY_DN18_c0_g1_i10  3678    3415.393    0.257022    9.749
TRINITY_DN18_c0_g1_i5   5585    5322.393    0.417951    24.705
TRINITY_DN18_c0_g1_i14  765 502.823 0.000000    0.000
TRINITY_DN18_c0_g2_i1   871 608.760 0.000000    0.000
TRINITY_DN18_c1_g1_i1   364 116.576 0.772392    1.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A_xenica_transfer_3&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN18_c0_g1_i16  6454    6202.654    30.796098   1376.326
TRINITY_DN18_c0_g1_i6   849 598.002 0.000000    0.000
TRINITY_DN18_c0_g1_i17  1091    839.654 0.477857    2.891
TRINITY_DN18_c0_g1_i4   4712    4460.654    0.216472    6.957
TRINITY_DN18_c0_g1_i8   6533    6281.654    0.000000    0.000
TRINITY_DN18_c0_g1_i21  7883    7631.654    0.848633    46.665
TRINITY_DN18_c0_g1_i9   6587    6335.654    0.287240    13.112
TRINITY_DN18_c0_g1_i3   884 632.982 0.812986    3.708
TRINITY_DN18_c0_g1_i11  5220    4968.654    0.316341    11.325
TRINITY_DN18_c0_g1_i15  6566    6314.654    0.000000    0.000
TRINITY_DN18_c0_g1_i7   6645    6393.654    0.000000    0.000
TRINITY_DN18_c0_g1_i10  3678    3426.654    0.243650    6.016
TRINITY_DN18_c0_g1_i5   5585    5333.654    0.000000    0.000
TRINITY_DN18_c0_g1_i14  765 514.064 0.000000    0.000
TRINITY_DN18_c0_g2_i1   871 619.987 0.223856    1.000
TRINITY_DN18_c1_g1_i1   364 123.766 0.000000    0.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After &lt;code&gt;tximport&lt;/code&gt;, they all get collapsed.
Ensembl&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ENSFHEP00000034241.1    2968.756    1609.426    2370.409    2025.983    924.766 1459    1266.086    1731.25 1461.984
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;NCBI:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;XP_012733577.2  2979    1630.001    2391    2056.999    934 1459    1286.998    1740.999    1468
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;EviGene:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Funhe2EKm036495 2979    1630.001    2391    2056.999    934 1459    1286.998    1740.999    1468
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But, if we were to have quantified by OG we would get this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OG0001688   10.244  20.575  20.591  31.016  9.234   0   20.912  9.749   6.016
OG0006300   0   0   0   0   0   0   0   0   0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In &lt;em&gt;Fundulus heteroclitus&lt;/em&gt; (MDPL population), &lt;code&gt;OG0001688&lt;/code&gt; corresponds to these contigs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OG0001688   TRINITY_DN5678_c0_g1_i10    Transcript_90605
OG0006300   TRINITY_DN5678_c0_g1_i1 Transcript_90601
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is the block of transcripts identified by Trinity:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TRINITY_DN5678_c0_g1_i1 Transcript_90601
TRINITY_DN5678_c0_g1_i4 Transcript_90602
TRINITY_DN5678_c0_g1_i5 Transcript_90603
TRINITY_DN5678_c0_g1_i3 Transcript_90604
TRINITY_DN5678_c0_g1_i10    Transcript_90605
TRINITY_DN5678_c0_g1_i8 Transcript_90606
TRINITY_DN5678_c0_g1_i9 Transcript_90607
TRINITY_DN5678_c0_g1_i6 Transcript_90608
TRINITY_DN5678_c0_g1_i7 Transcript_90609
TRINITY_DN5678_c0_g1_i2 Transcript_90610
TRINITY_DN5678_c1_g1_i5 Transcript_90611
TRINITY_DN5678_c1_g1_i4 Transcript_90612
TRINITY_DN5678_c1_g1_i6 Transcript_90613
TRINITY_DN5678_c1_g1_i1 Transcript_90614
TRINITY_DN5678_c1_g1_i7 Transcript_90615
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Evigene&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;EviGene_transcript  start_y end_y   length_y
Funhe2EKm036495t7   0   332 332
Funhe2EKm036495t1   0   182 182
Funhe2EKm036495t2   0   173 173
Funhe2EKm036495t2   825 1570    745
Funhe2EKm036495t11  97  1172    1075
Funhe2EKm036495t9   440 496 56
Funhe2EKm036495t2   0   173 173
Funhe2EKm036495t2   0   1372    1372
Funhe2EKm036495t2   0   1372    1372
Funhe2EKm036495t2   231 1916    1685
(missing Transcript_90611)
(missing Transcript_90612)
(missing Transcript_90613)
Funhe2EKm036495t5   0   29  29
(missing Transcript_90615)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;NCBI:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;NCBI&lt;/span&gt;    &lt;span class="n"&gt;start_x&lt;/span&gt; &lt;span class="n"&gt;end_x&lt;/span&gt;   &lt;span class="n"&gt;length_x&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_90601&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;182&lt;/span&gt; &lt;span class="mi"&gt;182&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_90603&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;630&lt;/span&gt; &lt;span class="mi"&gt;630&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;97&lt;/span&gt;  &lt;span class="mi"&gt;1172&lt;/span&gt;    &lt;span class="mi"&gt;1075&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_90606&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_90607&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1372&lt;/span&gt;    &lt;span class="mi"&gt;1372&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;1372&lt;/span&gt;    &lt;span class="mi"&gt;1372&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;97&lt;/span&gt;  &lt;span class="mi"&gt;1916&lt;/span&gt;    &lt;span class="mi"&gt;1819&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_90611&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_90612&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_90613&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_90614&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_90615&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ensembl:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Ensembl_info    start   end length
(missing Transcript_90601)
(missing Transcript_90602)
(missing Transcript_90603)
(missing Transcript_90604)
ENSFHEP00000034241.1    131 687 556
(missing Transcript_90606)
(missing Transcript_90607)
(missing Transcript_90608)
(missing Transcript_90609)
ENSFHEP00000034241.1    131 687 556
(missing Transcript_90611)
(missing Transcript_90612)
(missing Transcript_90613)
(missing Transcript_90614)
(missing Transcript_90615)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In &lt;em&gt;Fundulus parvipinnis&lt;/em&gt; (the California killifish!), &lt;code&gt;OG0001688&lt;/code&gt; corresponds to a block of Trinity contigs that actually includes another OG &lt;code&gt;OG0013423&lt;/code&gt;, unlike the previous 2 species we looked at.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    TRINITY_DN2419_c0_g1_i7 Transcript_38462
OG0013423   TRINITY_DN2419_c0_g1_i1 Transcript_38463
    TRINITY_DN2419_c0_g1_i4 Transcript_38464
OG0001688   TRINITY_DN2419_c0_g1_i2 Transcript_38465
    TRINITY_DN2419_c0_g1_i5 Transcript_38466
    TRINITY_DN2419_c0_g1_i10    Transcript_38467
    TRINITY_DN2419_c0_g1_i9 Transcript_38468
OG0006300   TRINITY_DN2419_c0_g1_i11    Transcript_38469
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Going back to &lt;em&gt;A. xenica&lt;/em&gt;, this additional &lt;code&gt;OG0013423&lt;/code&gt; is there, but annotated to a different set of contigs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OG0013423   TRINITY_DN25142_c0_g1_i1    Transcript_171197
OG0034594   TRINITY_DN25142_c0_g2_i1    Transcript_171198
    TRINITY_DN25142_c0_g3_i1    Transcript_171199
    TRINITY_DN25142_c0_g3_i3    Transcript_171200
    TRINITY_DN25142_c0_g4_i1    Transcript_171201
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In &lt;em&gt;F. heteroclitus MDPL&lt;/em&gt;, &lt;code&gt;OG0013423&lt;/code&gt; corresponds to the contigs TRINITY_DN103077_c0_g1_i1 Transcript_365057, which annotate as&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ENSFHEP00000008638&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;128&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_021177365&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;kelch&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;128&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;span class="n"&gt;Funhe2EKm031909t4&lt;/span&gt;   &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;128&lt;/span&gt; &lt;span class="mi"&gt;128&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In &lt;em&gt;A. xenica&lt;/em&gt;, &lt;code&gt;OG0013423&lt;/code&gt; corresponds to the contigs TRINITY_DN25142_c0_g1_i1 Transcript_171197, which annotate to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;ENSFHEP00000008638&lt;/span&gt;  &lt;span class="mi"&gt;137&lt;/span&gt; &lt;span class="mi"&gt;263&lt;/span&gt; &lt;span class="mi"&gt;126&lt;/span&gt;
&lt;span class="n"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;XP_021177365&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;kelch&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;   &lt;span class="mi"&gt;137&lt;/span&gt; &lt;span class="mi"&gt;263&lt;/span&gt; &lt;span class="mi"&gt;126&lt;/span&gt;
&lt;span class="n"&gt;Funhe2EKm031909t4&lt;/span&gt;   &lt;span class="mi"&gt;137&lt;/span&gt; &lt;span class="mi"&gt;263&lt;/span&gt; &lt;span class="mi"&gt;126&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The kelch-like protein 32 is.&lt;/p&gt;
&lt;p&gt;Back to &lt;em&gt;F. parvipinnis&lt;/em&gt;, Ensembl annotations:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Ensembl_info    start   end length
(missing Transcript_38462)          
ENSFHEP00000008638  0   441 441
(missing Transcript_38464)
ENSFHEP00000021212  129 986 857
ENSFHEP00000021212  129 986 857
ENSFHEP00000008638  33  87  54
(missing Transcript_38468)  
(missing Transxript_38469)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;NCBI:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;NCBI&lt;/span&gt;    &lt;span class="n"&gt;start_x&lt;/span&gt; &lt;span class="n"&gt;end_x&lt;/span&gt;   &lt;span class="n"&gt;length_x&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;19&lt;/span&gt;  &lt;span class="mi"&gt;647&lt;/span&gt; &lt;span class="mi"&gt;628&lt;/span&gt;
&lt;span class="n"&gt;XP_021177365&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;kelch&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;441&lt;/span&gt; &lt;span class="mi"&gt;441&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_38464&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;96&lt;/span&gt;  &lt;span class="mi"&gt;1898&lt;/span&gt;    &lt;span class="mi"&gt;1802&lt;/span&gt;
&lt;span class="n"&gt;XP_012733577&lt;/span&gt;&lt;span class="mf"&gt;.2&lt;/span&gt;   &lt;span class="n"&gt;extended&lt;/span&gt; &lt;span class="n"&gt;synaptotagmin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;96&lt;/span&gt;  &lt;span class="mi"&gt;1587&lt;/span&gt;    &lt;span class="mi"&gt;1491&lt;/span&gt;
&lt;span class="n"&gt;XP_021177365&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;kelch&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;like&lt;/span&gt; &lt;span class="n"&gt;protein&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;33&lt;/span&gt;  &lt;span class="mi"&gt;87&lt;/span&gt;  &lt;span class="mi"&gt;54&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_38468&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing&lt;/span&gt; &lt;span class="n"&gt;Transcript_38469&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;EviGene (all contigs in group annotated):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;EviGene_transcript  start_y end_y   length_y
Funhe2EKm036495t2   19  647 628
Funhe2EKm031909t4   0   389 389
Funhe2EKm036495t9   573 629 56
Funhe2EKm036495t2   230 1898    1668
Funhe2EKm036495t2   230 1587    1357
Funhe2EKm031909t1   33  87  54
Funhe2EKm036495t9   19  309 290
Funhe2EKm036495t9   390 581 191
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The annotations for this group of transcripts in &lt;em&gt;F. parvipinnis&lt;/em&gt; are mixed between "synaptotagmin 1-like" and "kelch-like protein 32". The kelch-like protein 32 is what &lt;code&gt;OG0013423&lt;/code&gt; annotates to in &lt;em&gt;A. xenica&lt;/em&gt; and &lt;em&gt;F. heteroclitus&lt;/em&gt; (MDPL population).&lt;/p&gt;
&lt;p&gt;In &lt;em&gt;F. parvipinnis&lt;/em&gt;, &lt;code&gt;OG0013423&lt;/code&gt; is &lt;code&gt;TRINITY_DN2419_c0_g1_i1&lt;/code&gt;, which according to the annotation table is XP_021177365.1 "kelch-like protein 32 [Fundulus heteroclitus]". Taking the sequence from this contig and searching with blastx (translated nucleotide to protein). This comes up with a very strong hit (alignment score &amp;gt;200) as "extended synaptotagmin-1-like".&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.imgur.com/WBZm6fK.png"&gt;&lt;/p&gt;
&lt;p&gt;Which suggests that there is something funny going on with the decision-making when choosing which annotation should correspond to each contig. Rightnow I am chosing the best annotation based on the longest length of the annotation. Perhaps I should choose by E-value. (Which I have also tried, but this can lead to short annotations, so I was trying to avoid that. A combination would be nice! Titus has also suggested word clouds.) &lt;/p&gt;
&lt;p&gt;For quantification, we shouldn't be trusting isoform-level analysis. Basically, we don't have enough resolution with short-read sequencing to be confident in isoforms. Although, it would be nice. &lt;/p&gt;
&lt;p&gt;With tximport, we summarize transcript-level quantifications to the gene-level. &lt;/p&gt;
&lt;p&gt;From &lt;em&gt;F. parvipinnis&lt;/em&gt;, here are the quantifications:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OG0001688   46.069  66.116  120.001 0   109.918 78.347  129.212 185.894
OG0006300   0   0   0   0   0   0   43.543  0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;vs. NCBI:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;XP_012733577.2  786.135 699.509 692.094 555.582 808.328 676.633 1736.456    1815.904
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then &lt;em&gt;F. heteroclitus&lt;/em&gt; (MDPL population)*,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OG0006300   130.249 0   0   0   0   0   0   0
OG0001688   3.466   0   0   3.313   3.408   4.225   10.299  0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;vs. NCBI:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;XP_012733577.2  1680.51 1375.509    348.41  1772.139    1438.372    2272.3  2194.189    2298.48 5350.611
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Example 3: More OGs, new species, new block of transcripts&lt;/h2&gt;
&lt;p&gt;From the species, &lt;em&gt;F. diaphanus&lt;/em&gt;, we see 5 OGs in a block of transcripts:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OG0001948   TRINITY_DN28_c0_g1_i1   Transcript_72
    TRINITY_DN28_c0_g1_i6   Transcript_73
    TRINITY_DN28_c0_g1_i8   Transcript_74
    TRINITY_DN28_c0_g1_i9   Transcript_75
    TRINITY_DN28_c0_g1_i3   Transcript_76
    TRINITY_DN28_c0_g1_i11  Transcript_77
    TRINITY_DN28_c0_g1_i2   Transcript_78
    TRINITY_DN28_c0_g1_i12  Transcript_79
OG0010233   TRINITY_DN28_c0_g1_i10  Transcript_80
    TRINITY_DN28_c0_g1_i5   Transcript_81
OG0063265   TRINITY_DN28_c1_g1_i7   Transcript_82
    TRINITY_DN28_c1_g1_i5   Transcript_83
    TRINITY_DN28_c1_g1_i4   Transcript_84
OG0006676   TRINITY_DN28_c1_g1_i1   Transcript_85
    TRINITY_DN28_c1_g1_i3   Transcript_86
    TRINITY_DN28_c1_g1_i8   Transcript_87
OG0014822   TRINITY_DN28_c1_g1_i6   Transcript_88
    TRINITY_DN28_c1_g2_i1   Transcript_89
    TRINITY_DN28_c2_g1_i2   Transcript_90
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Annotations:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;XP_012721991&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;heterogeneous&lt;/span&gt; &lt;span class="n"&gt;nuclear&lt;/span&gt; &lt;span class="n"&gt;ribonucleoprotein&lt;/span&gt; &lt;span class="n"&gt;A1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="mi"&gt;51&lt;/span&gt;  &lt;span class="mi"&gt;385&lt;/span&gt; &lt;span class="mi"&gt;334&lt;/span&gt;

&lt;span class="n"&gt;XP_012721990&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;transcription&lt;/span&gt; &lt;span class="n"&gt;factor&lt;/span&gt; &lt;span class="n"&gt;NF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;E2&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;kDa&lt;/span&gt; &lt;span class="n"&gt;subunit&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="mi"&gt;584&lt;/span&gt; &lt;span class="mi"&gt;484&lt;/span&gt;
&lt;span class="n"&gt;XP_012721990&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;transcription&lt;/span&gt; &lt;span class="n"&gt;factor&lt;/span&gt; &lt;span class="n"&gt;NF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;E2&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;kDa&lt;/span&gt; &lt;span class="n"&gt;subunit&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="mi"&gt;584&lt;/span&gt; &lt;span class="mi"&gt;484&lt;/span&gt;
&lt;span class="n"&gt;XP_012721990&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;transcription&lt;/span&gt; &lt;span class="n"&gt;factor&lt;/span&gt; &lt;span class="n"&gt;NF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;E2&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;kDa&lt;/span&gt; &lt;span class="n"&gt;subunit&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="mi"&gt;584&lt;/span&gt; &lt;span class="mi"&gt;484&lt;/span&gt;
&lt;span class="n"&gt;XP_012721990&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;transcription&lt;/span&gt; &lt;span class="n"&gt;factor&lt;/span&gt; &lt;span class="n"&gt;NF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;E2&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;kDa&lt;/span&gt; &lt;span class="n"&gt;subunit&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="mi"&gt;584&lt;/span&gt; &lt;span class="mi"&gt;484&lt;/span&gt;
&lt;span class="n"&gt;XP_012721990&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;transcription&lt;/span&gt; &lt;span class="n"&gt;factor&lt;/span&gt; &lt;span class="n"&gt;NF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;E2&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;kDa&lt;/span&gt; &lt;span class="n"&gt;subunit&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="mi"&gt;584&lt;/span&gt; &lt;span class="mi"&gt;484&lt;/span&gt;
&lt;span class="n"&gt;XP_012721990&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;transcription&lt;/span&gt; &lt;span class="n"&gt;factor&lt;/span&gt; &lt;span class="n"&gt;NF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;E2&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;kDa&lt;/span&gt; &lt;span class="n"&gt;subunit&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="mi"&gt;584&lt;/span&gt; &lt;span class="mi"&gt;484&lt;/span&gt;
&lt;span class="n"&gt;XP_012721990&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;transcription&lt;/span&gt; &lt;span class="n"&gt;factor&lt;/span&gt; &lt;span class="n"&gt;NF&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;E2&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt; &lt;span class="n"&gt;kDa&lt;/span&gt; &lt;span class="n"&gt;subunit&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="mi"&gt;584&lt;/span&gt; &lt;span class="mi"&gt;484&lt;/span&gt;

&lt;span class="n"&gt;XP_012730480&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;proto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;oncogene&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Rel&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;36&lt;/span&gt;  &lt;span class="mi"&gt;343&lt;/span&gt; &lt;span class="mi"&gt;307&lt;/span&gt;
&lt;span class="n"&gt;XP_012730480&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;proto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;oncogene&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Rel&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;410&lt;/span&gt; &lt;span class="mi"&gt;864&lt;/span&gt; &lt;span class="mi"&gt;454&lt;/span&gt;
&lt;span class="n"&gt;XP_012730480&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;proto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;oncogene&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Rel&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;399&lt;/span&gt; &lt;span class="mi"&gt;853&lt;/span&gt; &lt;span class="mi"&gt;454&lt;/span&gt;
&lt;span class="n"&gt;XP_012730480&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;proto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;oncogene&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Rel&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;0&lt;/span&gt;   &lt;span class="mi"&gt;453&lt;/span&gt; &lt;span class="mi"&gt;453&lt;/span&gt;
&lt;span class="n"&gt;XP_012730480&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;proto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;oncogene&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Rel&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;13&lt;/span&gt;  &lt;span class="mi"&gt;509&lt;/span&gt; &lt;span class="mi"&gt;496&lt;/span&gt;

&lt;span class="n"&gt;XP_012730480&lt;/span&gt;&lt;span class="mf"&gt;.1&lt;/span&gt;   &lt;span class="n"&gt;proto&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;oncogene&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Rel&lt;/span&gt; &lt;span class="n"&gt;isoform&lt;/span&gt; &lt;span class="n"&gt;X1&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fundulus&lt;/span&gt; &lt;span class="n"&gt;heteroclitus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="mi"&gt;36&lt;/span&gt;  &lt;span class="mi"&gt;667&lt;/span&gt; &lt;span class="mi"&gt;631&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Collapsing by annotation (NCBI):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;XP_012721991.1  2777.577    3299.293    2789.927    4046.443    5003.293    1929.718
XP_012721990.1  1688.422    2243.942    1822.958    2403.199    3567.872    1152.61
XP_012730480.1  676 714 653.055 920.826 1305.761    490.443
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;vs. OG&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OG0001948   2776.577    3295.293    2788.927    4042.443    4999.264    1928.718
OG0010233   61.159  0   0   0   370.132 41.857
OG0063265   141.881 90.625  133.878 186.441 387.625 96.307
OG0006676   45.707  50.631  46.917  57.028  61.177  71.572
OG0014822   359.112 530.675 280.426 659.912 0   196.781
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Comparing to another species, &lt;em&gt;F. sciadicus&lt;/em&gt; same anntoated transcripts (NCBI):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;XP_012721991.1  10.508  3.071   1.219   4.901
XP_012721990.1  12205.829   3600.654    2652.671    5755.092
XP_012730480.1  2452.693    647.976 253.854 771.763
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;vs OGs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OG0001948   1.458   0   1.219   2.901
OG0010233   452.224 145.99  174.95  159.422
OG0063265 (not found)
OG0006676   23.076  3.142   3.247   7.264
OG0014822   2054.963    530.163 205.123 640.771
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And &lt;em&gt;F. grandis&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;XP_012721991.1  32290.661   1879.991    5055.72 13800.499   4881.964    5493.489    9913.475    4481.443    6775.423
XP_012721990.1  4515.679    248.354 650.991 1928.787    639.807 1168.021    1649.781    594.402 1059.746
XP_012730480.1  4292.514    207 729.779 1492.156    502.695 233.242 752.895 359.399 638.298
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;vs OGs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OG0001948   0   0   0   0   0   0   0   0   0
OG0010233   2391.307    130.033 241.47  882.285 273.383 463.887 637.584 324.89  346.008
OG0063265 (not found)
OG0006676   148.906 0   0   51.066  67.894  0   21.345  0   0
OG0014822   600.002 0   361.017 1011.995    90.218  101.711 165.621 148.755 159.42
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What's interesting is in the annotations above, &lt;code&gt;XP_012721990&lt;/code&gt; length 484 annotates to seven contigs from positions 100-584 of each contig. Is this an error in the assemblies?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TRINITY_DN28_c0_g1_i8   Transcript_74
TRINITY_DN28_c0_g1_i9   Transcript_75
TRINITY_DN28_c0_g1_i3   Transcript_76
TRINITY_DN28_c0_g1_i11  Transcript_77
TRINITY_DN28_c0_g1_i2   Transcript_78
TRINITY_DN28_c0_g1_i12  Transcript_79
TRINITY_DN28_c0_g1_i10  Transcript_80
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's take a look.
TRINITY_DN28_c0_g1_i8, length 3373
&lt;img alt="" src="https://i.imgur.com/sGWOpUW.png"&gt;&lt;/p&gt;
&lt;p&gt;TRINITY_DN28_c0_g1_i9, length 4352
&lt;img alt="" src="https://i.imgur.com/zKctPu0.png"&gt;&lt;/p&gt;
&lt;p&gt;TRINITY_DN28_c0_g1_i3, length 3246
&lt;img alt="" src="https://i.imgur.com/kpvKqbS.png"&gt;&lt;/p&gt;
&lt;p&gt;TRINITY_DN28_c0_g1_i2, length 4109
&lt;img alt="" src="https://i.imgur.com/WDDDrrG.png"&gt;&lt;/p&gt;
&lt;p&gt;I can see that these are all strongly matching to the same transcription factor. Why are they separate contigs?&lt;/p&gt;
&lt;p&gt;Let's look at how salmon quantified them. If they have overlapping k-mers, quantification should be spread across.&lt;/p&gt;
&lt;p&gt;F_diaphanus_BW_1.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN28_c0_g1_i8   3373    3122.308    0.000000    0.000
TRINITY_DN28_c0_g1_i9   4352    4101.308    0.000000    0.000
TRINITY_DN28_c0_g1_i3   3246    2995.308    6.292499    120.594
TRINITY_DN28_c0_g1_i11  4267    4016.308    26.524225   681.604
TRINITY_DN28_c0_g1_i2   4109    3858.308    33.421724   825.065
TRINITY_DN28_c0_g1_i12  3531    3280.308    0.000000    0.000
TRINITY_DN28_c0_g1_i10  4194    3943.308    2.424037    61.159
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;F_diaphanus_BW_2.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN28_c0_g1_i8   3373    3088.446    1.202113    29.068
TRINITY_DN28_c0_g1_i9   4352    4067.446    2.716526    86.510
TRINITY_DN28_c0_g1_i3   3246    2961.446    3.098616    71.846
TRINITY_DN28_c0_g1_i11  4267    3982.446    33.779057   1053.242
TRINITY_DN28_c0_g1_i2   4109    3824.446    33.505880   1003.276
TRINITY_DN28_c0_g1_i12  3531    3246.446    0.000000    0.000
TRINITY_DN28_c0_g1_i10  4194    3909.446    0.000000    0.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;F_diaphanus_FW_2.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN28_c0_g1_i8   3373    3091.748    0.519804    11.942
TRINITY_DN28_c0_g1_i9   4352    4070.748    2.246743    67.960
TRINITY_DN28_c0_g1_i3   3246    2964.748    1.067882    23.525
TRINITY_DN28_c0_g1_i11  4267    3985.748    29.020612   859.486
TRINITY_DN28_c0_g1_i2   4109    3827.748    30.238159   860.045
TRINITY_DN28_c0_g1_i12  3531    3249.748    0.000000    0.000
TRINITY_DN28_c0_g1_i10  4194    3912.748    0.000000    0.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;F_diaphanus_FW_3.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN28_c0_g1_i8   3373    3104.285    0.000000    0.000
TRINITY_DN28_c0_g1_i9   4352    4083.285    3.412720    143.858
TRINITY_DN28_c0_g1_i3   3246    2977.285    4.401957    135.298
TRINITY_DN28_c0_g1_i11  4267    3998.285    20.861407   861.076
TRINITY_DN28_c0_g1_i2   4109    3840.285    29.953996   1187.523
TRINITY_DN28_c0_g1_i12  3531    3262.285    2.240168    75.444
TRINITY_DN28_c0_g1_i10  4194    3925.285    0.000000    0.000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;F_diaphanus_transfer_1.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN28_c0_g1_i8   3373    3140.825    4.490605    235.962
TRINITY_DN28_c0_g1_i9   4352    4119.825    0.000000    0.000
TRINITY_DN28_c0_g1_i3   3246    3013.825    5.011654    252.693
TRINITY_DN28_c0_g1_i11  4267    4034.825    19.506568   1316.738
TRINITY_DN28_c0_g1_i2   4109    3876.825    21.467309   1392.347
TRINITY_DN28_c0_g1_i12  3531    3298.825    0.000000    0.000
TRINITY_DN28_c0_g1_i10  4194    3961.825    5.584293    370.132
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;F_diaphanus_transfer_2.quant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Name    Length  EffectiveLength TPM NumReads
TRINITY_DN28_c0_g1_i8   3373    3053.084    0.871097    12.774
TRINITY_DN28_c0_g1_i9   4352    4032.084    0.000000    0.000
TRINITY_DN28_c0_g1_i3   3246    2926.084    3.676537    51.672
TRINITY_DN28_c0_g1_i11  4267    3947.084    27.276491   517.125
TRINITY_DN28_c0_g1_i2   4109    3789.084    29.076399   529.182
TRINITY_DN28_c0_g1_i12  3531    3211.084    0.000000    0.000
TRINITY_DN28_c0_g1_i10  4194    3874.084    2.249432    41.857
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is why &lt;a href="https://combine-lab.github.io/salmon/"&gt;salmon quantification software&lt;/a&gt; comes in handy. Even though these contigs are probably assembly confusions (the contigs were produced by the Trinity assembler but they probably belong to the same transcript), it is okay because salmon is calculating the probability that the read will be sampled based on the availability of the sequence in the graph. Since pieces occur multiple times, the quantification will be distributed among the fragments. Whereas with other quant programs, the quantification might be artificially inflated (or deflated) given the presence of nearly identical fragments.&lt;/p&gt;
&lt;p&gt;After talking to fellow DIB lab PhD student, &lt;a href="http://www.camillescott.org/"&gt;Camille Scott&lt;/a&gt;, she helped me to see this with some cool figures of compact de Bruijn graphs that she made. The graph structure produced from this block of assembled sequences shows two different components:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;TRINITY_DN28_c0_g1_i6   Transcript_73
    TRINITY_DN28_c0_g1_i8   Transcript_74
    TRINITY_DN28_c0_g1_i9   Transcript_75
    TRINITY_DN28_c0_g1_i3   Transcript_76
    TRINITY_DN28_c0_g1_i11  Transcript_77
    TRINITY_DN28_c0_g1_i2   Transcript_78
    TRINITY_DN28_c0_g1_i12  Transcript_79
OG0010233   TRINITY_DN28_c0_g1_i10  Transcript_80
    TRINITY_DN28_c0_g1_i5   Transcript_81
OG0063265   TRINITY_DN28_c1_g1_i7   Transcript_82
    TRINITY_DN28_c1_g1_i5   Transcript_83
    TRINITY_DN28_c1_g1_i4   Transcript_84
OG0006676   TRINITY_DN28_c1_g1_i1   Transcript_85
    TRINITY_DN28_c1_g1_i3   Transcript_86
    TRINITY_DN28_c1_g1_i8   Transcript_87
OG0014822   TRINITY_DN28_c1_g1_i6   Transcript_88
    TRINITY_DN28_c1_g2_i1   Transcript_89
    TRINITY_DN28_c2_g1_i2   Transcript_90
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Full block:
&lt;img alt="" src="https://i.imgur.com/gNYWGa2.png"&gt;
Separated into 2 components:
&lt;img alt="" src="https://i.imgur.com/sSX6S3d.png"&gt;&lt;/p&gt;
&lt;p&gt;So, (in my own words) when salmon goes through and quantifies the reads, if it sees k-mers that have been already seen before, it then distributes the counts across the pieces with similar known kmers. (Please correct me if I am mis-using terms here.) Even though contigs are annotated as the same protein, since they have a similar sequence, they will not get counted twice. Instead, counts will be distributed across all similar contigs. That is why tximport is great for summarizing the counts for contigs that have annotated as a cluster.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;OG-annotated transcripts are single contigs. Looking at expression of only OGs misses the other contigs associated with that gene. &lt;/p&gt;
&lt;p&gt;Collapsing annotated contigs by unique gene ID is the best way to quantify expression with &lt;em&gt;de novo&lt;/em&gt; transcriptome assemblies, based on the above and then use salmon and tximport to summarize counts by similar contigs. &lt;/p&gt;
&lt;h2&gt;Questions that have come up:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Are we really picking the right annotation per contig? What I'm doing now is to to sort by custom annotation and then pick the longest. Titus has suggested using word clouds.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Yes, I might want to try this. There is an example below where one Trinity set of contigs has multiple annotations, but mixed across species. Possible that top annotations got mixed up. e.g. kelch-like and synaptotagmin. Still need to take a look at original dammit annotations to see how the decision was made. We are picking annotation-type (based on databases), then the longest annotation (not-evalue) as long as e-value was e-05 (or something like that, check the exact code and include). How would it look if we picked by e-value?&lt;/strong&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is collapsing contigs annotated with the same ID artificially inflating expression? What if the contig was constructed because there was a slightly alternative path in the assembly graph, which was not really a separate transcript? The principle of tximport is to &lt;a href="https://f1000research.com/articles/4-1521/"&gt;collapse transcripts/contigs by gene&lt;/a&gt;, since alternative splicing is nearly impossible to measure with short-read sequencing. However, the case of de novo assembly further complicates this matter with messy assemblies and heterozygous animals.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;No. This is why salmon is so awesome. Because it is modeling the sampling probability from the sequences available. It takes into consideration multi-mapping. If a contig has the same identity, or nearly the same, as another contig, reads will map fewer times to it becuase of the model.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How can we distinguish different fragments of the transcript vs. the same fragment just assembled slightly differently? (There might be some examples below where there are multiple contigs that are the same exact size. Look at the quantification. Salmon takes into consideration multi-mapping, where reads are seemingly matching  to k-mers in found in multiple contigs. The probabilities of aligning should be taken into consideration. Theoretically, if multiple contigs have simliar sequences, the overall quantification of a block of contigs should be adjusted. Is this correct?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Yes, but salmon is doing this for us. Major conclusion: Salmon is great. :)&lt;/strong&gt;&lt;/p&gt;</content><category term="sequencing"></category><category term="killifish"></category><category term="RNAseq"></category><category term="differential expression analysis"></category><category term="multispecies"></category></entry><entry><title>XRAC research proposal</title><link href="https://johnsolk.github.io/blog/xrac-research-proposal.html" rel="alternate"></link><published>2019-01-22T00:00:00-08:00</published><updated>2019-01-22T00:00:00-08:00</updated><author><name>Lisa K. Johnson</name></author><id>tag:johnsolk.github.io,2019-01-22:/blog/xrac-research-proposal.html</id><summary type="html">&lt;p&gt;XRAC research proposal - January 15, 2019&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last week (1/15/2019), we submitted a proposal for an &lt;a href="https://portal.xsede.org/allocations/research"&gt;XSEDE research allocation&lt;/a&gt;. Below is our proposal.&lt;/p&gt;
&lt;p&gt;This is to support the last bits of computational work required for my dissertation, which I hope to complete this year. Tessa Pierce's &lt;a href="https://github.com/dib-lab/eelpond"&gt;eelpond&lt;/a&gt; automated &lt;em&gt;de novo&lt;/em&gt; transcriptome assembly pipeline. In addition, we want to implement and test the &lt;a href="https://oyster-river-protocol.readthedocs.io/en/latest/"&gt;Oyster River Protocol&lt;/a&gt; across a large dataset. Plus some extra compute for incoming PhD rotation students. &lt;/p&gt;
&lt;p&gt;We've been successful with getting &lt;a href="https://github.com/ljcohen/jetstream-xsede-illo/blob/master/xsede_applications/mmestp-jetstream.md"&gt;startup allocations&lt;/a&gt; approved by XSEDE since 2016. Our summer &lt;a href="https://angus.readthedocs.io/en/2018/jetstream/boot.html"&gt;dibsi/angus courses use Jetstream&lt;/a&gt;, due to several successfull &lt;a href="http://ivory.idyll.org/blog/2017-dibsi-xsede-request.html"&gt;education proposals&lt;/a&gt;. But with my last round requesting a renewal for my startup, apparently I have exceeded the limits. So they asked for a full proposal to the XSEDE resource allocation committee (XRAC). &lt;/p&gt;
&lt;p&gt;(Fingers crossed) We will learn the outcome of the proposal in March. &lt;/p&gt;
&lt;h2&gt;UPDATE: (3/15/2019) We received our allocation!&lt;/h2&gt;
&lt;p&gt;Here is our &lt;a href="https://github.com/johnsolk/jetstream-xsede-illo/blob/master/xsede_applications/Pierce_Johnson_XRACproposal_Jan2019.pdf"&gt;proposal (pdf)&lt;/a&gt; and &lt;a href="https://github.com/johnsolk/jetstream-xsede-illo/blob/master/xsede_applications/Pierce_Johnson_XRAC_scaling_Jan2019.pdf"&gt;code performance and resource usage document&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;===&lt;/p&gt;
&lt;h2&gt;Improving reference genomes and transcriptomes towards gene expression profiling of sequencing data sets containing multiple eukaryotic species&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;PI:&lt;/strong&gt; N. Tessa Pierce&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Co-PI:&lt;/strong&gt; Lisa Johnson&lt;/p&gt;
&lt;p&gt;&lt;em&gt;UC Davis Data Intensive Biology Lab&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Startup Allocations: &lt;strong&gt;TG-MCB170160&lt;/strong&gt; and &lt;strong&gt;TG-BIO160028&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Background and Support&lt;/h2&gt;
&lt;p&gt;High-throughput sequencing methods have revolutionized ecological and evolutionary studies by facilitating research at the whole-genome level for multiple species. However, generation of high-quality references remains a complex and computationally-intensive endeavor, complicated by the biological properties of the sequence (e.g. polymorphism, gene splicing and duplication, etc), technical limitations of the sequencing platforms and analysis tools, and the scale (often hundreds of samples) required for balanced experimental designs. Furthermore, we have shown that the goal to generate a single reference genome or transcriptome as a final product must be re-evaluated in light of the information gained via reanalysis with new tools (Johnson et al. 2018).&lt;/p&gt;
&lt;p&gt;Our research aims to address these issues by systematically evaluating transcriptome and genome assembly, annotation and analysis methods to produce best practices, user-friendly, automated pipelines that facilitate future research. Here, we leverage biological datasets at two scales: first a broad-scale analysis of 678 species in the Marine Microbial Eukaryotic Transcriptome Sequencing Project (MMETSP), and second, finer-scale analysis on the evolution of salinity tolerance in sixteen species of a relatively well-studied species group, Fundulus killifish, exposed to acute hypersalinity challenge. The phylogenetic breadth of these projects enables us to build better bioinformatic pipelines agnostic of species that can be applied by investigators to sequencing data from multiple species as well as repeatedly to our own data as software tools and annotation databases improve. &lt;/p&gt;
&lt;p&gt;These projects are supported through November 2019 by a Moore Foundation Data-Driven Science investigator award to the PI of our lab, Dr. C. Titus Brown. PI Dr. N. Tessa Pierce is funded by an NSF Postdoctoral Research Fellowship in Biology (#1711984; 2017-2020), entitled “Improving RNA-Seq Analysis through Graph-based Analysis and Computational Indexing,” which uses the MMETSP data to test RNAseq analyses. Co-PI Lisa Johnson (Cohen) received an NSF Graduate Research Fellowship Honorable Mention in 2016 and has authored the first publication for this project leveraging the MMETSP dataset (Johnson et al. 2018). Results from these analyses are essential preliminary data for funding proposals to be submitted in the coming year. &lt;/p&gt;
&lt;h2&gt;A. Research Objectives&lt;/h2&gt;
&lt;h3&gt;Project 1: RNA-Seq tool development using the MMETSP dataset&lt;/h3&gt;
&lt;p&gt;The MMETSP consists of RNAseq data from 678 cultured protist species spanning more than 40 eukaryotic phyla, generated to broaden the diversity of sequenced marine protists and facilitate our understanding of their evolution and roles in marine ecosystems and biogeochemical cycles (Keeling et al. 2014). This database forms a rich reference which can be queried to help functionally characterize genes from environmental samples containing species that cannot be cultured. However, the MMETSP data also provides a unique opportunity to assess RNAseq analysis methods using one of the largest and most diverse publicly-available RNAseq data sets at this time. MMETSP is also unusually well-suited for benchmarking analyses, as data submitted by a large consortium of international investigators was prepared with a single, standardized library preparation and sequenced at a single facility.&lt;/p&gt;
&lt;p&gt;MMETSP was first analyzed in 2013, with de novo reference transcriptomes generated by the National Center for Genomic Resources (NCGR) using the Trans-ABySS assembler (Robertson et al. 2010). However, transcriptome assembly is an area of active research, with many new tools and improvements since this initial analysis. The first part of this project (now published) demonstrated that application of a new assembly software tool, Trinity (Grabherr et al. 2011) improved the quality of the assemblies and uncovered new content (Johnson et al. 2018). Comparing the original Trans-ABySS “NCGR” pipeline and our Trinity-based “DIB” assembly pipeline, we see differences in the number of contigs (Figure 1, left), the assembly content measured by alignments (Figure 1, middle) and unique &lt;em&gt;k&lt;/em&gt;-mers (&lt;em&gt;k&lt;/em&gt;=25) (Figure 1, right). These assemblies are annotated with the &lt;a href="http://dib-lab.github.io/dammit/"&gt;dammit annotation program&lt;/a&gt;, developed by Camille Scott who is a graduate student in our lab. 
&lt;img src="https://i.imgur.com/gBB5P4I.png" width="225"&gt;&lt;img src="https://i.imgur.com/MqyGGes.png" width="225"&gt;&lt;img src="https://i.imgur.com/yZWqTbX.png" width="250"&gt;
&lt;em&gt;Figure 1. (left) Number of contigs compared between NCGR (yellow) and DIB (blue) de novo transcriptome assemblies. (middle) Proportion of contig sequence similarity as measured by a conditional reciprocal best BLAST (CRBB) algorithm between NCGR (yellow) and DIB (blue) assemblies, indicating that the two assemblies have different content. (right) Comparison of the unique k-mer (k=25) content between NCGR assemblies (x-axis) and DIB assemblies (y-axis) indicating that the DIB assemblies had more unique content.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The MMETSP data is publicly available from the NCBI Sequence Read Archive (PRJNA231566) from 678 species, 168,152,967,701 PE50 reads total, 1TB raw data storage with the following phyla (N=species): Bacillariophyta (N=173), Dinophyta (N=114), Ochrophyta (N=73), Haptophyta (N=61), Ciliophora (N=25), Chlorophyta (N=62), Cryptophyta (N=22), Others (N=13). &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Improving Reference Generation with eelpond&lt;/strong&gt;
Given these improvements to old data using new tools, in the second part of this project we are developing an automated best-practices pipeline, called eelpond (https://github.com/dib-lab/eelpond), for non-model species within a framework that facilitates software installation and new tool integration. Eelpond accepts a set of raw fastq RNA sequencing reads and an experimental design matrix, and generates annotated de novo transcriptome assemblies. It will also run preliminary differential expression analysis with the DESeq2 R package. A new multi-assembler protocol, the Oyster River Protocol (ORP; MacManes 2018) suggests that merging contigs from several assemblers (Spades; Bushmanova et. al 2018, Shannon, Trinity; Grabherr et. al 2011) and multiple k-mer lengths may outperform assemblies with the currently-favored assembler, Trinity. We are integrating each of these assemblers (including the full ORP pipeline) into eelpond for benchmarking and comparison with the MMETSP data.&lt;/p&gt;
&lt;p&gt;Gene Pathway and Structure Discovery (glympsed) &amp;amp; Phylotranscriptomics
The final goal of our MMETSP project is to develop an unsupervised deep learning pipeline, called glympsed, using the “denoising autoencoder” algorithm (Vincent et al 2008) to discover common expression patterns in large RNA sequencing data sets (&amp;gt;100 samples and 30,000 genes/sample). This method has been shown to successfully identify common metabolic patterns of gene expression where there are unknown relationships between samples (Tan et al. 2016). Code for the glympsed project was written as a collaborative group in 2016 using a a large test set from all publicly-available Pseudomonas bacteria data, with the aim of testing and optimizing the glympsed pipeline with MMETSP data. Now that the MMETSP re-assemblies and expression quantification results are complete (Johnson et al. 2018), we can use these results as input to run the glympsed pipeline. &lt;/p&gt;
&lt;p&gt;To start, we will examine data from members of the dinoflagellata phylum in the MMETSP set, which exhibit two distinct lifestyles (endosymbiotic and free-living). With glympsed, we will investigate fundamental metabolic transcriptional differences between the two groups. We will then expand the this approach to additional taxonomic groups within the MMETSP. Following the development and successful analysis with the glympsed pipeline, the agalma phylotranscriptomics pipeline (Dunn et al. 2013) will be used to generate species trees based on pathway genes identified with glympsed.&lt;/p&gt;
&lt;h3&gt;Project 2: Comparative genomics and gene expression analysis of 16 Fundulus killifish species in response to osmotic stress&lt;/h3&gt;
&lt;p&gt;Killifish in the genus &lt;em&gt;Fundulus&lt;/em&gt; have emerged as a comparative model system for studying the physiological and genetic mechanisms underlying osmotic tolerance (Whitehead 2010). Some Fundulus species can tolerate a range of environmental salinities (euryhaline) by switching osmoregulatory mechanisms while other Fundulus species require a narrower salinity range (stenohaline) in either fresh or marine waters. In collaboration with Andrew Whitehead’s Environmental Genomics lab at UC Davis, we are studying the evolutionary history of adaptation in these 16 marine, estuarine and freshwater &lt;em&gt;Fundulus&lt;/em&gt; species with representation from each of the three clades where species have independently radiated into freshwater environments. As these species are closely related and have a well-characterized phylogeny, this study presents a unique opportunity to study parallel evolution of physiological adaptation.&lt;/p&gt;
&lt;p&gt;This project leverages both stress-response RNA-seq data and long-read genome data. RNAseq data were collected after exposure of 130 individuals to a common, controlled acute hypersalinity challenge experiment, and deeply sequenced on the Illumina HiSeq platform, generating over 4 billion PE100 reads, 500GB raw data storage: &lt;em&gt;Adinia xenica&lt;/em&gt; (N=9), &lt;em&gt;Fundulus catenatus&lt;/em&gt; (N=7), &lt;em&gt;Fundulus chrysotus&lt;/em&gt; (N=8), &lt;em&gt;Fundulus diaphanus&lt;/em&gt; (N=7), &lt;em&gt;Fundulus grandis&lt;/em&gt; (N=9), &lt;em&gt;Fundulus heteroclitus&lt;/em&gt; (MDPL population) (N=9), &lt;em&gt;Fundulus heteroclitus&lt;/em&gt; (MDPP population) (N=9), &lt;em&gt;Fundulus notatus&lt;/em&gt; (N=9), &lt;em&gt;Fundulus nottii&lt;/em&gt; (N=2), &lt;em&gt;Fundulus olivaceus&lt;/em&gt; (N=8), Fundulus parvapinis (N=8), &lt;em&gt;Fundulus rathbuni&lt;/em&gt; (N=9), &lt;em&gt;Fundulus sciadicus&lt;/em&gt; (N=5), &lt;em&gt;Fundulus similis&lt;/em&gt; (N=9), &lt;em&gt;Fundulus zebrinus&lt;/em&gt; (N=4), Lucania goodei (N=9), Lucania parva (N=9) (Rodgers et al. 2018; Johnson and Whitehead 2018). After the experiment, a subset of four species (3 freshwater: &lt;em&gt;Fundulus nottii&lt;/em&gt;, &lt;em&gt;Fundulus catenatus&lt;/em&gt;, &lt;em&gt;Fundulus olivaceus&lt;/em&gt;, and one marine: &lt;em&gt;Adinia xenica&lt;/em&gt;) were selected for &lt;a href="https://ljcohen.github.io/blog/killifish-promethion-data-sharing.html"&gt;genome assembly via Oxford Nanopore Technologies (ONT) long-read sequencing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Transcriptome Analysis with eelpond&lt;/strong&gt;
Following the success of transcriptome assemblies of the MMETSP dataset, we are applying the same methods to assemble de novo transcriptomes for each of these 16 Fundulus species, which we can then use to analyze transcriptional responses to salinity change by clade and physiology. The end product for this project will be sets of candidate genes with common expression patterns and their corresponding physiological pathways. Based on previous work with microarrays and protein assays, we expect to see isoform switching in relevant genes (e.g. ATPase Na+/K+ transporting subunit alpha 1b vs. alpha 1a). These differences are hard to detect and require high quality reference transcriptomes. Improving the quality of the assemblies has included assembling and re-assembling with the new version of Trinity (2.8.4), which improved the contiguity with fewer contigs (Figure 2, left) and benchmarking evaluation scores (BUSCO; Simão et. al 2015) (Figure 2, right). De novo transcriptome assemblies have been generated, twice with updated versions of Trinity. Now, they need to be improved with ORP and automated using eelpond.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://i.imgur.com/DvF2yJ5.png" width="300"&gt;&lt;img src="https://i.imgur.com/d8E9c3q.png" width="300"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 2. (left) Numbers of contigs decreased from old assemblies (purple) to new assemblies (green). (right) Benchmarking scores (BUSCO) increased with a tighter distribution in new assemblies (green) compared to the old assemblies (purple).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Generating High-Quality Genome References&lt;/strong&gt;
Genomic sequence data from four species were generated (3 freshwater: Fundulus nottii, Fundulus catenatus, Fundulus olivaceus, and one marine: Adinia xenica) via Oxford Nanopore Technologies (ONT) PromethION desktop sequencer (approximately $3,500/species). Each genome is estimated to be around 1.1 Gb, based on the size of the sister species, Fundulus heteroclitus; therefore, we have collected between 30-50x coverage of ONT data. These genomes will better enable us to detect these small changes in the transcriptomes, as well as to discover changes in genomic architecture underlying adaptive responses to environmental change. Below is a table listing ONT data collected for each species:&lt;/p&gt;
&lt;p&gt;ONT data collected thus far, which will contribute to de novo genomes of 4 Fundulus species:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Species&lt;/th&gt;
&lt;th&gt;bases called&lt;/th&gt;
&lt;th&gt;n reads&lt;/th&gt;
&lt;th&gt;avg length&lt;/th&gt;
&lt;th&gt;largest&lt;/th&gt;
&lt;th&gt;reads N50&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Adinia xenica&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;38,467,326,719&lt;/td&gt;
&lt;td&gt;15,704,522&lt;/td&gt;
&lt;td&gt;2,449&lt;/td&gt;
&lt;td&gt;953,774&lt;/td&gt;
&lt;td&gt;5,733, n = 1,373,426&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Fundulus nottii&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;33,440,866,723&lt;/td&gt;
&lt;td&gt;5,160,367&lt;/td&gt;
&lt;td&gt;6,480&lt;/td&gt;
&lt;td&gt;667,947&lt;/td&gt;
&lt;td&gt;12,995, n=700,534&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Fundulus catenatus&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;40,274,806,587&lt;/td&gt;
&lt;td&gt;23,701,206&lt;/td&gt;
&lt;td&gt;1,699&lt;/td&gt;
&lt;td&gt;590,485&lt;/td&gt;
&lt;td&gt;3,439, n = 2,687,295&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Fundulus olivaceus&lt;/em&gt; (MinION)&lt;/td&gt;
&lt;td&gt;4,962,626,713&lt;/td&gt;
&lt;td&gt;740,248&lt;/td&gt;
&lt;td&gt;6,704&lt;/td&gt;
&lt;td&gt;973,552&lt;/td&gt;
&lt;td&gt;12,726, n = 117,202&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Fundulus olivaceus&lt;/em&gt; (PromethION)&lt;/td&gt;
&lt;td&gt;50,093,027,850&lt;/td&gt;
&lt;td&gt;10,902,817&lt;/td&gt;
&lt;td&gt;4,595&lt;/td&gt;
&lt;td&gt;779,368&lt;/td&gt;
&lt;td&gt;11,670, n = 987,921&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;ONT is a new sequencing technology that has only become available within the past 3 years; however, it is showing promise improving genome assemblies because of the length of the reads (Ebbert et al. 2018). Because of the high error rate (~10-15%) associated with ONT data, we are in the process of generating 50x coverage of paired-end 150 bp short-read Illumina data, which has a low error rate (&amp;lt;1%) and will be used to correct the noisy long reads. The size of the Illumina short read data will be around 500 GB total.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gene Pathway and Structure Discovery (glympsed) &amp;amp; Phylotranscriptomics&lt;/strong&gt;
The killifish data also have more than 100 samples and will be run through the glympsed pipeline. We are looking for common patterns of gene expression across the clades, hypothesizing that there will be some genes with parallel avenues of evolution whereas some genes will have divergent modes of evolution.&lt;/p&gt;
&lt;h2&gt;B. Computational Methods&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Transcriptome assemblies&lt;/strong&gt; 
We are working towards improving the quality of reference transcriptomes for these two projects: 16 Fundulus species + 678 MMETSP species = 694 species, around 700 transcriptomes. RNAseq samples from Fundulus species have approximately 10x more reads (average = 238,363,948) than samples from the MMETSP (average = 23,387,060 reads). &lt;/p&gt;
&lt;p&gt;&lt;img src="https://i.imgur.com/8tY08mr.png" width="600"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Figure 3. Workflow diagram for the eelpond RNAseq de novo transcriptome assembly pipeline, indicating milestones for each step: Download, quality assessment, digital normalization, assembly, annotation, and evaluation.&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Eelpond&lt;/strong&gt; 
To improve each MMETSP and Fundulus killifish transcriptome, we will run our automated eelpond pipeline (Figure 3; https://github.com/dib-lab/eelpond) to conduct read quality and error trimming, generate additional transcriptome assemblies, and perform assembly annotation and quality evaluation. Eelpond uses Python’s snakemake automation tool to manage each run and uses conda for tool installation. While some of the components of eelpond are not compute intensive, the main assembler, Trinity, is very compute intensive (see “Code Performance and Resource Usage” document). To run this pipeline in parallel to process files from from start to finish, all tools must be run on the HPC. Since the pipeline is modularized, individual milestones can be adjusted (separate jobs submitted requesting different resources) so the whole pipeline does not require the same large amount of resources as Trinity. We are in the process of integrating the Oyster River Protocol, a multi-kmer, multi-assembler tool that may outperform Trinity assemblies (MacManes 2018). Since we already have Trinity assemblies, testing ORP will involve running the remaining assemblers (Spades x2 and Shannon) as well as the assembly merging script, Orthofuser. The resulting assemblies will also require annotations, which eelpond will perform with dammit (Scott in prep). Downstream analyses will be conducted with Salmon (Patro et al 2017) quantification and DESeq2 (Love et al. 2014), already integrated into the pipeline. While eelpond currently works on AWS and Jetstream, only minor modifications are needed to scale up to the Bridges HPC. Resource allocations requested by this proposal will allow us to develop the eelpond protocol for any hpc users with slurm job management, such as PSC Bridges. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Genome Assemblies&lt;/strong&gt;
Four Fundulus killifish genomes will be assembled from Oxford Nanopore Technologies (ONT) long read data. New tools and methods for assembling and analyzing these noisy ONT long reads are being developed at a fast rate (de Lannoy et al. 2017). We will perform hybrid genome assemblies with ONT and Illumina data, which can produce high quality (&amp;gt;2 Mb contig N50) reference genomes (Tan et al 2018, Miller et al. 2018, Liu et al. 2018). We have found the best available assembler to be MaSuRCA, as evaluated by complete BUSCO identification (eukaryota database; Simão et. al 2015): &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Seq data input&lt;/th&gt;
&lt;th&gt;Tool&lt;/th&gt;
&lt;th&gt;bases&lt;/th&gt;
&lt;th&gt;n_contigs&lt;/th&gt;
&lt;th&gt;average&lt;/th&gt;
&lt;th&gt;largest&lt;/th&gt;
&lt;th&gt;N50&lt;/th&gt;
&lt;th&gt;BUSCO (eukaryota)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ONT (MinION)&lt;/td&gt;
&lt;td&gt;Canu&lt;/td&gt;
&lt;td&gt;9,804,264&lt;/td&gt;
&lt;td&gt;540&lt;/td&gt;
&lt;td&gt;18,156&lt;/td&gt;
&lt;td&gt;365,191&lt;/td&gt;
&lt;td&gt;40,681, n = 43&lt;/td&gt;
&lt;td&gt;0.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ONT (MinION)&lt;/td&gt;
&lt;td&gt;Miniasm&lt;/td&gt;
&lt;td&gt;4,917,546&lt;/td&gt;
&lt;td&gt;153&lt;/td&gt;
&lt;td&gt;32,140&lt;/td&gt;
&lt;td&gt;233,136&lt;/td&gt;
&lt;td&gt;50,056, n = 25&lt;/td&gt;
&lt;td&gt;0.0 %&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Illumina (NovaSeq)&lt;/td&gt;
&lt;td&gt;Megahit&lt;/td&gt;
&lt;td&gt;1,183,861,293&lt;/td&gt;
&lt;td&gt;1038799&lt;/td&gt;
&lt;td&gt;1,139&lt;/td&gt;
&lt;td&gt;88,218&lt;/td&gt;
&lt;td&gt;3,846, n = 77,800&lt;/td&gt;
&lt;td&gt;45.6 %&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Illumina (NovaSeq)&lt;/td&gt;
&lt;td&gt;ABySS&lt;/td&gt;
&lt;td&gt;1,381,148,284&lt;/td&gt;
&lt;td&gt;1024759&lt;/td&gt;
&lt;td&gt;1,347&lt;/td&gt;
&lt;td&gt;140629&lt;/td&gt;
&lt;td&gt;9833, n = 37,013&lt;/td&gt;
&lt;td&gt;77.9%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hybrid&lt;/td&gt;
&lt;td&gt;Masurca&lt;/td&gt;
&lt;td&gt;1,134,160,060&lt;/td&gt;
&lt;td&gt;90,237&lt;/td&gt;
&lt;td&gt;12,568&lt;/td&gt;
&lt;td&gt;386,222&lt;/td&gt;
&lt;td&gt;42,823, n = 7,616&lt;/td&gt;
&lt;td&gt;86.2%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The job to run the MaSuRCA software tool required 1TB storage for intermediate files and &amp;gt;1 week to run for the 1.1 Gb genome assembly. Our measurements were validated by the manual and communications with the MaSuRCA authors. Following genome assembly, the intermediate files are deleted. We have successfully produced one MaSuRCA assembly on the MSU hpcc with an abbreviated set of ONT data. However, we were not able to benchmark this on PSC Bridges before this proposal, due to time and resource constraints on our startup allocations. After assembly with MaSuRCA, the quality of the reference genome assemblies will be improved by applying the Pilon or Racon scaffolding and consensus improvement tools, which are also resource intensive.&lt;/p&gt;
&lt;p&gt;These four genomes will be annotated using the MAKER pipeline (Cantarel 2008; latest version v2.31.10 May 4, 2018), used to align RNAseq reads and to perform comparative genomic analysis to test for parallel loss of the genomic architecture that supports plasticity to salinity environments. Data have been collected and now need to be assembled and annotated. Genomes will then be used for comparative genomics analysis.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Gene Pathway and Structure Discovery (glympsed) &amp;amp; Phylotranscriptomics&lt;/strong&gt;
To discover common expression patterns in large RNA sequencing data sets (&amp;gt;100 samples and 30,000 genes/sample), we are in the process of developing a pipeline using the unsupervised deep learning library, Keras (Chollet 2018). This pipeline, called “glympsed” (https://github.com/glympsed/glympsed) uses the “denoising autoencoder” algorithm (Vincent et al 2008) to extract features or patterns from the noisy dataset. This method has been shown to successfully identify common metabolic patterns of gene expression where there are unknown relationships between samples (Tan et al. 2016). The results of this pipeline will be used to generate hypotheses about pathway “features” that are present or absent in MMETSP and killifish samples.&lt;/p&gt;
&lt;p&gt;Preliminary code and notebooks are available on GitHub, which were developed on AWS. Simulated data were created to test the denoising autoencoder model by randomly sampling beta values, assuming gene expression data follows negative binomial distribution. Jetstream resources will be used to develop code and run Jupyter notebooks for visualizations. Scripts will be written generate output tables containing gene networks and connect to gene regulatory network and pathway databases, such as KEGG (Kanehisa et. al 2000). Tutorials will be developed and Jetstream images with required software installed will be made public. &lt;/p&gt;
&lt;p&gt;Following the development and successful completion of results produced by the glympsed pipeline, the agalma phylotranscriptomics pipeline (Dunn et al. 2013) will be used to generate species trees based on pathway genes identified with glympsed.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Program&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Resources&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Total SUs&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Development of glympsed and tutorials for phylotranscriptomics pipelines&lt;/td&gt;
&lt;td&gt;Jetstream&lt;/td&gt;
&lt;td&gt;110,000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;C. Computational Research Plan: Resource usage with accompanying application efficiencies to achieve the research objectives.&lt;/h2&gt;
&lt;p&gt;We are requesting PSC Bridges (LM, RM and Pylon storage) in addition to Jetstream cloud computing resources. Jetstream is great for troubleshooting custom software, developing pipeline scripts and performing calculations and visualizations with data table inputs. PSC Bridges is great for storing raw sequencing data files, scaling up assembly pipelines with high memory processes in parallel, then evaluating and generating data tables.&lt;/p&gt;
&lt;p&gt;Jetstream, like AWS elastic cloud computing where we have done some of our initial pipeline development and software installation, allows the freedom of installing with root privileges and frequently updating custom software, as well as hosting open data analysis collaboration with tools such as Jupyter notebooks. For students in a classroom setting and in order to provide persistent documentation, Jetstream resources are key to loading pre-installed software from images and install new software to test. Since we do not need the intermediate files beyond the time during computation, the de novo assembly products and gene expression quantification tables can be downloaded to local computers and the instances can be deleted. &lt;/p&gt;
&lt;p&gt;We need access to an HPC with high memory nodes, like PSC Bridges to launch high memory jobs because the maximum Jetstream instance (s1.xxlarge: CPU 44, Mem 120 GB, Disk 480 GB) is too small to accommodate some of our assemblies and is also incapable of scaling to running hundreds of assemblies in parallel. We will delete intermediate files after assemblies have been generated and downloaded. Persistent storage is also a feature of Bridges that is not possible with Jetstream. One of the more frustrating practical aspects of using Jetstream is having to store large raw files for a data set that is around 1TB in volumes and keep the volume accessible each time you want to work with them from a different instance. Our experience and SUs measured during resources are explained in the attached “Code Performance and Resource Usage” document.&lt;/p&gt;
&lt;h2&gt;D. Justification of the SU allocation amounts for all resources and resource types.&lt;/h2&gt;
&lt;p&gt;Based on the &lt;strong&gt;“Code Performance and Resource Usage”&lt;/strong&gt; document below, the total amount of SUs requested for the following year of research are outlined as follows:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Resource&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;SUs requested&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jetstream&lt;/td&gt;
&lt;td&gt;110,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bridges LM&lt;/td&gt;
&lt;td&gt;44,876&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bridges RM&lt;/td&gt;
&lt;td&gt;139,750&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bridges Pylon storage&lt;/td&gt;
&lt;td&gt;25 TB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;E.   Resource Appropriateness&lt;/h2&gt;
&lt;p&gt;We’ve used two XSEDE startups of PSC Bridges allocations (LM, RM, and Pylon storage) and two startups of Jetstream allocations generating de novo transcriptome assemblies and annotations for the MMETSP dataset and 17 killifish as well as a separate project on Doryteuthis opalescens squid, which is being prepared for publication by PI Pierce. As a result, we are experienced Jetstream and Bridges users. These XSEDE startup allocations on Jetstream have contributed to one publication thus far (Johnson et al. 2018) and will contribute to another two manuscripts before the conclusion of Ms. Johnson’s PhD research. However, additional compute time is essential to complete this work and prepare results for publication. Completion of Lisa Johnson’s PhD dissertation research depends on these resources.&lt;/p&gt;
&lt;p&gt;We have participated as active members of the XSEDE community both on Jetstream and PSC Bridges, communicating with the help team with questions and reporting problems with jobs and compute nodes. We have served as PIs, Co-PIs and users of 5 education allocations where we have taught researchers (&amp;gt;300 total) in workshop settings how to use Jetstream resources. We have created two public images as a result of these allocations to make future software installation on new instances easier: “RNASeq_1DayWorkshop” and “dammit_annotation_v1.0”. The following are workshops delivered with tutorials using Jetstream materials: Society for Environmental Toxicology And Chemistry meeting, November 2018 (TG-MCB180142), Global Invertebrate Genomics Alliance meeting, October 2018 (TG-MCB180140), Scripps Institution of Oceanography, Bioinformatics User’s Group workshop, October 2017 (TG-BIO170083), Data Intensive Biology Summer Institute (DIBSI), non-model RNAseq topic workshop, July 2017 (TG-BIO170017), 2-week DIBSI beginner’s workshop (ANGUS), June-July 2018, ANGUS 2017 (TG-BIO170017). The following is an example website for a workshop using Jetstream materials that is available to the public and persistent for users beyond the time of the workshop: https://setac-omics.readthedocs.io/en/latest/.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Local computing environment&lt;/strong&gt;
As a members of Dr. C. Titus Brown’s lab at UC Davis, we have access to two high performance computing clusters at Michigan State University (iCER’s hpcc) and UC Davis (farm cluster). However, there are several issues with these resources. Our time on the MSU hpcc is expiring this fall 2019, following Dr. Brown’s transition from MSU to UCD faculty in 2015. In addition, there has been limited capacity on the MSU hpcc for supporting the scale of these multi-species pipelines as we only have access to 4 nodes with 1TB of resources and the queue time is long. Moving 700 transcriptome through this queue takes more than one month and our storage capacity is limited. With the PSC Bridges startup, we have been extremely pleased with the ease of submitting jobs and having them run smoothly on both the LM and RM partitions. 
Research funds for AWS compute time are limited, as the Moore Foundation grant that has contributed to funding these projects ends in November 2019. On the UCD farm cluster, we do not have access to the high memory node without buying in to the high memory partition of the system. As our current account stands, we are limited to 12 jobs running at a time with 75 GB RAM each and less than 1TB of total storage.&lt;/p&gt;
&lt;p&gt;Following the computing processes described in this proposal, raw sequence files will be stored locally on storage hard-drives and deposited in NCBI’s Sequence Read Archive public repository. Data products, e.g. assemblies will be stored in public repositories such as Zenodo and the Open Science Framework (Foster and Deardorff, 2017).&lt;/p&gt;
&lt;h2&gt;F. Additional Considerations&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Research outreach and training&lt;/strong&gt;
Graduate students at UC Davis are required to rotate through labs during their first year prior to choosing a primary advisor. During rotations, small projects are completed. This allocation will contribute to computational training of several rotation students in our lab who are working on the MMETSP data sets using the eelpond protocol. New protocols developed, e.g. glympsed and eelpond-integrated Oyster River Protocol will contribute to tutorials taught during our Data Intensive Biology Summer Institute at UC Davis.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Funding&lt;/strong&gt;
Analyses for the above-mentioned projects are funded until November 2019 by the Moore Foundation Data-Driven-Science investigator award to the PI of our lab, Dr. C. Titus Brown. Lisa Johnson (Cohen) received an NSF Graduate Research Fellowship Honorable Mention in 2016, which enabled her to serve as PI for the XSEDE startup allocation TG-BIO160028) that has contributed to most of her dissertation work. Tessa Pierce has an NSF Postdoctoral Fellowship and has been a PI for the XSEDE startup allocation TG-MCB170160, which has contributed to her postdoctoral research. Ms. Johnson and Dr. Pierce have both served as co-PIs for the XSEDE education proposals listed above. Results from these analyses are necessary to contribute as preliminary analyses for future proposals requesting funding from agencies such as the NSF.&lt;/p&gt;
&lt;h1&gt;Code Performance and Resource Usage&lt;/h1&gt;
&lt;p&gt;This document is based on 70-80% usage (PSC Bridges LM: 113 jobs, RM: 1042 jobs) of startup allocation TG-BIO160028 on PSC Bridges since we began our allocation on 11/26/2018 and 100% usage of 150,000 SUs on Jetstream from 2016-2018 with TG-BIO160028 and 72% usage of 100,000 SUs on Jetstream with TG-MCB170160.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Analyses run&lt;/strong&gt;
The following table includes processes run previously and their resources used that are directly related to the processes we are requesting additional resources for in this proposal.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Transcriptomic analysis&lt;/strong&gt; 
Jetstream resources were estimated, as long-running tools are often run overnight, and instances used for training and workshops are kept running during instruction and troubleshooting, so active program runtimes are not continuous. Bridges jobs are listed for the species with the longest time and highest resource usage.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Process&lt;/th&gt;
&lt;th&gt;Species&lt;/th&gt;
&lt;th&gt;Data size&lt;/th&gt;
&lt;th&gt;Resource&lt;/th&gt;
&lt;th&gt;SU/run used&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Workshop tutorial (single commands run by hand), de novo transcriptome assembly pipeline&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Nematostella vectensis&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;30,000 reads subset&lt;/td&gt;
&lt;td&gt;Jetstream, m1.medium&lt;/td&gt;
&lt;td&gt;12 = 6 CPU x 8hrs workshop time&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dib-MMETSP, automated de novo transcriptome assembly pipeline (Johnson et al. 2018)&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Chaetoceros neogracile&lt;/em&gt; (Phylum: Bacillariophyta), MMETSP0751&lt;/td&gt;
&lt;td&gt;33,150,207 reads&lt;/td&gt;
&lt;td&gt;Jetstream, s1.xxlarge&lt;/td&gt;
&lt;td&gt;264 = 44 CPU x 6hrs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Digital normalization with khmer&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Fundulus grandis&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;467,432,867 trimmed reads&lt;/td&gt;
&lt;td&gt;Bridges RM; jobID 4524354&lt;/td&gt;
&lt;td&gt;48.10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;De novo&lt;/em&gt; transcriptome assembly with Trinity&lt;/td&gt;
&lt;td&gt;Fundulus heteroclitus (MDPL population)&lt;/td&gt;
&lt;td&gt;79,341,401 reads (after digital normalization)&lt;/td&gt;
&lt;td&gt;Bridges LM; jobID 4555613&lt;/td&gt;
&lt;td&gt;232.07&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Transcriptome annotation, dammit&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Fundulus heteroclitus (MDPP population)&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;668,487 contigs&lt;/td&gt;
&lt;td&gt;Bridges LM; jobID 4710488&lt;/td&gt;
&lt;td&gt;57.48&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Transcriptome and genome evaluation, BUSCO&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Fundulus grandis&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;809,060 contigs&lt;/td&gt;
&lt;td&gt;Bridges RM; jobID 4612712&lt;/td&gt;
&lt;td&gt;292.97&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Transcriptome evaluation, Transrate&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Fundulus grandis&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;809,060 contigs&lt;/td&gt;
&lt;td&gt;Bridges RM; jobID 4609550&lt;/td&gt;
&lt;td&gt;33.33&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Expression quantification, salmon&lt;/td&gt;
&lt;td&gt;Loop with all 9 individuals from the &lt;em&gt;Fundulus grandis&lt;/em&gt; species&lt;/td&gt;
&lt;td&gt;467,432,867 trimmed reads&lt;/td&gt;
&lt;td&gt;Bridges RM; jobID 4707781&lt;/td&gt;
&lt;td&gt;14.37&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Genome alignment of RNAseq reads, STAR&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Fundulus grandis&lt;/em&gt;, BW treatment, sample 1&lt;/td&gt;
&lt;td&gt;81,736,962 trimmed reads&lt;/td&gt;
&lt;td&gt;Bridges RM; jobID 4702491&lt;/td&gt;
&lt;td&gt;6.76&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Species trees, agalma&lt;/td&gt;
&lt;td&gt;Subset of data from 6 invertebrate siphonophore and cnidarian species, RNAseq reads&lt;/td&gt;
&lt;td&gt;Jetstream, m1.medium&lt;/td&gt;
&lt;td&gt;12 = 6 CPU x 2hrs&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Genomic analysis:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Process&lt;/th&gt;
&lt;th&gt;Data type&lt;/th&gt;
&lt;th&gt;Data size&lt;/th&gt;
&lt;th&gt;Resource&lt;/th&gt;
&lt;th&gt;SUs used&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;De novo&lt;/em&gt; genome assembly of a bacteria, ONT reads with canu and Pilon correction&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Tenacibaculum&lt;/em&gt; sp. bacteria (3Mb)&lt;/td&gt;
&lt;td&gt;Jetstream, s1.large&lt;/td&gt;
&lt;td&gt;80 = 10 CPU x 8 hrs&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MaSuRCA&lt;/td&gt;
&lt;td&gt;Killifish genome (1.1Gb)&lt;/td&gt;
&lt;td&gt;4x ONT coverage subset with 50x coverage Illumina data&lt;/td&gt;
&lt;td&gt;MSU hpcc&lt;/td&gt;
&lt;td&gt;168  hrs = 1 TB for 1 week; MSU deleted my log file :(&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Racon and Pilon&lt;/td&gt;
&lt;td&gt;Killifish genome (1.1Gb)&lt;/td&gt;
&lt;td&gt;4x ONT coverage subset with 50x coverage Illumina data&lt;/td&gt;
&lt;td&gt;MSU hpcc&lt;/td&gt;
&lt;td&gt;Job failed “Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded“ with 500 GB memory&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Extrapolation for Future work&lt;/strong&gt;
We have not had a chance to benchmark everything that we want to yet for the de novo genome assemblies, which is why we’re writing this proposal requesting more computing resources on these platforms. As mentioned in the main document, because long reads from Oxford Nanopore Technologies (ONT) are “third-generation” sequencing technology, software tools that are being developed at a fast rate to keep up with the developing technology. The raw signal files used to call bases to generate fastq sequence files must be saved because the base-calling software algorithms are improving. We have not tested the new base-calling software, and thus have not included it in our pipeline here. But, in the next year, if the software improves, we will need to return to the beginning of our pipeline to acquire more accurate bases for our reads. &lt;/p&gt;
&lt;p&gt;There is not yet a set of best practices for these software tools for de novo genome assembly using ONT reads, therefore several must still be tested. As mentioned in the main document, we have tested several de novo genome assemblers for ONT data with a subset of data and have found that MaSuRCA to be the best. However, if we scale up our data and find that another tool is better, we would like to use the better set of tools. &lt;/p&gt;
&lt;p&gt;SUs requested for running genome assembly tools for 4 Fundulus genomes, 1.1Gb each:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Program Description&lt;/th&gt;
&lt;th&gt;# runs&lt;/th&gt;
&lt;th&gt;SUs/run&lt;/th&gt;
&lt;th&gt;Resources&lt;/th&gt;
&lt;th&gt;Total SUs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;MaSuRCA assembler&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;168 = 1 TB x 168 hrs&lt;/td&gt;
&lt;td&gt;Bridges LM&lt;/td&gt;
&lt;td&gt;672&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Racon and/or Pilon Consensus improvement&lt;/td&gt;
&lt;td&gt;24 = 4 x 6 iterations/species*&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;48 = 1 TB x 48 hrs&lt;/td&gt;
&lt;td&gt;Bridges LM&lt;/td&gt;
&lt;td&gt;1,152&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;khmer Error correction&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;Bridges RM&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sourmash decontamination&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;Bridges RM&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MAKER annotation&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;48 = 1 TB x 48 hrs&lt;/td&gt;
&lt;td&gt;Bridges LM&lt;/td&gt;
&lt;td&gt;1,152&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storage: ONT signal files 1TB/species + 100 GB fastq sequence data/species x 4 species + 500 GB for 2 lanes Illumina PE150 fastq data + 3 TB/species x 4 species for intermediate storage during assemblies&lt;/td&gt;
&lt;td&gt;Bridges Pylon storage&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;17 TB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;*Racon and Pilon are separate tools that take Illumina data and polish the final assembly to improve it. The reason why we have more runs for either Racon and Pilon in our list of SUs requested below is because these require multiple iterations for correcting the consensus genome sequence (Miller et al. 2018). We have done this and confirmed for a 3 Mb bacteria (Tenacibaculum) genome on Jetstream (m1.large), but not on larger assemblies because the jobs crashed without enough memory on our local MSU hpcc We have not attempted on Bridges yet because we didn’t have enough SUs in our startup nor the time between 11/26/18 and the completion of this proposal (1/15/19).&lt;/p&gt;
&lt;p&gt;SUs requested for running de novo transcriptome assembly tools for 700 transcriptomes:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Program Description&lt;/th&gt;
&lt;th&gt;# runs&lt;/th&gt;
&lt;th&gt;SUs/run&lt;/th&gt;
&lt;th&gt;Resources&lt;/th&gt;
&lt;th&gt;Total SUs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;khmer digital normalization and error correction&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;Bridges RM&lt;/td&gt;
&lt;td&gt;3,500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spades x2 k-mers, Shannon de novo transcriptome assemblers&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;Bridges LM&lt;/td&gt;
&lt;td&gt;8,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spades x2 k-mers, Shannon de novo transcriptome assemblers&lt;/td&gt;
&lt;td&gt;678&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;Bridges LM&lt;/td&gt;
&lt;td&gt;33,900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dammit annotation pipeline&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;Bridges RM&lt;/td&gt;
&lt;td&gt;35,500&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Transrate transcriptome evaluation&lt;/td&gt;
&lt;td&gt;1,400 (run twice for each assembly, comparing against reference)&lt;/td&gt;
&lt;td&gt;35&lt;/td&gt;
&lt;td&gt;Bridges RM&lt;/td&gt;
&lt;td&gt;49,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BUSCO genome and transcriptome evaluation&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;50&lt;/td&gt;
&lt;td&gt;Bridges RM&lt;/td&gt;
&lt;td&gt;35,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OrthoFinder identification of 1-1 orthologs from data sets&lt;/td&gt;
&lt;td&gt;2 = MMETSP assemblies + killifish assemblies&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Bridges RM&lt;/td&gt;
&lt;td&gt;400&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Salmon gene expression quantification&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;20&lt;/td&gt;
&lt;td&gt;Bridges RM&lt;/td&gt;
&lt;td&gt;14,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;STAR alignments&lt;/td&gt;
&lt;td&gt;130 Fundulus individuals&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;Bridges RM&lt;/td&gt;
&lt;td&gt;1,950&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oyster River Protocol contig merging&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;~200 hours of s1.xxlarge at 44 SU&lt;/td&gt;
&lt;td&gt;Jetstream&lt;/td&gt;
&lt;td&gt;10,000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;storage&lt;/td&gt;
&lt;td&gt;2 TB raw sequence data + 6 TB for intermediate files and alignment .bam files&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Bridges Pylon storage&lt;/td&gt;
&lt;td&gt;8 TB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Bioinformatics Tools, performance and scaling&lt;/strong&gt;
In general, the bioinformatics software tools that we use have been published and optimized by the software authors - including the PI of our lab, Dr. C. Titus Brown who developed and maintains khmer (digital normalization and reads error correction) and sourmash (decontamination) - and are made available for users, like ourselves, to generate data products such as de novo genome and transcriptome assemblies and annotations for our first two objectives.&lt;/p&gt;
&lt;p&gt;The third deep learning objective is an exploratory analysis, and we do not have all of the code yet. The scripts that we have written collaboratively thus far do not require computing resources beyond a cloud instance that will accomodate the software and tables containing expression data from hundreds of species by &amp;gt;30,000 genes each, which is beyond what can be run on a laptop computer. Therefore, we are requesting Jetstream resources to further explore this type of analysis.&lt;/p&gt;
&lt;p&gt;We have been successful in running these tools on systems with slurm management, such as MSU hpcc and UCD farm cluster. However, these hpc resources will not support the work that we want to do to assemble genomes with ONT and Illumina data, re-assemble more transcriptomes, and complete machine learning analyses. Therefore, we are hoping to use PSC Bridges to conduct the assemblies of four genomes.&lt;/p&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;p&gt;Bushmanova, E., Antipov, D., Lapidus, A., &amp;amp; Przhibelskiy, A. D. (2018). rnaSPAdes: a de novo transcriptome assembler and its application to RNA-Seq data. bioRxiv, 420208.&lt;/p&gt;
&lt;p&gt;Cantarel, B. L., Korf, I., Robb, S. M., Parra, G., Ross, E., Moore, B., ... &amp;amp; Yandell, M. (2008). MAKER: an easy-to-use annotation pipeline designed for emerging model organism genomes. Genome research, 18(1), 188-196.&lt;/p&gt;
&lt;p&gt;Chollet, F. (2018). Keras: The python deep learning library. Astrophysics Source Code Library.&lt;/p&gt;
&lt;p&gt;de Lannoy, C., de Ridder, D., &amp;amp; Risse, J. (2017). The long reads ahead: de novo genome assembly using the MinION. F1000Research, 6.&lt;/p&gt;
&lt;p&gt;Dunn, C. W., Howison, M., &amp;amp; Zapata, F. (2013). Agalma: an automated phylogenomics workflow. BMC bioinformatics, 14(1), 330.&lt;/p&gt;
&lt;p&gt;Ebbert, M. T., Jensen, T. D., Jansen-West, K., Sens, J. P., Reddy, J. S., Ridge, P. G., ... &amp;amp; Keene, D. (2019). Systematic analysis of dark and camouflaged genes: disease-relevant genes hiding in plain sight. bioRxiv, 514497.&lt;/p&gt;
&lt;p&gt;Foster, E. D., &amp;amp; Deardorff, A. (2017). Open science framework (OSF). Journal of the Medical Library Association: JMLA, 105(2), 203.&lt;/p&gt;
&lt;p&gt;Kannan, S., Hui, J., Mazooji, K., Pachter, L., &amp;amp; Tse, D. (2016). Shannon: An information-optimal de novo rna-seq assembler. bioRxiv, 039230.&lt;/p&gt;
&lt;p&gt;Keeling, P. J., Burki, F., Wilcox, H. M., Allam, B., Allen, E. E., Amaral-Zettler, L. A., ... &amp;amp; Beszteri, B. (2014). The Marine Microbial Eukaryote Transcriptome Sequencing Project (MMETSP): illuminating the functional diversity of eukaryotic life in the oceans through transcriptome sequencing. PLoS biology, 12(6), e1001889.&lt;/p&gt;
&lt;p&gt;Grabherr, M. G., Haas, B. J., Yassour, M., Levin, J. Z., Thompson, D. A., Amit, I., ... &amp;amp; Chen, Z. (2011). Trinity: reconstructing a full-length transcriptome without a genome from RNA-Seq data. Nature biotechnology, 29(7), 644.&lt;/p&gt;
&lt;p&gt;Johnson, Lisa K., Alexander, Harriet, &amp;amp; Brown, C. Titus. (2018). Re-assembly, quality evaluation, and annotation of 678 microbial eukaryotic reference transcriptomes, GigaScience, giy158, https://doi.org/10.1093/gigascience/giy158&lt;/p&gt;
&lt;p&gt;Johnson, Lisa K., Alexander, Harriet, &amp;amp; Brown, C. Titus. (2018). MMETSP re-assemblies [Data set]. Zenodo. https://doi.org/10.5281/zenodo.740440  &lt;/p&gt;
&lt;p&gt;Kanehisa, M., &amp;amp; Goto, S. (2000). KEGG: kyoto encyclopedia of genes and genomes. Nucleic acids research, 28(1), 27-30.&lt;/p&gt;
&lt;p&gt;Love MI, Huber W, Anders S. 2014. Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2. GenomeBiology. 15:550.&lt;/p&gt;
&lt;p&gt;MacManes, M. D. (2018). The Oyster River Protocol: a multi-assembler and kmer approach for de novo transcriptome assembly. PeerJ, 6, e5428.&lt;/p&gt;
&lt;p&gt;Patro R, Duggal G, Love MI, Irizarry RA, Kingsford C. 2017. Salmon: fast and bias-aware quantification of transcript expression using dual-phase inference. Nature Methods. 14(4): 417-419.&lt;/p&gt;
&lt;p&gt;Rodgers, R., Roach, J. L., Reid, N. M., Whitehead, A., &amp;amp; Duvernell, D. D. (2018). Phylogenomic analysis of Fundulidae (Teleostei: Cyprinodotiformes) using RNA-sequencing data. Molecular phylogenetics and evolution, 121, 150-157.&lt;/p&gt;
&lt;p&gt;Robertson, G., Schein, J., Chiu, R., Corbett, R., Field, M., Jackman, S. D., ... &amp;amp; Griffith, M. (2010). De novo assembly and analysis of RNA-seq data. Nature methods, 7(11), 909.&lt;/p&gt;
&lt;p&gt;Scott C, dammit: an open and accessible de novo transcriptome annotator; 2016. In prep. Available at: https://dib-lab.github.io/dammit/. Accessed 15 Jan 2019.&lt;/p&gt;
&lt;p&gt;Simão, F. A., Waterhouse, R. M., Ioannidis, P., Kriventseva, E. V., &amp;amp; Zdobnov, E. M. (2015). BUSCO: assessing genome assembly and annotation completeness with single-copy orthologs. Bioinformatics, 31(19), 3210-3212.&lt;/p&gt;
&lt;p&gt;Tan, J., Hammond, J. H., Hogan, D. A., &amp;amp; Greene, C. S. (2016). ADAGE-based integration of publicly available Pseudomonas aeruginosa gene expression data with denoising autoencoders illuminates microbe-host interactions. MSystems, 1(1), e00025-15.&lt;/p&gt;
&lt;p&gt;Tan MH, Austin CM, Hammer MP, lee YP, Croft LJ, Gan HM. 2018. Finding nemo: hybrid assembly with Oxford Nanopore and Illumina reads greatly improves the clownfish (Amphiprion ocellaris) genome assembly. GigaScience. 7(3): gix137. https://doi.org/10.1093/gigascience/gix137 &lt;/p&gt;
&lt;p&gt;Vincent, P., Larochelle, H., Bengio, Y., &amp;amp; Manzagol, P. A. (2008, July). Extracting and composing robust features with denoising autoencoders. In Proceedings of the 25th international conference on Machine learning (pp. 1096-1103). ACM.&lt;/p&gt;
&lt;p&gt;Whitehead, A. (2010). The evolutionary radiation of diverse osmotolerant physiologies in killifish (Fundulus sp.). Evolution: International Journal of Organic Evolution, 64(7), 2070-2085.&lt;/p&gt;
&lt;p&gt;Zimin, A. V., Marçais, G., Puiu, D., Roberts, M., Salzberg, S. L., &amp;amp; Yorke, J. A. (2013). The MaSuRCA genome assembler. Bioinformatics, 29(21), 2669-2677.&lt;/p&gt;</content><category term="XSEDE"></category><category term="computing resources"></category><category term="hpc"></category></entry><entry><title>New vs. Old versions of Trinity</title><link href="https://johnsolk.github.io/blog/new-vs-old-versions-of-trinity.html" rel="alternate"></link><published>2018-12-08T00:00:00-08:00</published><updated>2018-12-08T00:00:00-08:00</updated><author><name>Lisa K. Johnson</name></author><id>tag:johnsolk.github.io,2018-12-08:/blog/new-vs-old-versions-of-trinity.html</id><summary type="html">&lt;p&gt;Does the newer version of Trinity (v2.8.4) make better transcriptome assemblies (for killifish) than the old (v2.2.0)?&lt;/p&gt;</summary><content type="html">&lt;h4&gt;Does the newer version of Trinity (v2.8.4) make better transcriptome assemblies (for killifish) than the old (v2.2.0)?&lt;/h4&gt;
&lt;p&gt;tl;dr Yes.&lt;/p&gt;
&lt;h1&gt;XSEDE Computing Resources&lt;/h1&gt;
&lt;p&gt;Since I'm overdrawn on my new XSEDE allocation on the &lt;a href="https://www.psc.edu/bridges/user-guide/running-jobs"&gt;PSC Bridges LM (large memory) partition&lt;/a&gt; after receiving it on 11/26/2018, a report is required to apply for more. &lt;/p&gt;
&lt;p&gt;In case you couldn't tell, I'm a really big fan of the PSC Bridges hpc! I've used 1862 SU out of the 1000 SU they allocated to me on the LM partition and 11484 out of 13000 SU on the RM (regular memory).  &lt;/p&gt;
&lt;p&gt;In case it might benefit others, here is roughly the progress report that I will submit with my request.&lt;/p&gt;
&lt;h1&gt;Re-assembling 17 &lt;em&gt;Fundulus&lt;/em&gt; killifish transcriptomes&lt;/h1&gt;
&lt;p&gt;Since receiving my allocation to the PSC Bridges LM partition on 11/26/2018, I have re-assembled 17 transcriptomes from 16 species of &lt;em&gt;Fundulus&lt;/em&gt; killifish using the &lt;a href="(https://github.com/trinityrnaseq/trinityrnaseq)"&gt;Trinity &lt;em&gt;de novo&lt;/em&gt; transcriptome assembler&lt;/a&gt; version 2.8.4. I originally &lt;a href="https://figshare.com/articles/De_novo_assemblies_annotations_and_gene_expression_profiling_of_gill_epithelium_from_16_species_of_Fundulus_killifish_in_response_to_salinity_change_/6827201"&gt;assembled transcriptomes from the 16 Fundulus species&lt;/a&gt; using Trinity version 2.2.0.&lt;/p&gt;
&lt;p&gt;There is &lt;a href="https://github.com/johnsolk/MMETSP/blob/master/notebooks/Supplemental%20Notebook%202%20-%20Trinity_version_comparisons.ipynb"&gt;some evidence&lt;/a&gt; that assemblies can be improved by using the updated versions of Trinity. I wanted to re-assemble these killifish transcriptomes to see if the assemblies could be improved.&lt;/p&gt;
&lt;p&gt;These transcriptomes will be used for the purpose of studying the &lt;a href="https://www.ncbi.nlm.nih.gov/pubmed/20100216"&gt;history of adaptation to different salinities&lt;/a&gt;. Some &lt;em&gt;Fundulus&lt;/em&gt; species can tolerate a range of salinities (euryhaline) by switching osmoregulatory mechanisms while others require a more narrow salinity range (stenohaline) in either fresh or marine waters. This large set of RNAseq data from multiple species is going to help us better characterize the divergence of these molecular osmoregulatory mechanisms between euryhaline and stenohaline freshwater species. To that end, I am attempting to develop a &lt;a href="https://github.com/johnsolk/RNAseq_15killifish"&gt;pipeline for orthologous gene expression profiling analysis across species&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This profiling analysis will enable us to compare expression patterns of salinity-responsive genes, e.g. &lt;a href="https://www.ebi.ac.uk/interpro/entry/IPR023275"&gt;aquaporin 3&lt;/a&gt; (shown below) across clades of species.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/WhiteheadLab/RNAseq_15killifish/115b2d8eaf1485b6e8e248f36912d619de089b8a/aqu3.png"&gt;&lt;/p&gt;
&lt;p&gt;The nature of the fragmented assembly output from Trinity makes it especially challenging in our attempt to develop this pipeline. We want to make sure that the reference transcriptomes are the best that they can be so that expression profiles are accurately reflected across species.&lt;/p&gt;
&lt;h2&gt;Are there differences between the v2.2.0 and v2.8.4 assemblies?&lt;/h2&gt;
&lt;p&gt;Yes. Are they better? It seems so. But, there are a few items to investigate further.&lt;/p&gt;
&lt;p&gt;Below are comparisons of various evaluation metrics between the 17 old v2.2.0 (blue) and new v2.8.4 (green) Trinity assemblies. On the left are slope graphs comparing the metric between both assemblies and on the right are split violin plots showing the distributions of all the assemblies.&lt;/p&gt;
&lt;p&gt;Shout out to &lt;a href="https://www.whoi.edu/profile/halexander"&gt;Dr. Harriet Alexander&lt;/a&gt; for helping with the code to visualize these types of comparisons for &lt;a href="http://dx.doi.org/10.5524/100522"&gt;our paper comparing re-assemblies for the MMETSP - coming out soon in GigaScience&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Code for making these plots is &lt;a href="https://github.com/WhiteheadLab/RNAseq_15killifish/blob/master/notebooks/evaluation_figures.ipynb"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;There are fewer contigs.&lt;/h3&gt;
&lt;p&gt;However, the large numbers &amp;gt;100,000 contigs indicates that these assemblies are still very fragmented. &lt;a href="https://johnsolk.github.io/blog/explorations-with-orthofinder.html"&gt;Orthogroup/ortholog prediction&lt;/a&gt; is required for downstream analysis. &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/WhiteheadLab/RNAseq_15killifish/master/evaluation/contigs.png"&gt;&lt;/p&gt;
&lt;h3&gt;The BUSCO scores are higher.&lt;/h3&gt;
&lt;p&gt;What makes these assemblies especially appealing is their higher scores with the &lt;a href="https://busco.ezlab.org/"&gt;Benchmarking Universal Single-Copy Ortholog (BUSCO)&lt;/a&gt; assessment tool. One species, &lt;em&gt;Lucania goodei&lt;/em&gt; had 100%! The distribution of scores is tighter for the new assemblies compared to the old.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/WhiteheadLab/RNAseq_15killifish/master/evaluation/busco_euk.png"&gt; &lt;img alt="" src="https://raw.githubusercontent.com/WhiteheadLab/RNAseq_15killifish/master/evaluation/busco_metazoa.png"&gt;&lt;/p&gt;
&lt;h3&gt;Lower % ORF?&lt;/h3&gt;
&lt;p&gt;For some reason, mean % ORF decreases. This was not expected.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/WhiteheadLab/RNAseq_15killifish/master/evaluation/orf_perc.png"&gt;&lt;/p&gt;
&lt;h3&gt;Number of contigs with ORF&lt;/h3&gt;
&lt;p&gt;This is roughly the same and a very low number.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://raw.githubusercontent.com/WhiteheadLab/RNAseq_15killifish/master/evaluation/n_orf.png"&gt;&lt;/p&gt;
&lt;h3&gt;Similar unique k-mers&lt;/h3&gt;
&lt;p&gt;The number of unique k-mers (k=25) does not really change. This means that the content is similar.
&lt;img alt="" src="https://raw.githubusercontent.com/WhiteheadLab/RNAseq_15killifish/master/evaluation/kmers.png"&gt;
&lt;img alt="" src="https://raw.githubusercontent.com/WhiteheadLab/RNAseq_15killifish/master/evaluation/kmers_scatter.png"&gt;&lt;/p&gt;
&lt;h3&gt;Conditional Reciprocal Best Blast&lt;/h3&gt;
&lt;p&gt;Using &lt;a href="http://hibberdlab.com/transrate/metrics.html"&gt;transrate &lt;code&gt;--assembly&lt;/code&gt; reference mode&lt;/a&gt; to examine the comparative metrics with &lt;a href="https://github.com/cboursnell/crb-blast"&gt;Conditional Reciprocal Best BLAST (CRBB)&lt;/a&gt; between assemblies consistently did not work, for some reason. (Whereas it did work for comparison with the &lt;a href="ftp://ftp.ncbi.nlm.nih.gov/genomes/Fundulus_heteroclitus/RNA/"&gt;NCBI version of the &lt;em&gt;Fundulus heteroclitus&lt;/em&gt; sister species&lt;/a&gt;) This requires further investigation.&lt;/p&gt;
&lt;p&gt;Version:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Transrate v1.0.3
by Richard Smith-Unna, Chris Boursnell, Rob Patro,
   Julian Hibberd, and Steve Kelly
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;transrate --assembly=/pylon5/bi5fpmp/ljcohen/kfish_trinity/F_parvapinis.trinity_out.Trinity.fasta --reference=/pylon5/bi5fpmp/ljcohen/kfish_assemblies_old/F_parvapinis.trinity_out.Trinity.fasta --threads=8 --output=/pylon5/bi5fpmp/ljcohen/kfish_transrate/F_parvapinis_trinity_v_old/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[ INFO] 2018-12-06 22:23:47 : Loading assembly: /pylon5/bi5fpmp/ljcohen/kfish_trinity/F_parvapinis.trinity_out.Trinity.fasta
[ INFO] 2018-12-06 22:24:45 : Analysing assembly: /pylon5/bi5fpmp/ljcohen/kfish_trinity/F_parvapinis.trinity_out.Trinity.fasta
[ INFO] 2018-12-06 22:24:45 : Results will be saved in /pylon5/bi5fpmp/ljcohen/kfish_transrate/F_parvapinis_trinity_v_old/F_parvapinis.trinity_out.Trinity
[ INFO] 2018-12-06 22:24:45 : Calculating contig metrics...
[ INFO] 2018-12-06 22:25:37 : Contig metrics:
[ INFO] 2018-12-06 22:25:37 : -----------------------------------
[ INFO] 2018-12-06 22:25:37 : n seqs                       298549
[ INFO] 2018-12-06 22:25:37 : smallest                        183
[ INFO] 2018-12-06 22:25:37 : largest                       27771
[ INFO] 2018-12-06 22:25:37 : n bases                   310786992
[ INFO] 2018-12-06 22:25:37 : mean len                    1040.98
[ INFO] 2018-12-06 22:25:37 : n under 200                      15
[ INFO] 2018-12-06 22:25:37 : n over 1k                     77121
[ INFO] 2018-12-06 22:25:37 : n over 10k                      802
[ INFO] 2018-12-06 22:25:37 : n with orf                    62453
[ INFO] 2018-12-06 22:25:37 : mean orf percent              43.26
[ INFO] 2018-12-06 22:25:37 : n90                             340
[ INFO] 2018-12-06 22:25:37 : n70                            1141
[ INFO] 2018-12-06 22:25:37 : n50                            2512
[ INFO] 2018-12-06 22:25:37 : n30                            4111
[ INFO] 2018-12-06 22:25:37 : n10                            6966
[ INFO] 2018-12-06 22:25:37 : gc                             0.46
[ INFO] 2018-12-06 22:25:37 : bases n                           0
[ INFO] 2018-12-06 22:25:37 : proportion n                    0.0
[ INFO] 2018-12-06 22:25:37 : Contig metrics done in 52 seconds
[ INFO] 2018-12-06 22:25:37 : No reads provided, skipping read diagnostics
[ INFO] 2018-12-06 22:25:37 : Calculating comparative metrics...
[ INFO] 2018-12-06 23:23:24 : Comparative metrics:
[ INFO] 2018-12-06 23:23:24 : -----------------------------------
[ INFO] 2018-12-06 23:23:24 : CRBB hits                         0
[ INFO] 2018-12-06 23:23:24 : n contigs with CRBB               0
[ INFO] 2018-12-06 23:23:24 : p contigs with CRBB             0.0
[ INFO] 2018-12-06 23:23:24 : rbh per reference               0.0
[ INFO] 2018-12-06 23:23:24 : n refs with CRBB                  0
[ INFO] 2018-12-06 23:23:24 : p refs with CRBB                0.0
[ INFO] 2018-12-06 23:23:24 : cov25                             0
[ INFO] 2018-12-06 23:23:24 : p cov25                         0.0
[ INFO] 2018-12-06 23:23:24 : cov50                             0
[ INFO] 2018-12-06 23:23:24 : p cov50                         0.0
[ INFO] 2018-12-06 23:23:24 : cov75                             0
[ INFO] 2018-12-06 23:23:24 : p cov75                         0.0
[ INFO] 2018-12-06 23:23:24 : cov85                             0
[ INFO] 2018-12-06 23:23:24 : p cov85                         0.0
[ INFO] 2018-12-06 23:23:24 : cov95                             0
[ INFO] 2018-12-06 23:23:24 : p cov95                         0.0
[ INFO] 2018-12-06 23:23:24 : reference coverage              0.0
[ INFO] 2018-12-06 23:23:24 : Comparative metrics done in 3467 seconds
[ INFO] 2018-12-06 23:23:24 : -----------------------------------
[ INFO] 2018-12-06 23:23:24 : Writing contig metrics for each contig to /pylon5/bi5fpmp/ljcohen/kfish_transrate/F_parvapinis_trinity_v_old/F_parvapinis.trinity_out.Trinity/contigs.csv
[ INFO] 2018-12-06 23:23:43 : Writing analysis results to assemblies.csv
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Trinity v2.8.4 is better than v2.2.0. While v2.8.4 still produces very fragmented assemblies, the higher BUSCO content is exciting. &lt;/p&gt;
&lt;h3&gt;There are questions requiring further investigation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Why, if the unique k-mer content is similiar, would the BUSCO scores improve between versions?&lt;/li&gt;
&lt;li&gt;ORF content (number of contigs with ORF and mean ORF %) are parodoxical. Why would the ORF content decrease in the newer assemblies?&lt;/li&gt;
&lt;li&gt;Why wouldn't transrate &lt;code&gt;---reference&lt;/code&gt; work to get CRBB metrics between these assemblies?&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;What has improved in Trinity v2.8.4?&lt;/h1&gt;
&lt;p&gt;According to the &lt;a href="https://github.com/trinityrnaseq/trinityrnaseq/releases"&gt;release notes&lt;/a&gt; from Trinity, major improvements have included using &lt;a href="https://salmon.readthedocs.io/en/latest/"&gt;salmon expression quantification&lt;/a&gt; to help with filtering out assembly artifacts and overhauling the "supertranscript module" to deal with high polymorphism situations. Since killifish are highly heterozygous, we are likely benefitting from these improvements.&lt;/p&gt;
&lt;h1&gt;Future directions&lt;/h1&gt;
&lt;p&gt;In addition to annotating these transcritomes and continuing to investigate the questions above, I would also like to try Matt MacManes' &lt;a href="https://oyster-river-protocol.readthedocs.io/en/latest/"&gt;Oyster River Protocol&lt;/a&gt; and accompanying &lt;a href="https://github.com/macmanes-lab/Oyster_River_Protocol/blob/master/orthofuser.mk"&gt;'orthofuser' script&lt;/a&gt; to combine contigs from different assemblers.&lt;/p&gt;</content><category term="comparative"></category><category term="transcriptome"></category><category term="re-assemblies"></category></entry><entry><title>Explorations with Orthofinder</title><link href="https://johnsolk.github.io/blog/explorations-with-orthofinder.html" rel="alternate"></link><published>2018-12-05T00:00:00-08:00</published><updated>2018-12-05T00:00:00-08:00</updated><author><name>Lisa K. Johnson</name></author><id>tag:johnsolk.github.io,2018-12-05:/blog/explorations-with-orthofinder.html</id><summary type="html">&lt;p&gt;Running Orthofinder for the first time, taking a look at the output files&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here's my weekend exploration of &lt;a href="https://github.com/davidemms/OrthoFinder"&gt;Orthofinder&lt;/a&gt; with &lt;a href="http://farm.cse.ucdavis.edu/~ljcohen/killifish/aa_translations/"&gt;amino acid translations from de novo transcriptome assemblies of 17 species of killifish&lt;/a&gt;. Translations of Trinity de novo transcirptomes were done with transdecoder by the &lt;a href="https://github.com/dib-lab/dammit"&gt;dammit annotation pipeline&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/davidemms/OrthoFinder/blob/master/OrthoFinder-manual.pdf"&gt;Orthofinder manual&lt;/a&gt; and a preprint on &lt;a href="https://www.biorxiv.org/content/early/2018/11/08/466201"&gt;biorxiv&lt;/a&gt;. Found this via a &lt;a href="https://twitter.com/David__Emms/status/1060808772996743168"&gt;tweet&lt;/a&gt;, and &lt;a href="https://twitter.com/PhilippBayer/status/1060821270860718082"&gt;tweet recommendation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's the script that I ran, submitted to the barbera cluster at UC Davis (which took ~1 week to get through the queue over Thanksgiving break):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;johnsolk@barbera:/share/pilot-johnsolk$ cat orthofinder.sbatch 
#!/bin/bash -l
#SBATCH -J orthofinder_kfish
#SBATCH -t 72:00:00
#SBATCH -c 8
#SBATCH -p production
#SBATCH --mem=48000

aklog
source ~/.bashrc
source activate py27
orthofinder -f killifish_RNAseq_fasta -S diamond
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;johnsolk@barbera:/share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26$ ls -lah
total 388M
drwxrwxr-x 4 johnsolk johnsolk   12 Nov 27 16:50 .
drwxrwxr-x 5 johnsolk johnsolk   22 Nov 26 11:23 ..
-rw-rw-r-- 1 johnsolk johnsolk 411M Nov 27 16:49 Orthogroups.csv
-rw-rw-r-- 1 johnsolk johnsolk 6.1M Nov 27 16:49 Orthogroups.GeneCount.csv
-rw-rw-r-- 1 johnsolk johnsolk 3.6K Nov 27 16:50 Orthogroups_SpeciesOverlaps.csv
-rw-rw-r-- 1 johnsolk johnsolk 449M Nov 27 16:48 Orthogroups.txt
-rw-rw-r-- 1 johnsolk johnsolk  45M Nov 27 16:49 Orthogroups_UnassignedGenes.csv
drwxrwxr-x 6 johnsolk johnsolk   14 Nov 28 10:35 Orthologues_Nov27
-rw-rw-r-- 1 johnsolk johnsolk   69 Nov 27 16:50 SingleCopyOrthogroups.txt
-rw-rw-r-- 1 johnsolk johnsolk 1.7K Nov 27 16:50 Statistics_Overall.csv
-rw-rw-r-- 1 johnsolk johnsolk 9.7K Nov 27 16:50 Statistics_PerSpecies.csv
drwxrwxr-x 2 johnsolk johnsolk  330 Nov 27 16:47 WorkingDirectory
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://github.com/davidemms/OrthoFinder"&gt;Orthofinder workflow&lt;/a&gt;:
&lt;img alt="" src="https://raw.githubusercontent.com/davidemms/OrthoFinder/master/orthofinder/workflow.png"&gt;&lt;/p&gt;
&lt;p&gt;Orthologues directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;johnsolk@barbera:/share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthologues_Nov27$ ls -lah
total 462M
drwxrwxr-x  6 johnsolk johnsolk   14 Nov 28 10:35 .
drwxrwxr-x  4 johnsolk johnsolk   12 Nov 27 16:50 ..
-rw-rw-r--  1 johnsolk johnsolk 2.2G Nov 28 10:35 Duplications.csv
drwxrwxr-x  2 johnsolk johnsolk  93K Nov 28 03:09 Gene_Trees
drwxrwxr-x 20 johnsolk johnsolk   20 Nov 28 03:10 Orthologues
-rw-rw-r--  1 johnsolk johnsolk 4.1K Nov 28 10:35 OrthologuesStats_many-to-many.csv
-rw-rw-r--  1 johnsolk johnsolk 4.1K Nov 28 10:35 OrthologuesStats_many-to-one.csv
-rw-rw-r--  1 johnsolk johnsolk 3.9K Nov 28 10:35 OrthologuesStats_one-to-many.csv
-rw-rw-r--  1 johnsolk johnsolk 4.1K Nov 28 10:35 OrthologuesStats_one-to-one.csv
-rw-rw-r--  1 johnsolk johnsolk 4.1K Nov 28 10:35 OrthologuesStats_Totals.csv
drwxrwxr-x  2 johnsolk johnsolk  93K Nov 28 10:35 Recon_Gene_Trees
-rw-rw-r--  1 johnsolk johnsolk 1.3K Nov 28 03:10 SpeciesTree_rooted_node_labels.txt
-rw-rw-r--  1 johnsolk johnsolk 1.4K Nov 28 03:10 SpeciesTree_rooted.txt
drwxrwxr-x  5 johnsolk johnsolk    8 Nov 28 10:37 WorkingDirectory
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Trees&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Files are in &lt;a href="http://evolution.genetics.washington.edu/phylip/newicktree.html"&gt;newick format&lt;/a&gt; (&lt;a href="https://en.wikipedia.org/wiki/Newick_format"&gt;Wiki&lt;/a&gt;), install &lt;a href="http://dendroscope.org/"&gt;Dendroscope&lt;/a&gt; to view.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Orthologue output&lt;/h3&gt;
&lt;p&gt;Orthologues are located here, these are directories (one for each species):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;johnsolk@barbera:/share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthologues_Nov27/Orthologues$ ls -lah
total 1.4M
drwxrwxr-x 20 johnsolk johnsolk 20 Nov 28 03:10 .
drwxrwxr-x  6 johnsolk johnsolk 14 Nov 28 10:35 ..
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_A_xenica.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_catanatus.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_chrysotus.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_diaphanus.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_grandis.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_heteroclitusMDPL.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_heteroclitusMDPP.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_notatus.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_notti.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_olivaceous.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:12 Orthologues_F_parvapinis.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_rathbuni.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_sciadicus.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_similis.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_F_zebrinus.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_L_goodei.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:11 Orthologues_L_parva.trinity_out.Trinity.fasta.transdecoder.pep
drwxrwxr-x  2 johnsolk johnsolk 19 Nov 28 03:10 Putative_Xenologues
johnsolk@barbera:/share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthologues_Nov27/Orthologues$ pwd
/share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthologues_Nov27/Orthologues
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;These are for &lt;em&gt;A. xenica&lt;/em&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;johnsolk@barbera:/share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthologues_Nov27/Orthologues/Orthologues_A_xenica.trinity_out.Trinity.fasta.transdecoder.pep$ ls -lah
total 180M
drwxrwxr-x  2 johnsolk johnsolk   19 Nov 28 03:11 .
drwxrwxr-x 20 johnsolk johnsolk   20 Nov 28 03:10 ..
-rw-rw-r--  1 johnsolk johnsolk  27M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_catanatus.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  27M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_chrysotus.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  24M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_diaphanus.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  29M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_grandis.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  26M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_heteroclitusMDPL.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  26M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_heteroclitusMDPP.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  28M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_notatus.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  17M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_notti.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  26M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_olivaceous.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  24M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_parvapinis.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  29M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_rathbuni.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  22M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_sciadicus.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  24M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_similis.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  21M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__F_zebrinus.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  25M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__L_goodei.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk  27M Nov 28 10:35 A_xenica.trinity_out.Trinity.fasta.transdecoder.pep__v__L_parva.trinity_out.Trinity.fasta.transdecoder.pep.csv
-rw-rw-r--  1 johnsolk johnsolk 220K Nov 28 08:33 Putative_Horizontal_Gene_Transfer.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;johnsolk@barbera:/share/pilot-johnsolk$ cat slurm-20077670.out
Auks API request failed : krb5 cred : unable to read credential cache
/bin/bash: /home/johnsolk/.bash_profile: Permission denied
aklog: Couldn&amp;#39;t determine realm of user:aklog: No credentials cache found  while getting realm
/var/spool/slurmd/job20077670/slurm_script: line 9: /home/johnsolk/.bashrc: Permission denied

OrthoFinder version 2.2.7 Copyright (C) 2014 David Emms

2018-11-26 11:23:26 : Starting OrthoFinder
16 thread(s) for highly parallel tasks (BLAST searches etc.)
1 thread(s) for OrthoFinder algorithm

Checking required programs are installed
----------------------------------------
Test can run &amp;quot;mcl -h&amp;quot; - ok
Test can run &amp;quot;fastme -i /share/pilot-johnsolk/killifish_RNAseq_fasta/SimpleTest.phy -o /share/pilot-johnsolk/killifish_RNAseq_fasta/SimpleTest.tre&amp;quot; - ok

Dividing up work for BLAST for parallel processing
--------------------------------------------------
2018-11-26 11:24:53 : Creating diamond database 1 of 17
2018-11-26 11:24:56 : Creating diamond database 2 of 17
2018-11-26 11:24:59 : Creating diamond database 3 of 17
2018-11-26 11:25:01 : Creating diamond database 4 of 17
2018-11-26 11:25:03 : Creating diamond database 5 of 17
2018-11-26 11:25:06 : Creating diamond database 6 of 17
2018-11-26 11:25:09 : Creating diamond database 7 of 17
2018-11-26 11:25:11 : Creating diamond database 8 of 17
2018-11-26 11:25:14 : Creating diamond database 9 of 17
2018-11-26 11:25:15 : Creating diamond database 10 of 17
2018-11-26 11:25:18 : Creating diamond database 11 of 17
2018-11-26 11:25:20 : Creating diamond database 12 of 17
2018-11-26 11:25:24 : Creating diamond database 13 of 17
2018-11-26 11:25:26 : Creating diamond database 14 of 17
2018-11-26 11:25:28 : Creating diamond database 15 of 17
2018-11-26 11:25:30 : Creating diamond database 16 of 17
2018-11-26 11:25:32 : Creating diamond database 17 of 17

Running diamond all-versus-all
------------------------------
Using 16 thread(s)
2018-11-26 11:25:35 : This may take some time....
2018-11-27 01:40:54 : Done 200 of 289
2018-11-26 19:56:13 : Done 100 of 289
2018-11-26 11:25:35 : Done 0 of 289
2018-11-27 05:34:15 : Done all-versus-all sequence search

Running OrthoFinder algorithm
-----------------------------
2018-11-27 05:34:33 : Initial processing of each species
2018-11-27 05:56:01 : Initial processing of species 0 complete
2018-11-27 06:19:34 : Initial processing of species 1 complete
2018-11-27 06:42:17 : Initial processing of species 2 complete
2018-11-27 07:00:28 : Initial processing of species 3 complete
2018-11-27 07:26:45 : Initial processing of species 4 complete
2018-11-27 07:48:38 : Initial processing of species 5 complete
2018-11-27 08:10:19 : Initial processing of species 6 complete
2018-11-27 08:34:54 : Initial processing of species 7 complete
2018-11-27 08:45:45 : Initial processing of species 8 complete
2018-11-27 09:07:35 : Initial processing of species 9 complete
2018-11-27 09:27:08 : Initial processing of species 10 complete
2018-11-27 09:52:50 : Initial processing of species 11 complete
2018-11-27 10:08:33 : Initial processing of species 12 complete
2018-11-27 10:27:23 : Initial processing of species 13 complete
2018-11-27 10:42:00 : Initial processing of species 14 complete
2018-11-27 11:00:31 : Initial processing of species 15 complete
2018-11-27 11:25:14 : Initial processing of species 16 complete
2018-11-27 11:59:32 : Connected putatitive homologs
[mcl] cut &amp;lt;61&amp;gt; instances of overlap
2018-11-27 16:47:54 : Ran MCL

Writing orthogroups to file
---------------------------
A duplicate accession was found using just first part: Transcript_74|m.19
Tried to use only the first part of the accession in order to list the sequences in each orthogroup
more concisely but these were not unique. The full accession line will be used instead.

Orthogroups have been written to tab-delimited files:
   /share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthogroups.csv
   /share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthogroups.txt (OrthoMCL format)
   /share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthogroups_UnassignedGenes.csv
2018-11-27 16:50:24 : Done orthogroups

Analysing Orthogroups
=====================

Calculating gene distances
--------------------------
2018-11-27 23:24:44 : Done 0 of 95230
2018-11-27 23:36:14 : Done 1000 of 95230
2018-11-27 23:38:41 : Done 2000 of 95230
2018-11-27 23:40:18 : Done 3000 of 95230
2018-11-27 23:41:34 : Done 4000 of 95230
2018-11-27 23:42:36 : Done 5000 of 95230
2018-11-27 23:43:31 : Done 6000 of 95230
2018-11-27 23:44:19 : Done 7000 of 95230
2018-11-27 23:45:03 : Done 8000 of 95230
2018-11-27 23:45:44 : Done 9000 of 95230
2018-11-27 23:46:21 : Done 10000 of 95230
2018-11-27 23:46:58 : Done 11000 of 95230
2018-11-27 23:47:32 : Done 12000 of 95230
2018-11-27 23:48:04 : Done 13000 of 95230
2018-11-27 23:48:32 : Done 14000 of 95230
2018-11-27 23:49:01 : Done 15000 of 95230
2018-11-27 23:49:27 : Done 16000 of 95230
2018-11-27 23:49:53 : Done 17000 of 95230
2018-11-27 23:50:18 : Done 18000 of 95230
2018-11-27 23:50:43 : Done 19000 of 95230
2018-11-27 23:51:07 : Done 20000 of 95230
2018-11-27 23:51:29 : Done 21000 of 95230
2018-11-27 23:51:49 : Done 22000 of 95230
2018-11-27 23:52:09 : Done 23000 of 95230
2018-11-27 23:52:28 : Done 24000 of 95230
2018-11-27 23:52:47 : Done 25000 of 95230
2018-11-27 23:53:07 : Done 26000 of 95230
2018-11-27 23:53:26 : Done 27000 of 95230
2018-11-27 23:53:44 : Done 28000 of 95230
2018-11-27 23:54:01 : Done 29000 of 95230
2018-11-27 23:54:19 : Done 30000 of 95230
2018-11-27 23:54:37 : Done 31000 of 95230
2018-11-27 23:54:54 : Done 32000 of 95230
2018-11-27 23:55:14 : Done 33000 of 95230
2018-11-27 23:55:32 : Done 34000 of 95230
2018-11-27 23:55:50 : Done 35000 of 95230
2018-11-27 23:56:06 : Done 36000 of 95230
2018-11-27 23:56:22 : Done 37000 of 95230
2018-11-27 23:56:37 : Done 38000 of 95230
2018-11-27 23:56:53 : Done 39000 of 95230
2018-11-27 23:57:09 : Done 40000 of 95230
2018-11-27 23:57:25 : Done 41000 of 95230
2018-11-27 23:57:41 : Done 42000 of 95230
2018-11-27 23:57:58 : Done 43000 of 95230
2018-11-27 23:58:15 : Done 44000 of 95230
2018-11-27 23:58:31 : Done 45000 of 95230
2018-11-27 23:58:47 : Done 46000 of 95230
2018-11-27 23:59:02 : Done 47000 of 95230
2018-11-27 23:59:18 : Done 48000 of 95230
2018-11-27 23:59:35 : Done 49000 of 95230
2018-11-27 23:59:51 : Done 50000 of 95230
2018-11-28 00:00:06 : Done 51000 of 95230
2018-11-28 00:00:21 : Done 52000 of 95230
2018-11-28 00:00:37 : Done 53000 of 95230
2018-11-28 00:00:52 : Done 54000 of 95230
2018-11-28 00:01:07 : Done 55000 of 95230
2018-11-28 00:01:23 : Done 56000 of 95230
2018-11-28 00:01:40 : Done 57000 of 95230
2018-11-28 00:01:56 : Done 58000 of 95230
2018-11-28 00:02:11 : Done 59000 of 95230
2018-11-28 00:02:29 : Done 60000 of 95230
2018-11-28 00:02:47 : Done 61000 of 95230
2018-11-28 00:03:07 : Done 62000 of 95230
2018-11-28 00:03:27 : Done 63000 of 95230
2018-11-28 00:03:48 : Done 64000 of 95230
2018-11-28 00:04:09 : Done 65000 of 95230
2018-11-28 00:04:31 : Done 66000 of 95230
2018-11-28 00:04:52 : Done 67000 of 95230
2018-11-28 00:05:13 : Done 68000 of 95230
2018-11-28 00:05:35 : Done 69000 of 95230
2018-11-28 00:05:55 : Done 70000 of 95230
2018-11-28 00:06:14 : Done 71000 of 95230
2018-11-28 00:06:34 : Done 72000 of 95230
2018-11-28 00:06:55 : Done 73000 of 95230
2018-11-28 00:07:16 : Done 74000 of 95230
2018-11-28 00:07:36 : Done 75000 of 95230
2018-11-28 00:07:56 : Done 76000 of 95230
2018-11-28 00:08:18 : Done 77000 of 95230
2018-11-28 00:08:39 : Done 78000 of 95230
2018-11-28 00:09:02 : Done 79000 of 95230
2018-11-28 00:09:22 : Done 80000 of 95230
2018-11-28 00:09:42 : Done 81000 of 95230
2018-11-28 00:10:03 : Done 82000 of 95230
2018-11-28 00:10:24 : Done 83000 of 95230
2018-11-28 00:10:47 : Done 84000 of 95230
2018-11-28 00:11:09 : Done 85000 of 95230
2018-11-28 00:11:29 : Done 86000 of 95230
2018-11-28 00:11:51 : Done 87000 of 95230
2018-11-28 00:12:13 : Done 88000 of 95230
2018-11-28 00:12:33 : Done 89000 of 95230
2018-11-28 00:12:55 : Done 90000 of 95230
2018-11-28 00:13:16 : Done 91000 of 95230
2018-11-28 00:13:37 : Done 92000 of 95230
2018-11-28 00:13:57 : Done 93000 of 95230
2018-11-28 00:14:19 : Done 94000 of 95230
2018-11-28 00:14:40 : Done 95000 of 95230
2018-11-27 23:24:40 : Done

Inferring gene and species trees
--------------------------------

15603 trees had all species present and will be used by STAG to infer the species tree

A duplicate accession was found using just first part: Transcript_74|m.19
Tried to use only the first part of the accession in order to list the sequences in each orthogroup
more concisely but these were not unique. The full accession line will be used instead.


Best outgroup(s) for species tree
---------------------------------
2018-11-28 03:10:02 : Starting STRIDE
2018-11-28 03:10:53 : Done STRIDE
Observed 863 well-supported, non-terminal duplications. 852 support the best root and 11 contradict it.
Best outgroup for species tree:
  L_goodei.trinity_out.Trinity.fasta.transdecoder.pep, L_parva.trinity_out.Trinity.fasta.transdecoder.pep

Reconciling gene trees and species tree
---------------------------------------
Outgroup: L_goodei.trinity_out.Trinity.fasta.transdecoder.pep, L_parva.trinity_out.Trinity.fasta.transdecoder.pep
2018-11-28 03:10:53 : Starting Recon and orthologues
2018-11-28 03:10:53 : Starting OF Orthologues
2018-11-28 03:11:01 : Done 0 of 95230
2018-11-28 03:29:22 : Done 1000 of 95230
2018-11-28 03:41:32 : Done 2000 of 95230
2018-11-28 03:52:16 : Done 3000 of 95230
2018-11-28 04:02:05 : Done 4000 of 95230
2018-11-28 04:11:43 : Done 5000 of 95230
2018-11-28 04:21:05 : Done 6000 of 95230
2018-11-28 04:29:57 : Done 7000 of 95230
2018-11-28 04:38:22 : Done 8000 of 95230
2018-11-28 04:46:36 : Done 9000 of 95230
2018-11-28 04:54:32 : Done 10000 of 95230
2018-11-28 05:02:18 : Done 11000 of 95230
2018-11-28 05:09:55 : Done 12000 of 95230
2018-11-28 05:17:17 : Done 13000 of 95230
2018-11-28 05:24:32 : Done 14000 of 95230
2018-11-28 05:31:34 : Done 15000 of 95230
2018-11-28 05:38:29 : Done 16000 of 95230
2018-11-28 05:45:15 : Done 17000 of 95230
2018-11-28 05:52:01 : Done 18000 of 95230
2018-11-28 05:58:46 : Done 19000 of 95230
2018-11-28 06:05:27 : Done 20000 of 95230
2018-11-28 06:11:59 : Done 21000 of 95230
2018-11-28 06:17:55 : Done 22000 of 95230
2018-11-28 06:24:06 : Done 23000 of 95230
2018-11-28 06:29:51 : Done 24000 of 95230
2018-11-28 06:35:17 : Done 25000 of 95230
2018-11-28 06:40:36 : Done 26000 of 95230
2018-11-28 06:45:52 : Done 27000 of 95230
2018-11-28 06:50:55 : Done 28000 of 95230
2018-11-28 06:55:59 : Done 29000 of 95230
2018-11-28 07:00:50 : Done 30000 of 95230
2018-11-28 07:05:44 : Done 31000 of 95230
2018-11-28 07:10:23 : Done 32000 of 95230
2018-11-28 07:14:57 : Done 33000 of 95230
2018-11-28 07:19:32 : Done 34000 of 95230
2018-11-28 07:24:08 : Done 35000 of 95230
2018-11-28 07:28:38 : Done 36000 of 95230
2018-11-28 07:32:55 : Done 37000 of 95230
2018-11-28 07:37:05 : Done 38000 of 95230
2018-11-28 07:41:05 : Done 39000 of 95230
2018-11-28 07:45:02 : Done 40000 of 95230
2018-11-28 07:48:54 : Done 41000 of 95230
2018-11-28 07:52:39 : Done 42000 of 95230
2018-11-28 07:56:18 : Done 43000 of 95230
2018-11-28 08:00:01 : Done 44000 of 95230
2018-11-28 08:03:32 : Done 45000 of 95230
2018-11-28 08:07:08 : Done 46000 of 95230
2018-11-28 08:10:37 : Done 47000 of 95230
2018-11-28 08:14:11 : Done 48000 of 95230
2018-11-28 08:17:40 : Done 49000 of 95230
2018-11-28 08:21:08 : Done 50000 of 95230
2018-11-28 08:24:28 : Done 51000 of 95230
2018-11-28 08:27:52 : Done 52000 of 95230
2018-11-28 08:31:12 : Done 53000 of 95230
2018-11-28 08:34:27 : Done 54000 of 95230
2018-11-28 08:37:47 : Done 55000 of 95230
2018-11-28 08:40:57 : Done 56000 of 95230
2018-11-28 08:44:03 : Done 57000 of 95230
2018-11-28 08:47:14 : Done 58000 of 95230
2018-11-28 08:50:24 : Done 59000 of 95230
2018-11-28 08:53:25 : Done 60000 of 95230
2018-11-28 08:56:33 : Done 61000 of 95230
2018-11-28 08:59:42 : Done 62000 of 95230
2018-11-28 09:02:51 : Done 63000 of 95230
2018-11-28 09:05:54 : Done 64000 of 95230
2018-11-28 09:08:57 : Done 65000 of 95230
2018-11-28 09:12:00 : Done 66000 of 95230
2018-11-28 09:15:01 : Done 67000 of 95230
2018-11-28 09:18:00 : Done 68000 of 95230
2018-11-28 09:20:56 : Done 69000 of 95230
2018-11-28 09:23:48 : Done 70000 of 95230
2018-11-28 09:26:43 : Done 71000 of 95230
2018-11-28 09:29:36 : Done 72000 of 95230
2018-11-28 09:32:30 : Done 73000 of 95230
2018-11-28 09:35:23 : Done 74000 of 95230
2018-11-28 09:38:15 : Done 75000 of 95230
2018-11-28 09:41:06 : Done 76000 of 95230
2018-11-28 09:44:01 : Done 77000 of 95230
2018-11-28 09:46:57 : Done 78000 of 95230
2018-11-28 09:49:53 : Done 79000 of 95230
2018-11-28 09:52:48 : Done 80000 of 95230
2018-11-28 09:55:42 : Done 81000 of 95230
2018-11-28 09:58:35 : Done 82000 of 95230
2018-11-28 10:01:28 : Done 83000 of 95230
2018-11-28 10:04:15 : Done 84000 of 95230
2018-11-28 10:07:00 : Done 85000 of 95230
2018-11-28 10:09:47 : Done 86000 of 95230
2018-11-28 10:12:32 : Done 87000 of 95230
2018-11-28 10:15:18 : Done 88000 of 95230
2018-11-28 10:18:09 : Done 89000 of 95230
2018-11-28 10:20:57 : Done 90000 of 95230
2018-11-28 10:23:45 : Done 91000 of 95230
2018-11-28 10:26:34 : Done 92000 of 95230
2018-11-28 10:29:21 : Done 93000 of 95230
2018-11-28 10:32:06 : Done 94000 of 95230
2018-11-28 10:34:49 : Done 95000 of 95230
2018-11-28 10:35:27 : Done OF Orthologues
2018-11-28 10:35:50 : Done Recon

Writing results files
=====================
2018-11-28 10:37:28 : Done orthologues
Orthogroups have been written to tab-delimited files:
   /share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthogroups.csv
   /share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthogroups.txt (OrthoMCL format)
   /share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthogroups_UnassignedGenes.csv

Gene trees:
   /share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthologues_Nov27/Gene_Trees/

Rooted species tree:
   /share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthologues_Nov27/SpeciesTree_rooted.txt

Species-by-species orthologues:
   /share/pilot-johnsolk/killifish_RNAseq_fasta/Results_Nov26/Orthologues_Nov27/Orthologues/

Orthogroup statistics:
   Statistics_PerSpecies.csv   Statistics_Overall.csv   Orthogroups_SpeciesOverlaps.csv

OrthoFinder assigned 2542304 genes (91.4% of total) to 133965 orthogroups. Fifty percent of all genes were in orthogroups with 43 or more genes (G50 was 43) and were contained in the largest 18142 orthogroups (O50 was 18142). There were 15603 orthogroups with all species present and 7 of these consisted entirely of single-copy genes.

CITATION:
 When publishing work that uses OrthoFinder please cite:
 Emms D.M. &amp;amp; Kelly S. (2015), Genome Biology 16:157

 If you use the species tree in your work then please also cite:
 Emms D.M. &amp;amp; Kelly S. (2017), MBE 34(12): 3267-3278
 Emms D.M. &amp;amp; Kelly S. (2018), bioRxiv https://doi.org/10.1101/267914
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next step, figure out what it all means!&lt;/p&gt;</content><category term="comparative"></category></entry><entry><title>Killifish PromethION data sharing</title><link href="https://johnsolk.github.io/blog/killifish-promethion-data-sharing.html" rel="alternate"></link><published>2018-10-08T00:00:00-07:00</published><updated>2018-10-08T00:00:00-07:00</updated><author><name>Lisa K. Johnson</name></author><id>tag:johnsolk.github.io,2018-10-08:/blog/killifish-promethion-data-sharing.html</id><summary type="html">&lt;p&gt;Sharing PromethION sequencing data from 4 species of &lt;em&gt;Fundulus&lt;/em&gt; killifish&lt;/p&gt;</summary><content type="html">&lt;p&gt;We have new long-read &lt;a href="https://nanoporetech.com/products/promethion"&gt;ONT PromethION&lt;/a&gt; genomic DNA sequencing data from 4 species of killifish! While we're working with it and generating ~40x coverage of new Illumina PE150 data for each species, we wanted to share this information and data. Since there are not many PromethION instruments out there, to my knowledge, these data are probably some of the first of its kind to be shared, besides &lt;a href="https://www.ebi.ac.uk/ena/data/view/PRJEB26791"&gt;human data&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Update (06/27/2019)&lt;/h1&gt;
&lt;p&gt;Killifish genome sequence ONT fastq and signal files and Illumina fastq can all be found in the ENA: &lt;a href="https://www.ebi.ac.uk/ena/data/view/PRJEB29136"&gt;PRJEB29136&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Questions for the community&lt;/h1&gt;
&lt;p&gt;The purpose of this blog post is mainly to share our plan, seek advice, and see if anyone is interested in these data. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;We are planning to post these data publicly in the hopes that they can serve
methods and workflow developers! How can we make these data most useful to
the bioinformatics community? Contact me: &lt;a href="https://twitter.com/monsterbashseq"&gt;twitter&lt;/a&gt; or &lt;a href="mailto:ljcohen@ucdavis.edu"&gt;email&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We're generating these ONT data for the purpose of assembling four reference genomes for &lt;em&gt;Fundulus&lt;/em&gt; killifish species for whom we have a &lt;a href="https://www.ncbi.nlm.nih.gov/genome/?term=txid8078%5Borgn%5D"&gt;genome from a close (5-20 million years diverged) relative, &lt;em&gt;Fundulus heteroclitus&lt;/em&gt;&lt;/a&gt;. We're in the process of generating 40x coverage of Illumina data for each species to improve the consensus assemblies. &lt;/p&gt;
&lt;p&gt;By &lt;a href="https://twitter.com/olgabot/status/1017127050014949381"&gt;today's standards of genome assembly&lt;/a&gt;, this project is not the most sophisticated. We're not planning to do anything fancy to improve the scaffolding with &lt;a href="https://www.nature.com/articles/ng.3802"&gt;optical and chromatin interaction mapping&lt;/a&gt;. Just quick and dirty genomes for around $3500 each. This is also by no means a perfect data set by ONT standards. Our DNA samples - from all species - have consistently not been utilizing the pores as efficiently as possible on either MinION or PromethION flowcells, despite using fresh tissue and troubleshooting efforts with different DNA extraction and cleanup methods. Therefore, our yields from ONT sequencing have not been as high as other groups have gotten. But, from our experience, this is what can happen when new species are sequenced with a new technology.&lt;/p&gt;
&lt;p&gt;Despite these shortcomings, 20-30 Gb/species ONT data are great to have! Better than Illumina data alone. Since this is a new type of ONT data from the PromethION, we're in unchartered territory here about some things, so have questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What does one do with the millions of raw fast5 signal files from the PromethION? Our basecalled fastq are 70-100 GB, but the directory of raw fast5 signal files is &amp;gt;600 GB for each run! Wow. To our knowledge, the only software that uses these files to polish the reads is &lt;a href="https://github.com/jts/nanopolish"&gt;Nanopolish&lt;/a&gt; by &lt;a href="https://twitter.com/jaredtsimpson?lang=en"&gt;Jared Simpson's group&lt;/a&gt;. Since the files are so large, I haven't tried using Nanopolish yet. It it a good idea to try? What is the best way to share &amp;gt;600 GB of millions of fast5 files with people who might be interested in using it?&lt;/li&gt;
&lt;li&gt;Data are unfiltered. Should we remove DNA CS lambda phage spike-in before sharing in a public repository? &lt;/li&gt;
&lt;li&gt;What is the best way to look for reads suspected as errors (&amp;gt;900 Mb)? Should these be removed before sharing in a public repository?&lt;/li&gt;
&lt;li&gt;Where is the best place to share these sequencing data? Even though &lt;a href="http://help.zenodo.org/"&gt;zenodo has recently upgraded their file size limits to 50 GB&lt;/a&gt;, it is not a good place to store these data based on their response to my request:&lt;blockquote&gt;
&lt;p&gt;Dear Lisa,
We're terribly sorry for the delay in response. Upload quota increase requests for bigger datasets have to be passed up the hierarchy, which usually takes time.&lt;/p&gt;
&lt;p&gt;I'm sorry to inform you that we, unfortunately, will not be able to host the dataset as it surpasses our max allowed quota increase too much. By default, we provide a one-time quota increase up to 100GB for a dataset that will be cited from a peer-reviewed article.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Any other advice, questions, or comments on things that perhaps we are not considering?&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;Our plan from here:&lt;/h1&gt;
&lt;h4&gt;1. Post data to a public nucleic acid repository&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://www.ebi.ac.uk/ena/submit/sequence-submission"&gt;European Nucleotide Archive (ENA)-EBI&lt;/a&gt; or SRA-NCBI?
(I will post the links to records here once they are available.)&lt;/p&gt;
&lt;p&gt;What to do with the raw fast5 signal files?&lt;/p&gt;
&lt;h4&gt;2. Write a data note&lt;/h4&gt;
&lt;p&gt;Either &lt;a href="https://f1000research.com/for-authors/article-guidelines/data-notes"&gt;F1000 research&lt;/a&gt; or &lt;a href="https://academic.oup.com/gigascience/pages/data_note"&gt;GigaScience&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;3. Use the genome assemblies!&lt;/h4&gt;
&lt;p&gt;The ultimate goal is to do some comparative genomics analyses between these genomes, use them as references for RNAseq data, and scan for regulatory regions of interest, e.g. &lt;a href="http://www.pnas.org/content/114/13/E2729"&gt;salinity-responsive enhancing elements (OSRE)&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Thank you!&lt;/h1&gt;
&lt;p&gt;This is a collaborative effort between my two advisors, Dr. C. Titus Brown and Dr. Andrew Whitehead. (Seriously, I can't believe how fortunate I am to have two such supportive advisors and a willingly collaborative network of lab members and colleagues.) Other contributors to this project have been &lt;a href="http://dnatech.genomecenter.ucdavis.edu/people/"&gt;Dr. Ruta Sahasrabudhe, Dr. Lutz Froenicke&lt;/a&gt;, &lt;a href="https://twitter.com/tonygill3?lang=en"&gt;Tony Gill&lt;/a&gt;, &lt;a href="https://whiteheadresearch.wordpress.com/people/"&gt;Jen Roach&lt;/a&gt;, and committee member &lt;a href="https://biology.ucdavis.edu/people/megan-dennis"&gt;Dr. Megan Dennis&lt;/a&gt;. Special thanks to &lt;a href="http://porecamp.github.io/texas/"&gt;instructors at PoreCamp, Texas&lt;/a&gt;, &lt;a href="https://twitter.com/BioMath?lang=en"&gt;Dr. Charlie Johnson&lt;/a&gt; and &lt;a href="https://twitter.com/DNA_hole?lang=en"&gt;Dr. Richard Metz&lt;/a&gt; at &lt;a href="http://www.txgen.tamu.edu/#aboutus"&gt;Texas A&amp;amp;M Agrilife Research Sequencing Facility&lt;/a&gt; (where PoreCamp was held) for Illumina NovaSeq data from &lt;a href="https://twitter.com/nanopore/status/872910510508953605"&gt;&lt;em&gt;Fundulus olivaceus&lt;/em&gt;&lt;/a&gt;). THANK YOU to &lt;a href="http://people.mst.edu/faculty/duvernelld/index.html"&gt;Dr. David Duvernell at Missouri University of Science &amp;amp; Technology&lt;/a&gt; and &lt;a href="http://ichthyology.usm.edu/"&gt;Dr. Jake Schaefer at the University of Southern Mississippi&lt;/a&gt; for sending us all of these fish to us, live! &lt;/p&gt;
&lt;p&gt;All of this is made possible by funding support from the Moore Foundation Data-Driven-Discovery investigator award to Dr. C. Titus Brown.&lt;/p&gt;
&lt;p&gt;Pics from &lt;a href="http://www.txgen.tamu.edu/porecamp_usa/"&gt;Porecamp at Texas A&amp;amp;M&lt;/a&gt;, June 2017:&lt;/p&gt;
&lt;p&gt;&lt;img src="img/porecamp.png" width="600px"&gt;&lt;/p&gt;
&lt;p&gt;Below is a bit of background on the project, methods, preliminary results, references, and a list of some tools I've compiled.&lt;/p&gt;
&lt;h1&gt;New PromethION instrument at the UC Davis Genome Center&lt;/h1&gt;
&lt;p&gt;In &lt;a href="https://twitter.com/meganamsu/status/997216050247864322"&gt;May 2018&lt;/a&gt;, the &lt;a href="http://dnatech.genomecenter.ucdavis.edu/"&gt;UC Davis Genome Center&lt;/a&gt; received its PromethION from Oxford Nanopore Technologies (ONT)! This was part of a collaborative effort to acquire the instrument through the &lt;a href="https://www.genomeweb.com/sequencing-technology/early-access-oxford-nanopore-promethion-requires-75k-deposit-24k-access-fee#.W70sSpNKhTY"&gt;PromethION early release program (PEAP)&lt;/a&gt; back in early 2016 by Genome Center faculty: &lt;a href="https://biology.ucdavis.edu/people/richard-michelmore"&gt;Dr. Richard Michelmore&lt;/a&gt;, &lt;a href="https://www.ucdmc.ucdavis.edu/biochem/faculty/McPherson/index.html"&gt;Dr. John McPherson&lt;/a&gt;, &lt;a href="https://biology.ucdavis.edu/people/megan-dennis"&gt;Dr. Megan Dennis&lt;/a&gt; (who is on my dissertation committee!), &lt;a href="https://biology.ucdavis.edu/people/luis-g-carvajal-carmona"&gt;Dr. Luis Carvajal-Carmona&lt;/a&gt;, and &lt;a href="http://genomecenter.ucdavis.edu/people/faculty/name/c-titus-brown/"&gt;Dr. C. Titus Brown&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="img/ruta_promethion.png" width="600px"&gt;&lt;/p&gt;
&lt;p&gt;Around 2016, &lt;a href="https://twitter.com/monsterbashseq/status/720776195067891712"&gt;I started working with the ONT MinION&lt;/a&gt; to see if it is feasible to use for genome assemblies. First, with &lt;a href="https://monsterbashseq.wordpress.com/2016/08/13/adventures-with-ont-minion-at-mbls-microbial-diversity-course/"&gt;bacteria&lt;/a&gt; then scaling up to see if it would work for &lt;a href="https://twitter.com/monsterbashseq/status/963592729241382912"&gt;eukaryotic organisms&lt;/a&gt;. It turns out that the MinION does not scale up very well for us, at least for these killifish. To achieve 30-50x coverage for a genome assembly of a 1-1.1 Gb killifish genome, we would need to use 30-50 MinION flowcells. At a &lt;a href="https://docs.google.com/spreadsheets/d/1yBncz75kgwExCXy7sC9LsMaDGs8OJJJGg9f4o3DcoQE/edit?usp=sharing"&gt;cost of $800-900/flowcell&lt;/a&gt;, that is not a reasonably affordable genome ($24,000-45,000). Whereas it took &lt;a href="https://www.biorxiv.org/content/early/2017/04/20/128835"&gt;39 flowcells to get ~30x (90Gb) coverage of the human genome&lt;/a&gt;, five PromethION flowcells sequenced &lt;a href="https://gigabaseorgigabyte.wordpress.com/2018/05/24/promethion-human-genome-na19240/"&gt;~80x coverage of the human genome&lt;/a&gt;. PromethION promises &lt;a href="https://nanoporetech.com/about-us/news/promethion-wild-high-yield-data-announcements-human-and-plant-dna"&gt;higher yield&lt;/a&gt; than MinION, allowing it to be more feasible for larger genomes &amp;gt;1 Gb. The cost of one &lt;a href="http://dnatech.genomecenter.ucdavis.edu/nanopore-sequencing-ont-promethion/"&gt;PromethION run for UC Davis folks&lt;/a&gt; is $2,880. As you see below, we have not achieved maximally high yields from the Promethtion, but we have at least achieved ~20-30x coverage of our killifish genomes.&lt;/p&gt;
&lt;p&gt;The avalance of data commences!&lt;/p&gt;
&lt;h1&gt;Four species of &lt;em&gt;Fundulus&lt;/em&gt; killifish&lt;/h1&gt;
&lt;p&gt;&lt;img src="img/four_Fundulus.png"&gt;&lt;/p&gt;
&lt;p&gt;These four species of killifish have never been sequenced before. We have a genome for the &lt;a href="https://www.sciencedirect.com/science/article/pii/S1744117X0700072X"&gt;classic lab and field model&lt;/a&gt; species, &lt;a href="http://uswest.ensembl.org/Fundulus_heteroclitus/Info/Index"&gt;&lt;em&gt;Fundulus heteroclitus&lt;/em&gt;&lt;/a&gt; for understanding how organisms and populations interact with the external environment. But we do not have any genomic information from other important related freshwater species of &lt;em&gt;Fundulus&lt;/em&gt;.&lt;/p&gt;
&lt;h4&gt;Why killifish?&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;Fundulus heteroclitus&lt;/em&gt; killifish has been well-studied because of its physiological resilience to environmental change, including temperature and salinity. It has also been found to have &lt;a href="http://science.sciencemag.org/content/354/6317/1305"&gt;rapidly evolved in polluted environments&lt;/a&gt;. While &lt;em&gt;F. heteroclitus&lt;/em&gt; and most marine &lt;em&gt;Fundulus&lt;/em&gt; species are capable of osmoregulating across a wide range of salinities, freshwater &lt;em&gt;Fundulus&lt;/em&gt; species have lost much of their osmoregulatory flexibility at higher salinities compared to their marine ancestors.&lt;/p&gt;
&lt;p&gt;&lt;img style="float: right;" src="img/Fundulus_phylogeny.png" width="400px"&gt;&lt;/p&gt;
&lt;p&gt;The physiological requirement for high (or low) concentrations of salt ions in the water has affected geographic distributions of aquatic animals throughout evolutionary history and will continue to impact species worldwide in view of future changes in climate. To study the history of adaptation to different salinities and understand the mechanisms of evolution at the molecular level, we have been studying this group of related killifish from the genus &lt;em&gt;Fundulus&lt;/em&gt;, which contains species that are natively adapted to different salinities. Some &lt;em&gt;Fundulus&lt;/em&gt; species can tolerate a range of salinities (euryhaline) by switching osmoregulatory mechanisms while others require a more narrow salinity range (stenohaline) in either fresh or marine waters. Unique to this family of killifish is evidence that some species from the genus &lt;em&gt;Fundulus&lt;/em&gt; have radiated into fresh water bodies on three separate, parallel occasions between 5-25 million years ago, and have lost their ability to tolerate higher salinities like their euryhaline relatives. We use &lt;em&gt;Fundulus&lt;/em&gt; as a comparative model system for studying the physiological and genetic mechanisms that diverge between euryhaline and stenohaline freshwater species. &lt;/p&gt;
&lt;p&gt;Four &lt;em&gt;Fundulus&lt;/em&gt; killifish representing clades 1 and 3 were selected for genome sequencing to study the physiological and genetic mechanisms that diverge between euryhaline and stenohaline freshwater species. Other species of freshwater and brackish water killifish from Clade 2 (&lt;em&gt;Lucania parva&lt;/em&gt; and &lt;em&gt;Lucania goodei&lt;/em&gt;) are being sequenced by &lt;a href="http://beckyfullerlab.weebly.com/"&gt;Dr. Becky Fuller's lab at U. Illinois Urbana-Champaign&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If you find these questions compelling and would consider collaborating, please contact us.&lt;/strong&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Whitehead et al. 2010. &lt;a href="https://www.ncbi.nlm.nih.gov/pubmed/20100216"&gt;Phylogeny of killifish osmotic tolerance.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Whitehead et al. 2011. &lt;a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3076822/"&gt;Genomic mechanisms of evolved physiological plasticity in killifish distributed along an environmental salinity gradient.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Brennan et al. 2015. &lt;a href="http://jeb.biologists.org/content/218/8/1212"&gt;Reciprocal osmotic challenges reveal mechanisms of divergence in phenotypic plasticity in the killifish Fundulus heteroclitus.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Brennan et al. 2018. &lt;a href="https://academic.oup.com/mbe/advance-article/doi/10.1093/molbev/msy154/5068378?guestAccessKey=89fdd3c9-8894-4a89-acac-548f2e3a06d2"&gt;Integrative Population and Physiological Genomics Reveals Mechanisms of Adaptation in Killifish.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;DNA extractions&lt;/h1&gt;
&lt;p&gt;Live samples were shipped to UC Davis by &lt;a href="https://scholar.google.com/citations?hl=en&amp;amp;user=QQIh3CsAAAAJ&amp;amp;view_op=list_works&amp;amp;sortby=pubdate"&gt;Dr. David Duvernell&lt;/a&gt; and &lt;a href="http://ichthyology.usm.edu/"&gt;Dr. Jake Schaefer&lt;/a&gt;. When possible (all but &lt;em&gt;Fundulus catenatus&lt;/em&gt;), samples were extracted from fresh tissue. Fish heads were used for high molecular weight (hmw) DNA extractions.&lt;/p&gt;
&lt;p&gt;&lt;img src="img/fishsamples.png" width="400px"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.protocols.io/view/ultra-long-read-sequencing-protocol-for-rad004-mrxc57n"&gt;Ultra-long read sequencing protocol by Josh Quick and Nick Loman works well, TLB + phenol:chloroform extraction&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.agilent.com/cs/library/usermanuals/public/200600.pdf"&gt;Agilent #200600 DNA extraction kit&lt;/a&gt; found by Tony works well also, requires cleanup&lt;/li&gt;
&lt;li&gt;We have all found that fresh tissue is better than frozen tissue&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/monsterbashseq/status/852655158160904192"&gt;Pulse field gels (Thanks, Tony!)&lt;/a&gt; are necessary to visualize hmw DNA&lt;/li&gt;
&lt;li&gt;With Dr. Ruta, we tried the &lt;a href="https://www.qiagen.com/us/resources/resourcedetail?id=a9e6a609-4600-4b03-afbd-974318590ce5&amp;amp;lang=en"&gt;Qiagen&lt;/a&gt; - p. 39 "DNA purification from tissue using the Gentra puregene Tissue Kit" and found it was similar to the Agilent kit. Our DNA was still difficult to get into solution, which then required phenol:chloroform cleanup.&lt;/li&gt;
&lt;li&gt;DNA has always been difficult to get into solution (see pic of 0.5 mL tube on the far right below)&lt;/li&gt;
&lt;li&gt;Dr. Ruta found that adding urea to lysis buffer helped the final DNA pellet to be less brittle and go into solution easier &lt;a href="https://www.ncbi.nlm.nih.gov/pubmed/14641478"&gt;Wasko et al. 2003&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In general, there is something weird with our samples. ONT has mentioned that this could a fish-specific sample issue, based on experiences with other customers. Has anyone else found this to be the case with fish hmw DNA being difficult to get into solution, then becoming brittle, breaking easily during cleanup?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="img/DNAextractions.png"&gt;&lt;/p&gt;
&lt;p&gt;These are Ruta's pulse field gels showing samples that were sequenced (in order from left to right: &lt;em&gt;F. catenatus&lt;/em&gt; (sheared vs. unsheared), &lt;em&gt;F. olivaceus&lt;/em&gt;, &lt;em&gt;F. nottii&lt;/em&gt;, &lt;em&gt;A. xenica&lt;/em&gt;). Fresh tissues were extracted from &lt;em&gt;A. xenica&lt;/em&gt;, &lt;em&gt;F. nottii&lt;/em&gt;. Frozen tissue from &lt;em&gt;F. catenatus&lt;/em&gt; and &lt;em&gt;F. olivaceus&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src="img/pfgels.png" width="700px"&gt;&lt;/p&gt;
&lt;h1&gt;Sequencing&lt;/h1&gt;
&lt;p&gt;Here are the ONT sequencing data we have so far:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Species&lt;/th&gt;
&lt;th&gt;bases called&lt;/th&gt;
&lt;th&gt;n reads&lt;/th&gt;
&lt;th&gt;avg length&lt;/th&gt;
&lt;th&gt;largest&lt;/th&gt;
&lt;th&gt;reads N50&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Adinia xenica&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;38,467,326,719&lt;/td&gt;
&lt;td&gt;15,704,522&lt;/td&gt;
&lt;td&gt;2,449&lt;/td&gt;
&lt;td&gt;953,774&lt;/td&gt;
&lt;td&gt;5,733, n = 1,373,426&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Fundulus nottii&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;33,440,866,723&lt;/td&gt;
&lt;td&gt;5,160,367&lt;/td&gt;
&lt;td&gt;6,480&lt;/td&gt;
&lt;td&gt;667,947&lt;/td&gt;
&lt;td&gt;12,995, n=700,534&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Fundulus catenatus&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;40,274,806,587&lt;/td&gt;
&lt;td&gt;23,701,206&lt;/td&gt;
&lt;td&gt;1,699&lt;/td&gt;
&lt;td&gt;590,485&lt;/td&gt;
&lt;td&gt;3,439, n = 2,687,295&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Fundulus olivaceus&lt;/em&gt; (MinION)&lt;/td&gt;
&lt;td&gt;4,962,626,713&lt;/td&gt;
&lt;td&gt;740,248&lt;/td&gt;
&lt;td&gt;6,704&lt;/td&gt;
&lt;td&gt;973,552&lt;/td&gt;
&lt;td&gt;12,726, n = 117,202&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Fundulus olivaceus&lt;/em&gt; (PromethION)&lt;/td&gt;
&lt;td&gt;50,093,027,850&lt;/td&gt;
&lt;td&gt;10,902,817&lt;/td&gt;
&lt;td&gt;4,595&lt;/td&gt;
&lt;td&gt;779,368&lt;/td&gt;
&lt;td&gt;11,670, n = 987,921&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Overall project status:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Species&lt;/th&gt;
&lt;th&gt;native physiology&lt;/th&gt;
&lt;th&gt;clade&lt;/th&gt;
&lt;th&gt;ONT data&lt;/th&gt;
&lt;th&gt;Illumina&lt;/th&gt;
&lt;th&gt;miniasm assembly N50&lt;/th&gt;
&lt;th&gt;miniasm assembly size&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Adinia xenica&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Marine&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;38 Gb&lt;/td&gt;
&lt;td&gt;TBD&lt;/td&gt;
&lt;td&gt;369,038; n = 794&lt;/td&gt;
&lt;td&gt;961,615,159&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Fundulus nottii&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Freshwater&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;33 Gb&lt;/td&gt;
&lt;td&gt;TBD&lt;/td&gt;
&lt;td&gt;2,025,917 Mb; n = 151&lt;/td&gt;
&lt;td&gt;1,141,443,860&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Fundulus catenatus&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Freshwater&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;40 Gb&lt;/td&gt;
&lt;td&gt;TBD&lt;/td&gt;
&lt;td&gt;119,326; n = 2,612&lt;/td&gt;
&lt;td&gt;975,193,007&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Fundulus olivaceus&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;Freshwater&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;50 Gb (PromethION)&lt;/td&gt;
&lt;td&gt;180 Gb&lt;/td&gt;
&lt;td&gt;2,154,700, n = 158&lt;/td&gt;
&lt;td&gt;1,284,878,256&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Assemblies of &lt;em&gt;Fundulus olivaceus&lt;/em&gt; data with ONT (MinION) and Illumina (NovaSeq) data:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Seq data input&lt;/th&gt;
&lt;th&gt;Tool&lt;/th&gt;
&lt;th&gt;bases&lt;/th&gt;
&lt;th&gt;n_contigs&lt;/th&gt;
&lt;th&gt;average&lt;/th&gt;
&lt;th&gt;largest&lt;/th&gt;
&lt;th&gt;N50&lt;/th&gt;
&lt;th&gt;BUSCO (eukaryota)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ONT (MinION)&lt;/td&gt;
&lt;td&gt;Canu&lt;/td&gt;
&lt;td&gt;9,804,264&lt;/td&gt;
&lt;td&gt;540&lt;/td&gt;
&lt;td&gt;18,156&lt;/td&gt;
&lt;td&gt;365,191&lt;/td&gt;
&lt;td&gt;40,681, n = 43&lt;/td&gt;
&lt;td&gt;0.7%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ONT (MinION)&lt;/td&gt;
&lt;td&gt;Miniasm&lt;/td&gt;
&lt;td&gt;4,917,546&lt;/td&gt;
&lt;td&gt;153&lt;/td&gt;
&lt;td&gt;32,140&lt;/td&gt;
&lt;td&gt;233,136&lt;/td&gt;
&lt;td&gt;50,056, n = 25&lt;/td&gt;
&lt;td&gt;0.0 %&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Illumina (NovaSeq)&lt;/td&gt;
&lt;td&gt;Megahit&lt;/td&gt;
&lt;td&gt;1,183,861,293&lt;/td&gt;
&lt;td&gt;1038799&lt;/td&gt;
&lt;td&gt;1,139&lt;/td&gt;
&lt;td&gt;88,218&lt;/td&gt;
&lt;td&gt;3,846, n = 77,800&lt;/td&gt;
&lt;td&gt;45.6 %&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Illumina (NovaSeq)&lt;/td&gt;
&lt;td&gt;ABySS&lt;/td&gt;
&lt;td&gt;1,381,148,284&lt;/td&gt;
&lt;td&gt;1024759&lt;/td&gt;
&lt;td&gt;1,347&lt;/td&gt;
&lt;td&gt;140629&lt;/td&gt;
&lt;td&gt;9833, n = 37,013&lt;/td&gt;
&lt;td&gt;77.9%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hybrid&lt;/td&gt;
&lt;td&gt;Masurca&lt;/td&gt;
&lt;td&gt;1,134,160,060&lt;/td&gt;
&lt;td&gt;90,237&lt;/td&gt;
&lt;td&gt;12,568&lt;/td&gt;
&lt;td&gt;386,222&lt;/td&gt;
&lt;td&gt;42,823, n = 7,616&lt;/td&gt;
&lt;td&gt;86.2%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hybrid&lt;/td&gt;
&lt;td&gt;SSPACE&lt;/td&gt;
&lt;td&gt;TBD&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;Preliminary data products&lt;/h1&gt;
&lt;p&gt;Rough assemblies and QC are available on &lt;a href="https://osf.io/zjv86/"&gt;osf&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install osfclient
export OSF_PASSWORD=password
export OSF_USERNAME=email.address
# list files in OSF
osf -p zjv86 ls
# copy files from OSF to local (or hpc - wherever you&amp;#39;re working)
osf -p zjv86 clone Folivaceus_hybrid_genome_assembly 
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;References&lt;/h1&gt;
&lt;p&gt;Jain M et al. 2017. &lt;a href="https://www.biorxiv.org/content/early/2017/03/24/103812"&gt;A Fast Approximate Algorithm for Mapping Long Reads to Large Reference Databases.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Loose et al. 2016. &lt;a href="https://www.biorxiv.org/content/early/2016/02/03/038760"&gt;Real time selective sequencing using nanopore technology.&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The anticipated increasing speed of nanopore sequencing ('fast mode') and
the scaling up of the MinION to 3,000 channels, and the PromethION with 144,000 channels, will challenge the implementation of 'Read Until' in real time and require algorithmic enhancements and computational power&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Jain C et al. 2017. &lt;a href="https://www.biorxiv.org/content/biorxiv/early/2017/04/20/128835.full.pdf"&gt;Nanopore sequencing and assembly of a human genome with ultra-long reads.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://f1000research.com/slides/7-367"&gt;Nice slides by Benjamin Schwessinger explaining wet lab comparisons for hmw DNA prep.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tan et al. 2018. &lt;a href="https://academic.oup.com/gigascience/article/7/3/gix137/4803946"&gt;Finding Nemo: hybrid assembly with Oxford Nanopore and Illumina reads greatly improves the clownfish (&lt;em&gt;Amphiprion ocellaris&lt;/em&gt;) genome assembly.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Miller et al. 2018. &lt;a href="http://www.g3journal.org/content/early/2018/08/07/g3.118.200160"&gt;GENOME REPORT: Highly Contiguous Genome Assemblies of 15 Drosophila Species Generated Using Nanopore Sequencing.&lt;/a&gt; &lt;strong&gt;Evidence that the consensus assembly can be dramatically improved by using the pilon/racon program with Illumina data.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cao et al. 2016. &lt;a href="https://www.biorxiv.org/content/early/2016/05/22/054783"&gt;Scaffolding and Completing Genome Assemblies in Real-time with Nanopore Sequencing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Tyler et al. 2018. &lt;a href="https://www.nature.com/articles/s41598-018-29334-5.pdf"&gt;Evaluation of Oxford Nanopore’s MinION Sequencing Device for Microbial Whole Genome Sequencing Applications&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;De Roeck et al. 2018. &lt;a href="https://www.biorxiv.org/content/early/2018/10/09/439026"&gt;Accurate characterization of expanded tandem repeat length and sequence through whole genome long-read sequencing on PromethION.&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;List of available tools for ONT data:&lt;/h1&gt;
&lt;p&gt;Suggestions for additions to this list are welcome! (Especially if you have experience with them working well!)&lt;/p&gt;
&lt;h3&gt;QC &amp;amp; Evaluation:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rrwick/Porechop"&gt;Porechop&lt;/a&gt;: removing adapters&lt;/li&gt;
&lt;li&gt;&lt;a href="https://anaconda.org/bioconda/nanoplot"&gt;NanoPlot&lt;/a&gt;: quality report&lt;/li&gt;
&lt;li&gt;&lt;a href="http://sourmash.readthedocs.io/en/latest/tutorials.html"&gt;sourmash&lt;/a&gt;: identify contamination&lt;/li&gt;
&lt;li&gt;&lt;a href="https://busco.ezlab.org/"&gt;BUSCO&lt;/a&gt;: content evaluation&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wdecoster/nanocomp"&gt;Nanocomp&lt;/a&gt;: compare multiple ONT runs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/marbl/MashMap"&gt;mashmap&lt;/a&gt;: for visualization (replaces nucmer)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Assemblers:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/marbl/canu/releases"&gt;canu, long reads&lt;/a&gt;: &lt;a href="http://canu.readthedocs.io/en/latest/quick-start.html"&gt;quick start&lt;/a&gt;, &lt;a href="https://github.com/marbl/canu/blob/master/documentation/source/tutorial.rst"&gt;tutorial&lt;/a&gt; and &lt;a href="http://genome.cshlp.org/content/27/5/722.full"&gt;paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/alekseyzimin/masurca"&gt;masurca, hybrid assembly&lt;/a&gt; (on &lt;a href="https://anaconda.org/bioconda/masurca"&gt;conda&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cab.spbu.ru/files/release3.11.1/manual.html"&gt;SPAdes hybrid assembly&lt;/a&gt; (for bacteria)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/VicugnaPacos/ALPACA/"&gt;Alpaca, hybrid assembly&lt;/a&gt; and &lt;a href="https://bmcgenomics.biomedcentral.com/articles/10.1186/s12864-017-3927-8"&gt;paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.baseclear.com/genomics/bioinformatics/basetools/SSPACE-longread"&gt;SSPACE-LongRead scaffolding&lt;/a&gt;
(no instructions, but a &lt;a href="https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-15-211"&gt;paper&lt;/a&gt;!), here are &lt;a href="https://github.com/ljcohen/hybrid_genome_assembly/blob/master/SSPACE/README.md"&gt;my instructions for SSPACE-LongRead&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/lh3/miniasm"&gt;miniasm&lt;/a&gt;, uses minimap overlapper, no consensus step&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Polishing and consensus improvement:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rrwick/Unicycler/blob/master/docs/unicycler-polish.md"&gt;Unicycler polish&lt;/a&gt; (&lt;a href="http://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005595"&gt;paper&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nanoporetech/ont-assembly-polish"&gt;Nanopore polish, input ONT assembly with Illumina data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jts/nanopolish"&gt;Nanopolish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jgurtowski/nanocorr"&gt;Nanocorr&lt;/a&gt;: error correction (See &lt;a href="http://schatzlab.cshl.edu/presentations/2015/2015.02.28.AGBT%20Nanocorr%20Assembly.pdf"&gt;presentation&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/isovic/racon"&gt;racon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/broadinstitute/pilon"&gt;pilon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mdcao/npScarf"&gt;npScarf&lt;/a&gt;, &lt;a href="https://www.nature.com/articles/ncomms14515"&gt;paper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here is the &lt;a href="https://github.com/danrdanny/Drosophila15GenomesProject/"&gt;pipeline&lt;/a&gt; from &lt;a href="http://www.g3journal.org/content/ggg/8/10/3131.full.pdf"&gt;Miller et al. 2018 15 Drosophila genomes paper&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;Example rough workflow steps:&lt;/h1&gt;
&lt;p&gt;Install miniconda Python package manager:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
bash Miniconda3-latest-Linux-x86_64.sh -b
echo export PATH=&amp;quot;$HOME/miniconda3/bin:$PATH&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
source ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create a conda environment for software installation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda create -n ONT python=3
source activate ONT
conda config --add channels defaults
conda config --add channels conda-forge
conda config --add channels bioconda
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install &lt;a href="https://github.com/lh3/minimap2"&gt;minimap2&lt;/a&gt; (minimap2-2.12), &lt;a href="https://github.com/lh3/miniasm"&gt;miniasm&lt;/a&gt; and other tools:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda install assembly-stats minimap2 miniasm bwa samtools busco pilon mashmap
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Assemble:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# Overlap
minimap2 -x ava-ont -t8 A_xenica_combined.fastq | gzip -1 &amp;gt; A_xenica_reads.paf.gz
# Layout
miniasm -f A_xenica_combined.fastq A_xenica_reads.paf.gz &amp;gt; A_xenica_reads.gfa
awk &amp;#39;/^S/{print &amp;quot;&amp;gt;&amp;quot;$2&amp;quot;\n&amp;quot;$3}&amp;#39; A_xenica_reads.gfa | fold &amp;gt; A_xenica.fa
assembly-stats A_xenica.fa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Use pilon to improve consensus:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;bwa index &amp;lt;genome.fasta&amp;gt;
bwa mem -t 4 genome.fasta R1.fq R2.fq | samtools view -Sb - | samtools sort - -o ecto_old_paired_qc.sorted.bam
samtools index ecto_old_paired_qc.sorted.bam
pilon --genome F_olivaceus.canu.ONT.unitigs.fasta --bam F_olivaceus_ONT_polished.sorted.bam --threads 8
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;BUSCO for evaluation:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;run_BUSCO.py -i F_nottii_miniasm_ONT.fa -l &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;BUSCO_LINEAGE&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;/eukaryota_odb9 -o F_nottii_miniasm --mode genome -c 8
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Visualize 1:1 comparison with closely-related reference genome, run &lt;a href="https://github.com/marbl/MashMap"&gt;mashmap&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mashmap \
-r /mnt/home/ljcohen/reference/GCF_000826765.1_Fundulus_heteroclitus-3.0.2_genomic.fna \
-q ../../masurca_Folivaceus/CA.mr.41.15.15.0.02/final.genome.scf.fasta
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Plot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;generateDotPlot png large mashmap.out
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit the &lt;code&gt;out.gp&lt;/code&gt; file, because of reasons.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vi out.gp
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Delete word 'tiny' in first line&lt;/li&gt;
&lt;li&gt;Comment out 3 lines with word 'mouse' in them.
Then run:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gnuplot out.gp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which will then produce the png file.&lt;/p&gt;
&lt;p&gt;Tony Gil demonstrating how to wash a hmw DNA pellet with 70% ethanol:&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="640" height="390"
                    src='https://www.youtube.com/embed/B6KXz_GCwg8'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;</content><category term="sequencing"></category><category term="killifish"></category><category term="Oxford Nanopore Technologies"></category></entry><entry><title>Blogging with Pelican</title><link href="https://johnsolk.github.io/blog/blogging-with-pelican.html" rel="alternate"></link><published>2018-09-06T00:00:00-07:00</published><updated>2018-09-06T00:00:00-07:00</updated><author><name>Lisa K. Johnson</name></author><id>tag:johnsolk.github.io,2018-09-06:/blog/blogging-with-pelican.html</id><summary type="html">&lt;p&gt;In Lab Learning Opportunity (ILLO) by Data Intensive Biology (DIB) fellow grad student, Luiz Irber.&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://github.com/luizirber"&gt;Luiz Irber&lt;/a&gt; was gratious in spending time to walk us through how to set up a blog with Pelican, host it on &lt;a href="https://pages.github.com/"&gt;github.io&lt;/a&gt;, and have &lt;a href="https://travis-ci.com/"&gt;travis-ci&lt;/a&gt; test and deploy.&lt;/p&gt;
&lt;p&gt;Video: &lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="640" height="390"
                    src='https://www.youtube.com/embed/QhC9yjUQL6o'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;Some Background&lt;/h2&gt;
&lt;p&gt;I've had &lt;a href="https://monsterbashseq.wordpress.com/"&gt;a blog&lt;/a&gt; that I started when I was first learning and developing computational skills. Wordpress blogs are great for quickly publishing a post, with capacity for formatting pictures and links to Tweets. At the encouragement of Titus a few years ago during our &lt;a href="http://ivory.idyll.org/dibsi/"&gt;summer DIBSI workshop&lt;/a&gt;, I started taking notes on the online collaborative document site, &lt;a href="https://hackmd.io/"&gt;hackmd.io&lt;/a&gt;. This cool site lets you write in markdown and immediately see it rendered. The link can be shared with collaborators, and the document can be exported to &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, or &lt;code&gt;.md&lt;/code&gt; formats. I started writing all of my notes with markdown. But then wanting to write a blog post with my notes? Manually converting &lt;code&gt;.md&lt;/code&gt; documents and code chunks into the online wordpress user interface is tedious. &lt;/p&gt;
&lt;p&gt;This week, I casually mentioned that I wanted to migrate from wordpress to a more markdown-friendly format for my blog. Luiz immediately chimed in that &lt;a href="http://docs.getpelican.com/en/3.6.3/quickstart.html"&gt;Pelican&lt;/a&gt; is great! And uses it for his &lt;a href="https://blog.luizirber.org/"&gt;blog&lt;/a&gt;. It turns out that &lt;a href="http://ivory.idyll.org/blog/"&gt;Titus' blog&lt;/a&gt; and other lab mate, &lt;a href="https://charlesreid1.com/"&gt;Charles Reid&lt;/a&gt; both have their blogs in Pelican as well. One of the many advantages of Pelican is that it is written in Python, unlike Jekyll which is written in Ruby. (I'm more comfortable coding and debugging in Python than in Ruby.) And Charles provided lots of documentation on how to use Pelican! It's great to be in a lab group where people have such useful and encouraging advice.&lt;/p&gt;
&lt;h2&gt;Tutorial&lt;/h2&gt;
&lt;p&gt;We started with the tutorial from &lt;a href="https://git.charlesreid1.com/charlesreid1/how-do-i-pelican"&gt;Charles Reid&lt;/a&gt;, which has &lt;a href="https://github.com/charlesreid1/magic-flying-pelican/pelican/"&gt;practice content&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Make a working directory for your blog:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir blog
cd blog/
git init
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Get the configuration file, &lt;code&gt;pelicanconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://raw.githubusercontent.com/charlesreid1/magic-flying-pelican/master/pelican/pelicanconf.py
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir content
cd content/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Navigate to some of the example posts and download:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://raw.githubusercontent.com/charlesreid1/magic-flying-pelican/master/pelican/content/posts/hello-world-1.md
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Taking a look, we see that each &lt;code&gt;.md&lt;/code&gt; post file must have this header:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;world&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2018&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Python&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;charlesreid1&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;First&lt;/span&gt; &lt;span class="n"&gt;hello&lt;/span&gt; &lt;span class="n"&gt;world&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we have to install Pelican and markdown. Luiz uses &lt;a href="https://pipenv.readthedocs.io/en/latest/"&gt;&lt;code&gt;pipenv&lt;/code&gt;&lt;/a&gt;. This will activate a new virtualenv with pelican and markdown available without messing with dependencies in your computer's $PATH.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install --user pipenv
export PATH=~/.local/bin:$PATH
pipenv install pelican markdown
pipenv shell
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we need some Pelican &lt;a href="http://www.pelicanthemes.com/"&gt;themes&lt;/a&gt;. (All themes are downloaded, so put them in a different location.)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd ../../
git clone --recursive https://github.com/getpelican/pelican-themes
cd pelican-themes
pelican-themes -i bootstrap
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change the path location of the theme in the &lt;code&gt;pelicanconf.py&lt;/code&gt; file: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd blog
cp -a ../pelican-themes/bootstrap theme
vi pelicanconf.py 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Specify the path where the theme will be saved to (this was copied with the command above).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;THEME = &amp;#39;./theme&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Change other information, such as your name and site name and site url in the &lt;code&gt;pelicanconf.py&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://raw.githubusercontent.com/charlesreid1/magic-flying-pelican/master/pelican/content/posts/hello-world-1.md
mkdir posts
mv hello-world-1.md posts/
mv hello-world-1.md 2018-09-05.md
vi 2018-09-05.md 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pelican
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will produce output like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Removed&lt;/span&gt; &lt;span class="n"&gt;extraneous&lt;/span&gt; &lt;span class="n"&gt;trailing&lt;/span&gt; &lt;span class="n"&gt;slash&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;SITEURL&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="n"&gt;Done&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Processed&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;articles&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;drafts&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;pages&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="n"&gt;hidden&lt;/span&gt; &lt;span class="n"&gt;pages&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;0.55&lt;/span&gt; &lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check how it looks:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python -m http.server
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(Go to &lt;a href="http://localhost:8000/output/"&gt;http://localhost:8000/output/&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;At anytime, you can remove the &lt;code&gt;output/&lt;/code&gt; directory, because this is what is generated when running &lt;code&gt;pelican&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm -rf output/
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Hosting on github.io&lt;/h3&gt;
&lt;p&gt;Add/commit changes, then set up a repository on GitHub (don't initialize with &lt;code&gt;README.md&lt;/code&gt;) to add as remote.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add --all
git status
git commit -m &amp;quot;first commit&amp;quot;
git remote add origin https://github.com/ljcohen/blog.git
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install ghp-import:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pipenv&lt;/span&gt; &lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;
&lt;span class="nn"&gt;pipenv&lt;/span&gt; &lt;span class="nn"&gt;install&lt;/span&gt; &lt;span class="nn"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;
&lt;span class="nn"&gt;git&lt;/span&gt; &lt;span class="nn"&gt;status&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;diff&lt;/span&gt;
&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;
&lt;span class="nn"&gt;which&lt;/span&gt; &lt;span class="nn"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;
&lt;span class="nn"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;
&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pelican&lt;/span&gt;
&lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;output&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;branch&lt;/span&gt;
&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Using travis-ci&lt;/h3&gt;
&lt;p&gt;Make a travis &lt;code&gt;.yml&lt;/code&gt; file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vi .travis.yml
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With this content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;dist&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;xenial&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;3.6&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;only&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;span class="n"&gt;install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pipenv&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pipenv&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;pipenv&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="n"&gt;deploy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;provider&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pages&lt;/span&gt;
  &lt;span class="n"&gt;skip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cleanup&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="n"&gt;local&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
  &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;$GITHUB_TOKEN&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt; &lt;span class="n"&gt;Set&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;repository&lt;/span&gt;
  &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;branch&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Add/commit:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git add .travis.yml 
git commit -m &amp;quot;added travis-ci&amp;quot;
git push -u origin master
&lt;/pre&gt;&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Go to &lt;a href="https://travis-ci.com/"&gt;travis-ci&lt;/a&gt; and login to GitHub. &lt;/li&gt;
&lt;li&gt;Set up your &lt;a href="https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/"&gt;personal access tokens&lt;/a&gt; on your GitHub account. &lt;/li&gt;
&lt;li&gt;Go to 'Settings', 'Integration &amp;amp; services' in the GitHub repository to configure Travis CI with a key to give push access.&lt;/li&gt;
&lt;li&gt;Add the repository to Travis CI: https://travis-ci.com/ljcohen/blog&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You're done!&lt;/p&gt;
&lt;p&gt;Now add more posts!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vi 2018-09-05_b.md 
vi 2018-09-05_b.md 
git add 2018-09-05_b.md 
git commit -m &amp;quot;new post&amp;quot;
git push
vi pelicanconf.py 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Travis CI will automatically run pelican and push to github.&lt;/p&gt;
&lt;p&gt;With Pelican, you can also &lt;a href="http://docs.getpelican.com/en/stable/importer.html#"&gt;import an existing site, like from WordPress&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thank you, Luiz!&lt;/p&gt;
&lt;p&gt;&lt;img src="img/dib.jpg"&gt;&lt;/p&gt;</content><category term="pelican"></category></entry></feed>