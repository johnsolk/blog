{"pages":[{"title":"Blogging with Pelican","text":"Luiz was gratious in spending some time walking us through how to set up a blog with Pelican, host it on github.io , and have travis-ci test and deploy. Video: We started with the tutorial from Charles Reid , which has practice content . Some Background Over the past few years as a PhD student in Dr. Titus Brown's DIB Lab at UC Davis, I've been fortunate to be able to expand my data science toolkit. This has included a range of skills from automated genomic-scale data analysis & visualization to time-saving tricks like note-taking in markdown . Markdown is a simple text-formatting language , sorta like html. At the encouragement of Titus a few years ago during our summer DIBSI workshop , I started taking notes on the online collaborative document site, hackmd.io . This cool site lets you write in markdown, and immediately see it rendered on the right side. The link can be shared with collaborators, and the document can be exported to .pdf , .html , or .md formats. I've had a blog that I started when I was learning and developing computational skills for genomics research as a lab technician at HBOI in FL . Wordpress blogs are great for quickly publishing a post, with capacity for formatting pictures (screenshots) and links to Tweets. But manually converting .md documents and code chunks in the online wordpress user interface is tedious. This week, when Luiz Irber re-instated our weekly chain of lab group emails outlining our past week's accomplishments and goals for the coming week, I casually mentioned in my summary that I wanted to migrate from wordpress to a more markdown-friendly format for my blog. I've tried Jekyll in the past, and have been slowly migrating my website to something markdown-friendly, but haven't quite hit my stride yet with migrating my blog over. Luiz immediately chimed in that Pelican is great! And uses it for his blog . It turns out that Titus' blog and other lab mate, Charles Reid both have their blogs in Pelican as well. One of the many advantages of Pelican is that it is written in Python, unlike Jekyll which is written in Ruby. (I'm more comfortable coding and debugging in Python than in Ruby.) And Charles provided lots of documentation on how to use Pelican! It's great to be in a lab group where people have such useful and encouraging advice. Tutorial Make a working directory for your blog: mkdir blog cd blog/ git init Get the configuration file, pelicanconf.py : wget https://raw.githubusercontent.com/charlesreid1/magic-flying-pelican/master/pelican/pelicanconf.py mkdir content cd content/ Navigate to some of the example posts and download: wget https://raw.githubusercontent.com/charlesreid1/magic-flying-pelican/master/pelican/content/posts/hello-world-1.md Taking a look, we see that each .md post file must have this header: Title : Hello world number one Date : 2018 - 05 - 13 22 : 00 Category : Python Tags : pelican Author : charlesreid1 Summary : First hello world post Now we have to install Pelican and markdown. Luiz uses pipenv . This will activate a new virtualenv with pelican and markdown available without messing with dependencies in your computer's $PATH. pip install --user pipenv export PATH=~/.local/bin:$PATH pipenv install pelican markdown pipenv shell Now we need some Pelican themes . (All themes are downloaded, so put them in a different location.) cd ../../ git clone --recursive https://github.com/getpelican/pelican-themes cd pelican-themes pelican-themes -i bootstrap Change the path location of the theme in the pelicanconf.py file: cd blog cp -a ../pelican-themes/bootstrap theme vi pelicanconf.py Specify the path where the theme will be saved to (this was copied with the command above). THEME = './theme' Change other information, such as your name and site name and site url in the pelicanconf.py file. wget https://raw.githubusercontent.com/charlesreid1/magic-flying-pelican/master/pelican/content/posts/hello-world-1.md mkdir posts mv hello-world-1.md posts/ mv hello-world-1.md 2018-09-05.md vi 2018-09-05.md Then run: pelican This will produce output like this: WARNING : Removed extraneous trailing slash from SITEURL . Done : Processed 2 articles , 0 drafts , 0 pages and 0 hidden pages in 0.55 seconds . Check how it looks: python -m http.server (Go to http://localhost:8000/output/) At anytime, you can remove output/ , because this is what is generated when running pelican . rm -rf output/ Hosting on github.io Add/commit changes, then set up a repository on GitHub (don't initialize with README.md ) to add as remote. git add --all git status git commit -m \"first commit\" git remote add origin https://github.com/ljcohen/blog.git git push -u origin master Install ghp-import: pipenv ghp - import pipenv install ghp - import git status git diff ghp - import which ghp - import ghp - import -- help ghp - import pelican pelican ghp - import output git branch ghp - import - p output Using travis-ci Make a travis .yml file: vi .travis.yml With this content: language : python dist : xenial python : '3.6' branches : only : - master install : - pip install pipenv - pipenv install script : - pipenv run pelican deploy : provider : pages skip - cleanup : true local - dir : output github - token : $GITHUB_TOKEN # Set in the settings page of your repository on : branch : master Add/commit: git add .travis.yml git commit -m \"added travis-ci\" git push -u origin master Go to travis-ci and login to GitHub. Set up your personal access tokens on your GitHub account. Go to 'Settings', 'Integration & services' in the GitHub repository to configure Travis CI with a key to give push access. Add the repository to Travis CI: https://travis-ci.com/ljcohen/blog You're done! Now add more posts! vi 2018-09-05_b.md vi 2018-09-05_b.md git add 2018-09-05_b.md git commit -m \"new post\" git push vi pelicanconf.py Travis CI will automatically run pelican and push to github. With Pelican, you can also import an existing site, like from WordPress . Thank you, Luiz!","tags":"Python","url":"https://ljcohen.github.io/blog/blogging-with-pelican.html"},{"title":"Adventures with ONT MinION at MBL's Microbial Diversity Course","text":"My time here at the Microbial Diversity Course at MBL has come to an end after visiting for the past 2 weeks with our lab's MinION to sequence genomes from bacterial isolates that students collected from the Trunk River in Woods Hole, MA. (Photo by Jared Leadbetter of 'Ectocooler' Tenacibaculum sp. isolated by Rebecca Mickol). {.alignnone .size-full .wp-image-3893 width=\"960\" height=\"960\"} In Titus Brown's DIB lab , we've been pretty excited about the Oxford Nanopore Technologies MinION sequencer for several reasons: 1) It's small and portable. This make the MinION a great teaching tool! You can take it to workshops. Students can collect samples, extract DNA, library prep, sequence, and learn to use assembly and annotation bioinformatics software tools within the period of 1 week. 2.) We're interested in developing streaming software that's compatible with the sequencing -> find what you want -> stop sequencing workflow. 3.) Long reads can be used in a similar way as PacBio data to resolve genome and transcriptome (!) assemblies from existing Illumina data. Working with any new technology, especially from a new company, requires troubleshooting. While Twitter posts are cool, they tend to make it seem very easy. There is a MAP community for MinION users, but a login is required and public searching is not possible. In comparison to Illumina sequencing, there is not that much experience out there yet. Acknowledgements These are usually saved for the end, but since this is a long blog post, thought I would front-load on the gratitude. I have really benefitted from blog posts from Keith Robison and lonelyjoeparker . Nick Loman and Josh Quick's experiences have also been beneficial. There is no match, though, for having people in person to talk to about technical challenges. Megan Dennis and Maika Malig at UC Davis have provided amazing supportive guidance for us in the past few months with lab space and sharing their own experiences with the MinION. I'm very grateful to be at UC Davis and working with Megan. This trip was made possible by support from my PI, Titus Brown, who provided funding for my trip and all the flowcells and reagents for the MinION sequencing. It was necessary to have this 2 week block of time to focus on nothing else but getting the MinION to work, ask questions, and figure out what works (and what doesn't). Special thanks to Rebecca Mickol and Kirsten Grond in the Microbial Diversity course for isolating and culturing the super cool bacterial samples. Scott Dawson at UC Davis (faculty at the Microbial Diversity course) was instrumental in helping with DNA extractions. Jessica Mizzi assisted with library prep protocol development and troubleshooting. Harriet Alexander assisted with the assembly, library prep and showing me around Woods Hole, which is a lovely place to visit. Thank you also to the MBL Microbial Diversity Course, Hilary Morrison and the Bay Paul Center for hosting lab space for this work to take place. https://www.flickr.com/photos/lpcohen/28192995104/ Files: https://github.com/ljcohen/dib_ONP_MinION Presentation slides: https://docs.google.com/presentation/d/1Zqd1ayumdZqYc5e8bfeul8-57trKGwGdOFUdPc2-mIU/edit?usp=sharing Immediately following the Woods Hole visit at MBL, I went to the MSU Kellogg Biological Station as a TA for NGS 2016 course and wrote a tutorial for analyzing ONP data: http://angus.readthedocs.io/en/2016/analyzing_nanopore_data.html https://twitter.com/monsterbashseq/status/758712607763292165 Purchasing and Shipping Advice: allow 2-3 months for ordering. We ordered one month in advance. While ONP customer service probably worked overtime to send our flowcells and Mk1B after several emails, chats, and calling in special favors, in the future it is unclear whether we can count on a scheduled delivery with students. Communication required \\~dozen emails and we could never get confirmation that flowcells would arrive in time for the course. It turns out that our order had been shipped and arrived on time, however we did not know about it because a tracking number was not sent to us. It took about a day of emailing and waiting to track the boxes down. Thankfully, the boxes were stored properly in the MBL shipping warehouse. Communicate with ONP constantly. Stay on top of shipments, ask for tracking numbers and confirmation of shipment. Find out where the shipment is being delivered, as the address you've entered may not be the one on the shipping box and your order will be delivered to the wrong place. Flowcells QC the flowcells immediately. Bubbles are bad: https://www.flickr.com/photos/lpcohen/27996712883/in/dateposted-friend/ We ordered 7 flowcells (5 + 2 that came with the starter pack).The flow cells seemed to have inconsistent pore numbers and some arrived with bubbles. One flow cell had zero pores. They sent us a replacement for this flowcell within days, which was very helpful. However, for the flowcells that had bubbles, I was given instructions by ONP technical staff to draw back a small 15 ul vol of fluid to try to remove the bubble, then QC again. This did not work. The performance of these flowcells did not meet our expectations. In communicating with the company, we were told that there was no warranty on the flowcells. DNA Extractions The ONP protocol says that at least 500-1000 ng clean DNA is required for successful library prep. Try to aim for more than this. Try to get as much DNA, as high molecular weight as possible. Be careful with your DNA. Do not mix liquids by pipetting. For the bacterial isolates from liquid culture, Scott Dawson recommended using Qiagen size exclusion columns to purify, and this worked really well for us. We started with \\~2000 ug and used the FFPE repair step. The ONP protocol includes shearing with the Covaris gtube to 8kb. When I eliminated this step to preserve longer strands, there was little to no yield and samples with adequate yield had poor sequencing results. In communicating with ONP about this, we suspected that the strands were shearing on their own somewhere during the multiple reactions, then either getting washed away during the bead cleanup steps, or the tether and hairpin adapters were sheared off so the strands were not being recognized by the pores. We sequenced all three sets of DNA below (ladder 1-10kb). The Maxwell prep (gel below on the left) had a decent library quantity but the sequencing read lengths were not as long as we would have liked, which makes sense given the small smeary bands seen. ( poretools stats report ) {.alignnone .size-full .wp-image-3418 width=\"438\" height=\"297\"} Library prep When we first started troubleshooting the MinION, the protocols available through the MAP were difficult to follow in the lab. We needed a sheet to just print out and follow from the bench, so we created this: https://docs.google.com/document/d/1EvxAyJFRu96_caWBEpCcQc7rfRV_Zm1LudScZA8lWCU/edit?usp=sharing A few months ago, ONP came out with a pdf checklist for library prep, which is great: https://github.com/ljcohen/dib_ONP_MinION/blob/master/protocols_manuals/ONP_MinION_lib_prep_protocol_SQK-NSK007.pdf The library prep is pretty straight forward. One important thing I learned about the NEB Blunt/TA Master Mix : https://twitter.com/monsterbashseq/status/760603605099540481 Library prep and loading samples onto the flowcell can be tricky and nerve wracking for those who are not comfortable with lab work. I have >4 yrs of molecular lab experience knowing how to treat reagents, quick spins, pipetting small volumes, how to be careful not to waste reagents. One important point to convey to those who do not do molecular lab work often, is the viscous, sticky enzyme mixes that come in glycerol. You think you're sucking up a certain volume, but an equal amount is often stuck to the outside of your pipette tip. You have to wipe it on the side of the tube to get it off so you don't add this to your rxn volume, changing the optimal concentration and (probably the most important) also wasting reagent. Other misc. advice: The calculation: M1V1 = M2V2 is your friend. Don't mix by pipetting. Instead, tap or flick the tube with care. Quick spin your tubes often to ensure liquid is collected down at the bottom. Bead cleanups require patience and care while pipetting. Be really organized with your tubes (since there are a handful of reagent tubes that all look the same). Use a checklist and cross off each time you have added a reagent. These are the things I take for granted when I'm doing lab work on a regular basis. It takes a while to remember when I'm in the lab again after taking a hiatus to work on computationally-focused projects. https://www.flickr.com/photos/lpcohen/28040963554/in/dateposted-friend/ Computer Hardware In October 2015 last year when we were ordering everything to get set up, the computer hardware requirements for the MinION were: 8GB RAM and 128 SSD harddrive with i7 CPU. This is what we ended up ordering (which took several weeks to special order from the UC Davis computer tech center): DH Part#: F1M35UT Manufacturer: HP Mfr #: F1M35UT#ABA HP ZBook 15 G2 15.6\" LED Mobile Workstation ­ Intel Core i7 i7­4810MQ Quad­core (4 Core) 2.80 GHz 8 GB DDR3L SDRAM RAM ­ 256 GB SSD ­ DVD­Writer ­ NVIDIA Quadro K1100M 2 GB ­ Windows 7 Professional 64­bit (English) upgradable to Windows 8.1 Pro ­ 1920 x 1080 16:9 Display ­ Bluetooth ­ English Keyboard ­ Wireless LAN ­ Webcam ­ 4 x Total USB Ports ­ 3 x USB 3.0 Ports ­ Network (RJ­45) ­ Headphone/Microphone Combo Port One run requires around 30-50 GB, depending on the quality of the run. The .fast5 files are large, even though the resulting .fastq are small (<1 GB). The hard-drive on our MinION laptop is 256 GB, which can fill up fast. We bought a 2 TB external hard-drive, which we can configure Metrichor to download the reads to after basecalling, saving space on the laptop hard-drive. **Software and Data** Windows sucks There's a new GUI (graphical user interface) for MinKnow in the past months. It's annoying to get used to this, but in general not too bad. The poretools software to convert .fast5 to .fastq is buggy on Windows and does not play well with MinKnow. There's probably a way to get them both to work, but I've already spent \\~2-4 hrs of troubleshooting this issue, so am done with this for now. Instead, we've been uploading .fast5 to a Linux server, then running poretools on there. MinKnow python scripts crash sometimes during the run! You can open the MinKnow software again, start the script again, and it should start the run from where it left off. Use the 48 hr MinKnow script for sequencing. Our flow of data goes from raw signal from the MinION ( laptop ) -> upload to Metrichor server for basecalling -> download to external hard-drive (\"pass\" or \"fail\" depending on the Metrichor workflow chosen, e.g. 1D or 2D or barcoding) -> plug external hard-drive to Linux or Linux laptop (for some reason this is easier on Linux laptop rather than Windows...) for transfer to Linux server -> on the Linux server, run poretools software to convert to fastq/fasta -> analysis This all seems kind of ridiculous. If there is a better way, please let us know! {.alignnone .size-full .wp-image-3631 width=\"634\" height=\"937\"} Workshops In a future workshop setting, where students are doing this for the first time but we have more experience now, a potential schedule could go something like this: [Day 1:]{style=\"text-decoration:underline;\"} Collect sample, culture [Day 2:]{style=\"text-decoration:underline;\"} Extract DNA, run on gel, quantify [Day 3:]{style=\"text-decoration:underline;\"} Library prep, sequence (this will be a long day) [Day 4:]{style=\"text-decoration:underline;\"} Get sequences, upload, assess reads, start assembly [Day 5:]{style=\"text-decoration:underline;\"} Evaluate assembly, Annotate This is similar to the schedule arranged for Pore Camp, run by Nick Loman at the University of Birmingham in the UK. They have some great materials and experiences to share: http://porecamp.github.io/ Cost Still unknown what the cost is per sample. Cost of troubleshooting? I've put together a quick ONP MinION purchasing sheet: https://docs.google.com/spreadsheets/d/1yBncz75kgwExCXy7sC9LsMaDGs8OJJJGg9f4o3DcoQE/edit?usp=sharing Generally, these are the items to purchase: Mk1B starter pack came with 2 flowcells computer ONP reagents third-party reagents (NEB) Getting Help MAP community has some answers There is no phone number to call ONP. In contrast, Illumina has a fantastic customer service phone line, with well-trained technicians on the other end to answer emergency phone calls. Reagents and flowcells are expensive. When you're in the lab and there is a problem, like a bubble on the flowcell or a low pore number after QC, it is often necessary to call and talk to a person on the phone to ask question so you don't waste time or money. I've had many good email conversations with ONP tech support, but there is no substitute to calling someone on the phone and discussing a problem. Often, there are things to work on after the email and it is difficult to follow up by going back and forth with email. LiveChatting feature on the ONP website is great! (During UK business hours, there is a feature at the bottom of the store website that says \"Do you have a question?\". During off hours it says \"Leave a message\". I realized through this process that I had lots questions and few answers. The MAP has lots of forum questions but few manuals. Phrase searching sucks. If you search for a phrase in quotes, it will still search for individual words. For example: {.alignnone .wp-image-3325 width=\"474\" height=\"279\"} Remaining Questions: 1. Why does the number of flow cell pores fluctuate? What is the optimal pore number for a flow cell? 2. What is the effect of 1D reads on the assembly? Can we use the \"failed\" reads for anything? 3. How long will a run take? 4. How much hard-disk space is required for one run? 5. When are the reads \"passing\" and when are they \"failing\"? Is there value to the failing reads? 6. How can we get the most out of the flow cells? There seem to be a lot of unknowns related to the efficiency of the flowcells. We tried re-using a washed flow cell. There were >400 pores in the flow cell during the initial QC. After we loaded the library and started the run, the pore numbers were in the 80s-100s. 2 hrs later, this number dropped down to \\~30s. I added more library, and the pore numbers never increased again. Is this a result of the pore quality degrading? The next morning, loaded more library again. Not much change. Decided to switch flowcells and try a new one. 7. Are there batch effects of library prep and/or flowcells? Should we be wary of combining reads from multiple flowcells? Future In the future, the aim is to move away worrying about the technology details and focus on the data analysis and what the data mean. The goal should be to focus on the biology and why we're interested in sequencing anything and everything. What can we do with all of this information, now that we can sequence a genome of a new bacterial species in a week? Feel free to comment and contact! https://www.flickr.com/photos/lpcohen/28193032994/","tags":"biotech, Sequencing","url":"https://ljcohen.github.io/blog/adventures-with-ont-minion-at-mbls-microbial-diversity-course.html"}]}