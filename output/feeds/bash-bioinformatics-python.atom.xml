<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>monsteRbashSeq - bash, Bioinformatics, Python</title><link href="https://ljcohen.github.io/blog/" rel="alternate"></link><link href="https://ljcohen.github.io/blog/feeds/bash-bioinformatics-python.atom.xml" rel="self"></link><id>https://ljcohen.github.io/blog/</id><updated>2015-04-14T12:08:00-07:00</updated><entry><title>Error loading bedtools/2.22.0</title><link href="https://ljcohen.github.io/blog/error-loading-bedtools2-22-0.html" rel="alternate"></link><published>2015-04-14T12:08:00-07:00</published><updated>2015-04-14T12:08:00-07:00</updated><author><name>monsterbashseq</name></author><id>tag:ljcohen.github.io,2015-04-14:/blog/error-loading-bedtools2-22-0.html</id><summary type="html">&lt;p&gt;By default, gcc/4.4 is loaded in my cluster environment. This happened
when running bedtools:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gcc/4.7.0(5):ERROR:150: Module 'gcc/4.7.0' conflicts with the currently loaded module(s) 'gcc/4.4' gcc/4.7.0(5):ERROR:102: Tcl command execution failed: conflict â€¦&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;By default, gcc/4.4 is loaded in my cluster environment. This happened
when running bedtools:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gcc/4.7.0(5):ERROR:150: Module 'gcc/4.7.0' conflicts with the currently loaded module(s) 'gcc/4.4' gcc/4.7.0(5):ERROR:102: Tcl command execution failed: conflict gcc/4.4&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;bedtools/2.22.0(6):ERROR:151: Module 'bedtools/2.22.0' depends on one of
the module(s) 'gcc/4.7.0'&lt;br&gt;
bedtools/2.22.0(6):ERROR:102: Tcl command execution failed: prereq
gcc/4.7.0&lt;br&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To fix, first module unload gcc/4.4 then module load gcc/4.7.0.&lt;/p&gt;
&lt;p&gt;Edited my cluster.py custom module 'qsub_sge_file' function, which I
use for all of my commandline bioinformatics pipelines to create a
standard bash shell script and qsub submit as job to Sun Grid Engine, to
include a line checking if 'bedtools' is being loaded:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;module_load=['gcc/4.7.0','samtools','bedtools'] if any('bedtools' in s for s in module_load):      sge_file.write('module unload gcc/4.4\n')&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then, module load gcc/4.7.0.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;module_list=[] for module in module_name_list:     module_load="module load "+module     module_list.append(module_load)&lt;/code&gt;&lt;/p&gt;</content></entry></feed>