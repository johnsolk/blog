<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>monsteRbashSeq - Genomics Workshop</title><link href="https://ljcohen.github.io/blog/" rel="alternate"></link><link href="https://ljcohen.github.io/blog/feeds/genomics-workshop.atom.xml" rel="self"></link><id>https://ljcohen.github.io/blog/</id><updated>2015-08-28T11:54:00-07:00</updated><entry><title>Week 3 - NGS2015</title><link href="https://ljcohen.github.io/blog/week-3-ngs2015.html" rel="alternate"></link><published>2015-08-28T11:54:00-07:00</published><updated>2015-08-28T11:54:00-07:00</updated><author><name>monsterbashseq</name></author><id>tag:ljcohen.github.io,2015-08-28:/blog/week-3-ngs2015.html</id><summary type="html">&lt;p&gt;&lt;a href="http://angus.readthedocs.org/en/2015/week3.html"&gt;Week 3&lt;/a&gt; of NGS 2015
comes to a close. Discussion on what attendees and instructors have
gained from this week: most important things learned, theory/big
picture. Teaching and pedagogy especially. We went through 10 different
workflows in 1 week! Analyzed complex data sets. This is a very new
field …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://angus.readthedocs.org/en/2015/week3.html"&gt;Week 3&lt;/a&gt; of NGS 2015
comes to a close. Discussion on what attendees and instructors have
gained from this week: most important things learned, theory/big
picture. Teaching and pedagogy especially. We went through 10 different
workflows in 1 week! Analyzed complex data sets. This is a very new
field. These methods are in development. Instructors are at the top of
their fields, sharing methods for data analysis. Always something new to
learn. Impossible to be expert in everything. But, surrounding ourselves
with a community of people who are experts, learning from everyone.
Reproducibility, automating workflows that lead to figure generation are
important.&lt;/p&gt;
&lt;p&gt;Cool teaching tools learned:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://kahoot.it/#/"&gt;https://kahoot.it/#/&lt;/a&gt;&lt;br&gt;
Google pole, live coding and Google docs xls graph updated with input
from students &lt;a href="https://monsterbashseq.wordpress.com/2015/08/25/genome-assembly-week-3-ngs-2015/"&gt;Lex Nederbragt's assembly
lesson&lt;/a&gt;.&lt;br&gt;
Data wrangling from &lt;a href="https://monsterbashseq.wordpress.com/2015/08/26/gwas-for-ngs-data-ngs2015/"&gt;Tiffany Timbers' lesson on
GWAS&lt;/a&gt;&lt;br&gt;
https://www.flickr.com/photos/lpcohen/20330634694/in/dateposted-public/&lt;/p&gt;
&lt;p&gt;Thank you! (&lt;a href="http://www.businessinsider.com/power-pose-2013-5"&gt;power
pose&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/group2.jpg"&gt;&lt;img alt="group2" src="https://monsterbashseq.files.wordpress.com/2015/08/group2.jpg?w=300"&gt;{.alignnone
.size-medium .wp-image-1148 width="300"
height="225"}&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>GitHub, Pull Requests, and ReadTheDocs - NGS2015</title><link href="https://ljcohen.github.io/blog/github-pull-requests-and-readthedocs-ngs2015.html" rel="alternate"></link><published>2015-08-28T10:57:00-07:00</published><updated>2015-08-28T10:57:00-07:00</updated><author><name>monsterbashseq</name></author><id>tag:ljcohen.github.io,2015-08-28:/blog/github-pull-requests-and-readthedocs-ngs2015.html</id><summary type="html">&lt;p&gt;"We're good enough and deserve github."&lt;/p&gt;
&lt;p&gt;https://www.flickr.com/photos/lpcohen/20330046134/&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ivory.idyll.org/lab/"&gt;Dr. C. Titus Brown&lt;/a&gt; shares methods for
using &lt;a href="https://readthedocs.org/"&gt;readthedocs&lt;/a&gt;, which he uses for classes
including &lt;a href="http://angus.readthedocs.org/en/2015/week3.html"&gt;NGS2015&lt;/a&gt;, as
well as github and forking pull requests.
&lt;a href="http://sphinx-doc.org/"&gt;Sphinx&lt;/a&gt; is Python based, readthedocs is
web-based method for putting stuff in Sphinx …&lt;/p&gt;</summary><content type="html">&lt;p&gt;"We're good enough and deserve github."&lt;/p&gt;
&lt;p&gt;https://www.flickr.com/photos/lpcohen/20330046134/&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ivory.idyll.org/lab/"&gt;Dr. C. Titus Brown&lt;/a&gt; shares methods for
using &lt;a href="https://readthedocs.org/"&gt;readthedocs&lt;/a&gt;, which he uses for classes
including &lt;a href="http://angus.readthedocs.org/en/2015/week3.html"&gt;NGS2015&lt;/a&gt;, as
well as github and forking pull requests.
&lt;a href="http://sphinx-doc.org/"&gt;Sphinx&lt;/a&gt; is Python based, readthedocs is
web-based method for putting stuff in Sphinx. Learning goals at top of
lesson pages. We're going to go through steps on the web all together.
Screenshots become out of data too quickly.&lt;/p&gt;
&lt;p&gt;http://angus.readthedocs.org/en/2015/week3/CTB_github_editing.html&lt;/p&gt;
&lt;p&gt;Readthedocs will take some version controlled project from somewhere
(github or bitbucket) and format it for you. GitHub webhook activated.
Readthedocs will sync and automatically rebuild.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/readthedocs.png"&gt;&lt;img alt="readthedocs" src="https://monsterbashseq.files.wordpress.com/2015/08/readthedocs.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1139 width="300"
height="200"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is  my version of the readthedocs:&lt;/p&gt;
&lt;p&gt;http://angus-ljcohen.readthedocs.org/en/stable/&lt;/p&gt;
&lt;p&gt;Edit in github, this will update:&lt;/p&gt;
&lt;p&gt;http://angus.readthedocs.org/en/2015/week3/merge-demo.html&lt;/p&gt;
&lt;p&gt;Forking one repository with groups of people.&lt;/p&gt;
&lt;p&gt;https://www.flickr.com/photos/lpcohen/20764676629/in/dateposted-public/&lt;/p&gt;
&lt;p&gt;Titus makes changes in file. Pull in changes made in central repository.
My repo is behind:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/behind_repo.png"&gt;&lt;img alt="behind_repo" src="https://monsterbashseq.files.wordpress.com/2015/08/behind_repo.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1140 width="300"
height="162"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pull requests: One of top useful things Titus has learned! Goal is to
keep track of changes, see progression.&lt;/p&gt;
&lt;p&gt;Merge pull request, now all chnages updated. Click on "compare", if
there are any changes they will be highlighted. Once they are merged,
there will not be any more changes. Sometimes you need to switch head
fork to base fork accounts. Branches are very useful for years of
courses, versions of software, etc.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/compare_across_forks.png"&gt;&lt;img alt="compare_across_forks" src="https://monsterbashseq.files.wordpress.com/2015/08/compare_across_forks.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1141 width="300"
height="127"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Leigh: What are best practices with group of pull requests? What is one
or some people are making tons, tons of changes? Should we pull? Master
branch. You can ignore until ready to be merged. They will tell you when
they want pull request, but they will have to reconcile with the one
true. Person who is making changes has to deal with everyone else's
changes so everyone else doesn't get behind. Software lines of code so
"bombs" do not mess up everyone else's code.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The one true branch.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;https://www.flickr.com/photos/lpcohen/20329357194/in/dateposted-public/&lt;/p&gt;
&lt;p&gt;Amanda: Where do people who have write access to the one true master
branch? Does she work in own fork? Those people can make their own fork
then merge and conflict reconcile with one true. There are 2 commits,
one to merge pull (fetch) from original, second to put change in.&lt;/p&gt;
&lt;p&gt;Now, we make changes to files. Add names to attendees list:&lt;/p&gt;
&lt;p&gt;https://github.com/ljcohen/angus/blob/2015/week3.rst&lt;/p&gt;
&lt;p&gt;Now compare.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/compare_changes.png"&gt;&lt;img alt="compare_changes" src="https://monsterbashseq.files.wordpress.com/2015/08/compare_changes.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1142 width="300"
height="174"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/commit_code.png"&gt;&lt;img alt="commit_code" src="https://monsterbashseq.files.wordpress.com/2015/08/commit_code.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1143 width="300"
height="73"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Can search for commits, issues, and pull requests associated with this
code.&lt;/p&gt;
&lt;p&gt;Merge conflicts  occur when computer can't resolve.&lt;/p&gt;
&lt;p&gt;Win!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xkcd.com/1296/"&gt;&lt;img alt="git_commit" src="https://monsterbashseq.files.wordpress.com/2015/08/git_commit1.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1151 width="300"
height="171"}&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>Differential expression and dosage compensation in RNAseq - NGS2015</title><link href="https://ljcohen.github.io/blog/differential-expression-and-dosage-compensation-in-rnaseq-ngs2015.html" rel="alternate"></link><published>2015-08-27T15:47:00-07:00</published><updated>2015-08-27T15:47:00-07:00</updated><author><name>monsterbashseq</name></author><id>tag:ljcohen.github.io,2015-08-27:/blog/differential-expression-and-dosage-compensation-in-rnaseq-ngs2015.html</id><summary type="html">&lt;p&gt;&lt;a href="http://butterflyology.net/"&gt;Dr. Chris Hamm, University of Kansas&lt;/a&gt;, side
effects of sexual reproduction in Lepidoptera!&lt;/p&gt;
&lt;p&gt;https://www.flickr.com/photos/lpcohen/20920007072/in/dateposted-public/&lt;/p&gt;
&lt;p&gt;Explanation of ESA, species status dependent # of self-sustaining
populations, Mitchell's satyr butterfly endangered. Suggests &lt;a href="http://www.amazon.com/Butterfly-People-American-Encounter-Beauty/dp/1400076927"&gt;Butterfly
People&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/K-means_clustering"&gt;K-means cluster&lt;/a&gt;
plots, each vertical bar individual. Michigan different than other
populations …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://butterflyology.net/"&gt;Dr. Chris Hamm, University of Kansas&lt;/a&gt;, side
effects of sexual reproduction in Lepidoptera!&lt;/p&gt;
&lt;p&gt;https://www.flickr.com/photos/lpcohen/20920007072/in/dateposted-public/&lt;/p&gt;
&lt;p&gt;Explanation of ESA, species status dependent # of self-sustaining
populations, Mitchell's satyr butterfly endangered. Suggests &lt;a href="http://www.amazon.com/Butterfly-People-American-Encounter-Beauty/dp/1400076927"&gt;Butterfly
People&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/K-means_clustering"&gt;K-means cluster&lt;/a&gt;
plots, each vertical bar individual. Michigan different than other
populations.&lt;/p&gt;
&lt;p&gt;Diversification of Lepidoptera, Mutanen et al. 2010:&lt;/p&gt;
&lt;p&gt;https://www.flickr.com/photos/lpcohen/20307587874/&lt;/p&gt;
&lt;p&gt;Evolution of sex chromosomes: female heterogamety, "chocoblock full of
transposable elements" Sex chromosomes present gene dosage problem, no
matter how many chromosomes you have, you still have the same gene
expression. Females mammals inactivate extra X chromosome. Drosophila
males double expression to deal with balance.&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;Tutorial&lt;/strong&gt;]{style="color:#000000;"}&lt;/p&gt;
&lt;p&gt;https://angus.readthedocs.org/en/2015/_static/SLDC-code.html&lt;br&gt;
https://github.com/ngs-docs/angus/blob/2015/week3/SLDC/SLDC-code.Rmd&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Simulated Data&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/ma.png"&gt;&lt;img alt="plot_Code" src="https://monsterbashseq.files.wordpress.com/2015/08/plot_code.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1124 width="300"
height="190"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/ma.png"&gt;&lt;img alt="MA" src="https://monsterbashseq.files.wordpress.com/2015/08/ma.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1123 width="300"
height="224"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Practice Data&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bmori.dat &amp;lt;- read.csv("Bmori-data.csv", header = TRUE)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/4plots.png"&gt;&lt;img alt="4plots" src="https://monsterbashseq.files.wordpress.com/2015/08/4plots.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1126 width="300"
height="224"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Plotting in R - Awesome Digression!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Multiple plots on one space, add plots, text, arrows, whatever on top
with &lt;a href="http://www.statmethods.net/advgraphs/layout.html"&gt;base R&lt;/a&gt;.&lt;br&gt;
Reset with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;par(mfrow=c(1,1))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/rpkm.png"&gt;&lt;img alt="RPKM" src="https://monsterbashseq.files.wordpress.com/2015/08/rpkm.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1127 width="300"
height="203"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Looking at expression per chromosome:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/expr.png"&gt;&lt;img alt="expr" src="https://monsterbashseq.files.wordpress.com/2015/08/expr.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1130 width="300"
height="203"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/zchrom.png"&gt;&lt;img alt="zchrom" src="https://monsterbashseq.files.wordpress.com/2015/08/zchrom.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1129 width="300"
height="203"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MA plots&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;http://web.mit.edu/\~r/current/arch/i386_linux26/lib/R/library/limma/html/plotma.html&lt;br&gt;
I posted a question on the Bioconductor listserv:&lt;/p&gt;
&lt;p&gt;https://support.bioconductor.org/p/71562/&lt;br&gt;
http://nar.oxfordjournals.org/content/43/7/e47&lt;/p&gt;
&lt;p&gt;limma::plotMA&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/weird_maplot.png"&gt;&lt;img alt="weird_MAplot" src="https://monsterbashseq.files.wordpress.com/2015/08/weird_maplot.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1125 width="300"
height="224"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;plot(log2(res1_filtered\$baseMean), res1_filtered\$log2FoldChange,
col=ifelse(res1_filtered\$padj &amp;lt; 0.25, "red","gray67"),main="In
vivo, ApoE vs. WT
(padj&amp;lt;0.25)",xlim=c(1,20),ylim=c(-10,10),pch=20,cex=1)&lt;br&gt;
abline(h=c(-1 ,1), col="blue")&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/maplot_invivo_dkovwt_june2015.png"&gt;&lt;img alt="MAplot_invivo_DKOvWT_June2015" src="https://monsterbashseq.files.wordpress.com/2015/08/maplot_invivo_dkovwt_june2015.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1128 width="300"
height="297"}&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>GWAS for NGS data - NGS2015</title><link href="https://ljcohen.github.io/blog/gwas-for-ngs-data-ngs2015.html" rel="alternate"></link><published>2015-08-26T22:29:00-07:00</published><updated>2015-08-26T22:29:00-07:00</updated><author><name>monsterbashseq</name></author><id>tag:ljcohen.github.io,2015-08-26:/blog/gwas-for-ngs-data-ngs2015.html</id><summary type="html">&lt;p&gt;Dr. Tiffany Timbers, &lt;a href="http://tiffanytimbers.com/"&gt;postdoc at Simon Fraser
University&lt;/a&gt;. Became interested in automating
and programming from Multiworm tracker, automated image analyses for
worm behavioral studies.&lt;/p&gt;
&lt;p&gt;https://www.flickr.com/photos/lpcohen/20917921421/&lt;/p&gt;
&lt;p&gt;Today we will use a dataset from 2,007 individuals, 700,000 variants,
20,000 genes potentially contain disruptive …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Dr. Tiffany Timbers, &lt;a href="http://tiffanytimbers.com/"&gt;postdoc at Simon Fraser
University&lt;/a&gt;. Became interested in automating
and programming from Multiworm tracker, automated image analyses for
worm behavioral studies.&lt;/p&gt;
&lt;p&gt;https://www.flickr.com/photos/lpcohen/20917921421/&lt;/p&gt;
&lt;p&gt;Today we will use a dataset from 2,007 individuals, 700,000 variants,
20,000 genes potentially contain disruptive alleles.&lt;/p&gt;
&lt;p&gt;GWAS vs. SNP microarrays. Differences and similarities? Example of
question typically asked with GWAS analyses, "Do I rescue the mutant by
knocking out a region with significant SNP activity?"&lt;/p&gt;
&lt;p&gt;Really cool website, facilitating classroom discussion with student
input-typed answers:&lt;br&gt;
Code: F321E8CC&lt;br&gt;
https://b.socrative.com/student/#take-quiz/q/1&lt;/p&gt;
&lt;p&gt;Power analyses to consider with GWAS from NGS vs. microarray, difficult
to estimate effect sizes. Work needs to be done on how to do a power
analysis for this type of study. Haplotype matrix, not a lot of good
data available to generate this in non-human populations. Have to come
up with own methods for determining robust design. Positives of GWAS for
NGS data include being able to call rare variants. Take region with
groupings, gene level rather than on variant-level. What are you doing
with intergenic data? Very new type of analysis. How important is this?
When severe mutations are of interest in isolated population vs. natural
population. Indels vs. copy number variants.&lt;/p&gt;
&lt;p&gt;Sequence kernel association test (SKAT): linear model&lt;br&gt;
disease/phenotype = alpha + (alpha1)covariants (e.g. age, sex) +
(beta)variantsets ( e.g. genes) + epsilon&lt;/p&gt;
&lt;p&gt;SKAT R package documentation:&lt;br&gt;
https://cran.r-project.org/web/packages/SKAT/SKAT.pdf&lt;/p&gt;
&lt;p&gt;SKAT paper, Wu et al. Am. J. Hum. Genet. 2011:&lt;br&gt;
http://www.ncbi.nlm.nih.gov/pmc/articles/PMC3135811/pdf/main.pdf&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tutorial&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(Proceed with amazing, well-worked out install instructions. All the
code instructions for this whole tutorial are great - solid and work.
Really appreciate having location instructions at beginning of each code
block. :)&lt;br&gt;
https://github.com/ttimbers/SKAT_NGS-2015/blob/master/Setup-for-gwas-on-EC2.md&lt;/p&gt;
&lt;p&gt;https://github.com/ttimbers/SKAT_NGS-2015/blob/master/NGS_GWAS_via_SKAT.md&lt;/p&gt;
&lt;p&gt;Tiffany: "Ignore all warnings, say 'yes' to everything, and it will
work." If it doesn't work, kill the machine, start over. Computers are
fun. Tweeting lots of quotes, #ngs2015. :) Future for Docker. Tiffany:
dplyr is worth it. Titus: R did something better than Python. See Jenny
Bryan, stat545:&lt;/p&gt;
&lt;p&gt;https://stat545-ubc.github.io/bit001_dplyr-cheatsheet.html&lt;/p&gt;
&lt;p&gt;Let's look at data. There are some .vcf files, there are a lot. Here are
the first 5. we need to put them all together into a massive .vcf file
to look at whole population. We're only going to look at chromosome 4
because it makes the data more manageable for this tutorial.&lt;/p&gt;
&lt;p&gt;Here is .vcf format:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/first5vcffiles.png"&gt;&lt;img alt="first5vcffiles" src="https://monsterbashseq.files.wordpress.com/2015/08/first5vcffiles.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1078 width="300"
height="67"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/vcf.png"&gt;&lt;img alt="vcf" src="https://monsterbashseq.files.wordpress.com/2015/08/vcf.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1079 width="300"
height="90"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/vcf_info.png"&gt;&lt;img alt="vcf_info" src="https://monsterbashseq.files.wordpress.com/2015/08/vcf_info.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1080 width="300"
height="46"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will use vcf-merge, takes a minute:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vcf-merge data/*.vcf.gz | bgzip -c &amp;amp;gt; MMP_vcf-merge.vcf.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here is the merged file, 1.3 M:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/merged_vcf.png"&gt;&lt;img alt="merged_vcf" src="https://monsterbashseq.files.wordpress.com/2015/08/merged_vcf.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1081 width="300"
height="19"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;VCF-tools is silly and puts "." in output. We need "0/0" to move on.
Tiffany figured out this awk command to use to change that.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/awk.png"&gt;&lt;img alt="awk" src="https://monsterbashseq.files.wordpress.com/2015/08/awk.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1082 width="300"
height="44"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This worked and is amazing:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/awk_works.png"&gt;&lt;img alt="awk_works" src="https://monsterbashseq.files.wordpress.com/2015/08/awk_works.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1083 width="300"
height="44"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Enthusiasm from class at 8:45pm.&lt;/p&gt;
&lt;p&gt;No best practices in field right now. Decisions that follow are
investigator-specific. We're going to only look at coding regions.
Throwing out everything, e.g. silent mutations, intergenic regions, etc.
With clunky but amazing grep command:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/grep_cds1.png"&gt;&lt;img alt="grep_cds" src="https://monsterbashseq.files.wordpress.com/2015/08/grep_cds1.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1085 width="300"
height="61"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Get data in R:&lt;br&gt;
&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/r_table.png"&gt;&lt;img alt="r_table" src="https://monsterbashseq.files.wordpress.com/2015/08/r_table.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1087 width="300"
height="121"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Overheard: Don't have to understand everything as long as the desired
output comes out.&lt;/p&gt;
&lt;p&gt;Create pheno_file and fam_file:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/pheno_file.png"&gt;&lt;img alt="pheno_file" src="https://monsterbashseq.files.wordpress.com/2015/08/pheno_file.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1088 width="300"
height="110"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Join and drop files, rename colnames:&lt;br&gt;
&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/phenotypes.png"&gt;&lt;img alt="phenotypes" src="https://monsterbashseq.files.wordpress.com/2015/08/phenotypes.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1089 width="300"
height="160"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now association analysis, gene by gene. The more SNPs you have, the
longer it takes. Lex: Suggestion Jones et al. 2012 stickleback sliding
window approach.&lt;/p&gt;
&lt;p&gt;Set seed to 100, so p values are reproducible. Run SKAT.SSD.ALL, but we
won't do that. Open saved data file with output, as this takes too long
to perform during class. Compares with null model.&lt;/p&gt;
&lt;p&gt;Apply multiple testing correction with library(fdrtool). Sort. Cutoff.&lt;/p&gt;
&lt;p&gt;R is &lt;a href="https://en.wikipedia.org/wiki/Lisa_the_Iconoclast"&gt;cromulent&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;SNPs:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/snps.png"&gt;&lt;img alt="SNPs" src="https://monsterbashseq.files.wordpress.com/2015/08/snps.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1090 width="300"
height="193"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Shouldn't just take this information and run with it. Columns 4 and 5
(integers) indicate number of times this SNP ID occurs, some are 2 and 3
in entire dataset. You will have to figure out how many times you will
tolerate mutations to call it significant. Plot histogram, what are the
minor allele count. Could use cluster and pathway analyses, gene
adjacency to define SNP sets. Be careful with GO terms and pathway
analyses for SNP analyses. These are pitfalls. Really cool, new
software! But, more people need to be talking about this, developing
these tools further. And know how it works. Great opportunity with this
tutorial to review this workflow.&lt;/p&gt;
&lt;p&gt;Frequency of allele counts for # genes:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/histo.png"&gt;&lt;img alt="histo" src="https://monsterbashseq.files.wordpress.com/2015/08/histo.png?w=286"&gt;{.alignnone
.size-medium .wp-image-1091 width="286"
height="300"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is where "p hacking" comes in to determine what is reasonable
variance to be in SNP set. No answer.&lt;/p&gt;
&lt;p&gt;Throw SSID into R, throw away everything less than 5 variants to keep in
data set. From histogram above, all small allele counts (largest number
of genes) will be thrown away. Commence R joining plyr and dplyr
genes-to-include magic...and voila:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/reduced_ssid.png"&gt;&lt;img alt="reduced_SSID" src="https://monsterbashseq.files.wordpress.com/2015/08/reduced_ssid.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1092 width="300"
height="82"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Null model for SKAT doesn't change. Run, this takes a long time so we
will open reduced data output file. Now SKAT reduced results look more
reasonable to use for further interpretation.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/reduced_skat.png"&gt;&lt;img alt="reduced_SKAT" src="https://monsterbashseq.files.wordpress.com/2015/08/reduced_skat.png?w=300"&gt;{.alignnone
.size-medium .wp-image-1093 width="300"
height="193"}&lt;/a&gt;&lt;/p&gt;</content></entry><entry><title>Multivariate Tests with NGS Data and Visualization in R - Week 3 NGS 2015</title><link href="https://ljcohen.github.io/blog/multivariate-tests-with-ngs-data-and-visualization-in-r-week-3-ngs-2015.html" rel="alternate"></link><published>2015-08-25T12:08:00-07:00</published><updated>2015-08-25T12:08:00-07:00</updated><author><name>monsterbashseq</name></author><id>tag:ljcohen.github.io,2015-08-25:/blog/multivariate-tests-with-ngs-data-and-visualization-in-r-week-3-ngs-2015.html</id><summary type="html">&lt;p&gt;&lt;a href="http://ryanjw.github.io/"&gt;Dr. Ryan Williams&lt;/a&gt;, postdoc at Iowa State
leads tutorial on R visualizations with multivariate statistical
approaches for RNAseq data. Traditionally, multivariate stats approaches
used for community ecology.&lt;/p&gt;
&lt;p&gt;https://www.flickr.com/photos/lpcohen/20881761561/&lt;/p&gt;
&lt;p&gt;Following are my patchy notes from the tutorial. Please feel free to
comment and correct!&lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://ryanjw.github.io/"&gt;Dr. Ryan Williams&lt;/a&gt;, postdoc at Iowa State
leads tutorial on R visualizations with multivariate statistical
approaches for RNAseq data. Traditionally, multivariate stats approaches
used for community ecology.&lt;/p&gt;
&lt;p&gt;https://www.flickr.com/photos/lpcohen/20881761561/&lt;/p&gt;
&lt;p&gt;Following are my patchy notes from the tutorial. Please feel free to
comment and correct!&lt;/p&gt;
&lt;p&gt;The tutorial, part 1:&lt;/p&gt;
&lt;p&gt;https://github.com/ngs-docs/angus/blob/2015/week3/visualizations/multivariate-tests/tests.md&lt;/p&gt;
&lt;p&gt;Using &lt;a href="https://www.rstudio.com/"&gt;RStudio&lt;/a&gt;, load dataset from URL.&lt;/p&gt;
&lt;blockquote&gt;
&lt;div id="magicdomid67" class="ace-line"&gt;

&lt;p&gt;[# Possible solution for ubuntu RCurl]{.author-g-bknu96h89iod9lno}&lt;/p&gt;
&lt;/div&gt;

&lt;div id="magicdomid79" class="ace-line"&gt;

&lt;p&gt;[# In the terminal:]{.author-g-bknu96h89iod9lno}&lt;/p&gt;
&lt;/div&gt;

&lt;div id="magicdomid81" class="ace-line"&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install libcurl4-openssl-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;

&lt;/blockquote&gt;
&lt;p&gt;Head of data, transcript ID from htseq-count:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/head_fly_htseq_data.png"&gt;&lt;img alt="head_fly_htseq_data" src="https://monsterbashseq.files.wordpress.com/2015/08/head_fly_htseq_data.png?w=660"&gt;{.alignnone
.size-large .wp-image-1010 width="660"
height="232"}&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A major assumption of MANOVA is that variables within each treatment
level come from a multivariate normal distribution.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What's the difference between a multivariate normal distribution and
just a normal distribution? &lt;a href="https://en.wikipedia.org/wiki/Multivariate_normal_distribution"&gt;Generalization of one-dimensional
(univariate) normal distribution to higher
dimensions.&lt;/a&gt; Setup
linear model first for univariate data, then set nested functions
together.&lt;/p&gt;
&lt;p&gt;https://stat.ethz.ch/R-manual/R-devel/library/stats/html/summary.manova.html&lt;/p&gt;
&lt;p&gt;Look at dataset transcript counts. Lots of zeros. If we ran the model,
it might crash and give errors because of all these zeros. Let's look at
one transcript.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# just insert one of the transcripts,
# color by fly type &amp;quot;fly&amp;quot;
# set alpha to 0.5
ggplot(dataset)+geom_density(aes(x=FBgn0000022,fill=fly,alpha=0.5))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/single_transcript_densityplot_histogram_smoothed_by_fly1.png"&gt;&lt;img alt="single_transcript_densityplot_histogram_smoothed_by_fly" src="https://monsterbashseq.files.wordpress.com/2015/08/single_transcript_densityplot_histogram_smoothed_by_fly1.png?w=660"&gt;{.alignnone
.size-large .wp-image-1007 width="660"
height="474"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Data are not normally distributed. Y axis is proportion of data. The
above graphic looks different with the same data if you look at it with
histogram function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ggplot(dataset)+geom_histogram(aes(x=FBgn0000022,fill=fly,alpha=0.5))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/histogram.png"&gt;&lt;img alt="histogram" src="https://monsterbashseq.files.wordpress.com/2015/08/histogram.png"&gt;{.alignnone
.size-full .wp-image-1008 width="618"
height="509"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Bins of counts for this particular transcript. Change to another
transcript:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ggplot(dataset)+geom_histogram(aes(x=FBgn0000056,fill=fly,alpha=0.5),binwidth=100)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/different_transcript.png"&gt;&lt;img alt="different_transcript" src="https://monsterbashseq.files.wordpress.com/2015/08/different_transcript.png?w=660"&gt;{.alignnone
.size-large .wp-image-1009 width="660"
height="504"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See info on ggplot graphics in References section below. First, add data
to ggplot function. Then add 'aes' layers. The 'aes' means &lt;em&gt;aesthetic&lt;/em&gt;
which adds features to the graphic.&lt;/p&gt;
&lt;p&gt;Run a MANOVA demonstrating &lt;a href="https://en.wikipedia.org/wiki/Wilks%27s_lambda_distribution"&gt;Wilk's
lambda&lt;/a&gt; test,
multivariate generalization of F-distribution.&lt;/p&gt;
&lt;p&gt;Permanova, permutations of F stastistic.
&lt;a href="http://127.0.0.1:26220/library/vegan/html/adonis.html"&gt;?adonis&lt;/a&gt; Think
of data like cloud, shuffles data around, gets p values, asks how often
data are close within distance of alpha.&lt;/p&gt;
&lt;p&gt;Challenge:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;adonis(decostand(dataset[,-c(1:3)],method=&amp;quot;pa&amp;quot;)~dataset$fly*dataset$type,method=&amp;quot;jaccard&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Tutorial, part 2:&lt;/p&gt;
&lt;p&gt;https://github.com/ngs-docs/angus/blob/2015/week3/visualizations/multivariate-viz/visualizations.md&lt;/p&gt;
&lt;p&gt;Samples are unlabeled, can we figure out what groups they belong to
based on similarity?&lt;/p&gt;
&lt;p&gt;Difference between MDS and PCA: With your cloud of data, rotate on axis
- orthogonal axis 2nd, look at 3rd, 4th, 5th, etc. PCA looks at all
coordinates possible. MDS collapses to smaller, user-defined dimensions,
e.g. k=3 or k=2. Can play with this to see how stress statistical values
can be minimized.&lt;/p&gt;
&lt;p&gt;Here is MDS:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ggplot(sc)+geom_point(aes(x=NMDS1,y=NMDS2,colour=info,shape=type),size=3)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/mds1.png"&gt;&lt;img alt="mds" src="https://monsterbashseq.files.wordpress.com/2015/08/mds1.png?w=660"&gt;{.alignnone
.size-large .wp-image-1012 width="660"
height="433"}&lt;/a&gt;&lt;br&gt;
Here is PCA:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pca&amp;amp;lt;-capscale(dataset[,-c(1:4)]~1)
pca
eigs&amp;amp;lt;-eigenvals(pca)
eigs/sum(eigs)
eigenvals(pca)
sum(eigs)
sc&amp;amp;lt;-data.frame(scores(pca)$sites,dataset[,1:4])
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x=&amp;quot;PC1 (75.9% of variation explained)&amp;quot;,y=&amp;quot;PC2 (5.8% of variation explained)&amp;quot;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/pca.png"&gt;&lt;br&gt;
&lt;img alt="PCA" src="https://monsterbashseq.files.wordpress.com/2015/08/pca.png?w=660"&gt;{.alignnone
.size-large .wp-image-1014 width="660"
height="433"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is how you get the first 2 eigenvalues for PC1 and PC2:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/values_pc1_pc2.png"&gt;&lt;img alt="values_PC1_PC2" src="https://monsterbashseq.files.wordpress.com/2015/08/values_pc1_pc2.png"&gt;{.alignnone
.size-full .wp-image-1013 width="308"
height="109"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PCoA:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pcoa&amp;amp;lt;-capscale(decostand(dataset[,-c(1:4)],&amp;quot;total&amp;quot;)~dataset$fly,distance=&amp;quot;bray&amp;quot;)
scores(pcoa)$centroids
ggplot(sc)+geom_point(aes(x=MDS1,y=MDS2,colour=info,shape=type))+labs(x=&amp;quot;MDS1 (33.0% of variation explained)&amp;quot;,y=&amp;quot;MDS1 (8.2% of variation explained)&amp;quot;)+annotate(&amp;quot;text&amp;quot;,x=c(-.157,-.077,.17),y=c(-.004,.670,.156),label=c(&amp;quot;HYB&amp;quot;,&amp;quot;ORE&amp;quot;,&amp;quot;SAM&amp;quot;))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hardcoded coordinates of text of group names from pcoa\$centroids:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/centroids.png"&gt;&lt;img alt="centroids" src="https://monsterbashseq.files.wordpress.com/2015/08/centroids.png?w=660"&gt;{.alignnone
.size-large .wp-image-1016 width="660"
height="176"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://monsterbashseq.files.wordpress.com/2015/08/pcoa.png"&gt;&lt;img alt="PCoA" src="https://monsterbashseq.files.wordpress.com/2015/08/pcoa.png?w=660"&gt;{.alignnone
.size-large .wp-image-1015 width="660"
height="433"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Discussion:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;What parts of data are responsible for underlying differences?&lt;/em&gt; How to
see how screwed up data are? If we only look at certain genes in NGS
data example, how does that change variation? Can use this data? Which
treatments interested in? Pairing tests appropriately with
visualizations. Adonis package can rank based on 'simper' within adonis
or 'anosim' or 'envfit' package to give explanatory components to see
what is contributing to your PCA. Try 'taxdist' or 'unifrac', to look at
taxonomic distances to add in weighting variables. See what happens when
you chop off, reduce. Same pattern? Now we have these clusters. Can we
figure out why our data is noisy, useless or useful?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://vita.had.co.nz/papers/layered-grammar.pdf"&gt;Grammar of
graphics&lt;/a&gt; by author of
ggplot&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.r-bloggers.com/r-cookbook-with-examples/"&gt;R cookbook with
examples&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bioconnector.org/workshops/lessons/r/r-viz/"&gt;Stephen Turner's (UVA) advanced
visualization&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/Jaccard_index&lt;/p&gt;</content></entry><entry><title>Workshop on Genomics (Week 2, Day 3) - Transcriptomics</title><link href="https://ljcohen.github.io/blog/workshop-on-genomics-week-2-day-3-transcriptomics.html" rel="alternate"></link><published>2014-01-22T09:27:00-08:00</published><updated>2014-01-22T09:27:00-08:00</updated><author><name>monsterbashseq</name></author><id>tag:ljcohen.github.io,2014-01-22:/blog/workshop-on-genomics-week-2-day-3-transcriptomics.html</id><summary type="html">&lt;p&gt;Dr. Manual Garber:&lt;/p&gt;
&lt;p&gt;http://www.flickr.com/photos/lpcohen/12086234516/&lt;/p&gt;
&lt;p&gt;Lecture slides:
http://evomicsorg.wpengine.netdna-cdn.com/wp-content/uploads/2013/03/evomics_krumlov_2014.pdf&lt;/p&gt;
&lt;p&gt;Exercises: http://evomics.org/learning/genomics/transcriptomics/#part1&lt;/p&gt;
&lt;p&gt;Exercise 1: Prepare for genomic alignment (when there is reference
genome)&lt;br&gt;
Exercise 2: Genome alignment of RNA-seq reads&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Question …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Dr. Manual Garber:&lt;/p&gt;
&lt;p&gt;http://www.flickr.com/photos/lpcohen/12086234516/&lt;/p&gt;
&lt;p&gt;Lecture slides:
http://evomicsorg.wpengine.netdna-cdn.com/wp-content/uploads/2013/03/evomics_krumlov_2014.pdf&lt;/p&gt;
&lt;p&gt;Exercises: http://evomics.org/learning/genomics/transcriptomics/#part1&lt;/p&gt;
&lt;p&gt;Exercise 1: Prepare for genomic alignment (when there is reference
genome)&lt;br&gt;
Exercise 2: Genome alignment of RNA-seq reads&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Question: What percent of reads were mapped for each library?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;ubuntu&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;ip-10-151-69-171&lt;/span&gt;&lt;span class="o"&gt;:~/&lt;/span&gt;&lt;span class="nt"&gt;transcriptomics&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;tophat&lt;/span&gt;&lt;span class="o"&gt;$&lt;/span&gt; &lt;span class="nt"&gt;cat&lt;/span&gt; &lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;quant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ctrl1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;align_summary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;txt&lt;/span&gt; &lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;quant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ctrl2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;align_summary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;txt&lt;/span&gt; &lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;quant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ctrl3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;align_summary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;txt&lt;/span&gt; &lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;quant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;expr1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;align_summary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;txt&lt;/span&gt; &lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;quant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;expr2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;align_summary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;txt&lt;/span&gt; &lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;quant&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;expr3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nt"&gt;align_summary&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;txt&lt;/span&gt;
&lt;span class="nt"&gt;Left&lt;/span&gt; &lt;span class="nt"&gt;reads&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
          &lt;span class="nt"&gt;Input&lt;/span&gt;     &lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;24288&lt;/span&gt;
           &lt;span class="nt"&gt;Mapped&lt;/span&gt;   &lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;23768&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;97&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;9&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;these&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;       &lt;span class="nt"&gt;511&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;1&lt;/span&gt;&lt;span class="o"&gt;%)&lt;/span&gt; &lt;span class="nt"&gt;have&lt;/span&gt; &lt;span class="nt"&gt;multiple&lt;/span&gt; &lt;span class="nt"&gt;alignments&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;65&lt;/span&gt; &lt;span class="nt"&gt;have&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;Right&lt;/span&gt; &lt;span class="nt"&gt;reads&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
          &lt;span class="nt"&gt;Input&lt;/span&gt;     &lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;24288&lt;/span&gt;
           &lt;span class="nt"&gt;Mapped&lt;/span&gt;   &lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;23770&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;97&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;9&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="nt"&gt;of&lt;/span&gt; &lt;span class="nt"&gt;these&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;       &lt;span class="nt"&gt;515&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;2&lt;/span&gt;&lt;span class="o"&gt;%)&lt;/span&gt; &lt;span class="nt"&gt;have&lt;/span&gt; &lt;span class="nt"&gt;multiple&lt;/span&gt; &lt;span class="nt"&gt;alignments&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;65&lt;/span&gt; &lt;span class="nt"&gt;have&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nt"&gt;gt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;20&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;97&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;9&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nt"&gt;overall&lt;/span&gt; &lt;span class="nt"&gt;read&lt;/span&gt; &lt;span class="nt"&gt;mapping&lt;/span&gt; &lt;span class="nt"&gt;rate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Aligned pairs: 23746&lt;br&gt;
of these: 505 ( 2.1%) have multiple alignments&lt;br&gt;
442 ( 1.9%) are discordant alignments&lt;br&gt;
95.9% concordant pair alignment rate.&lt;br&gt;
Left reads:&lt;br&gt;
Input : 15693&lt;br&gt;
Mapped : 15181 (96.7% of input)&lt;br&gt;
of these: 388 ( 2.6%) have multiple alignments (50 have &amp;gt;20)&lt;br&gt;
Right reads:&lt;br&gt;
Input : 15693&lt;br&gt;
Mapped : 15164 (96.6% of input)&lt;br&gt;
of these: 387 ( 2.6%) have multiple alignments (50 have &amp;gt;20)&lt;br&gt;
96.7% overall read mapping rate.&lt;/p&gt;
&lt;p&gt;Aligned pairs: 15143&lt;br&gt;
of these: 381 ( 2.5%) have multiple alignments&lt;br&gt;
286 ( 1.9%) are discordant alignments&lt;br&gt;
94.7% concordant pair alignment rate.&lt;br&gt;
Left reads:&lt;br&gt;
Input : 17008&lt;br&gt;
Mapped : 16497 (97.0% of input)&lt;br&gt;
of these: 300 ( 1.8%) have multiple alignments (32 have &amp;gt;20)&lt;br&gt;
Right reads:&lt;br&gt;
Input : 17008&lt;br&gt;
Mapped : 16500 (97.0% of input)&lt;br&gt;
of these: 299 ( 1.8%) have multiple alignments (32 have &amp;gt;20)&lt;br&gt;
97.0% overall read mapping rate.&lt;/p&gt;
&lt;p&gt;Aligned pairs: 16478&lt;br&gt;
of these: 295 ( 1.8%) have multiple alignments&lt;br&gt;
270 ( 1.6%) are discordant alignments&lt;br&gt;
95.3% concordant pair alignment rate.&lt;br&gt;
Left reads:&lt;br&gt;
Input : 17568&lt;br&gt;
Mapped : 17068 (97.2% of input)&lt;br&gt;
of these: 225 ( 1.3%) have multiple alignments (13 have &amp;gt;20)&lt;br&gt;
Right reads:&lt;br&gt;
Input : 17568&lt;br&gt;
Mapped : 17070 (97.2% of input)&lt;br&gt;
of these: 225 ( 1.3%) have multiple alignments (13 have &amp;gt;20)&lt;br&gt;
97.2% overall read mapping rate.&lt;/p&gt;
&lt;p&gt;Aligned pairs: 17047&lt;br&gt;
of these: 223 ( 1.3%) have multiple alignments&lt;br&gt;
185 ( 1.1%) are discordant alignments&lt;br&gt;
96.0% concordant pair alignment rate.&lt;br&gt;
Left reads:&lt;br&gt;
Input : 21020&lt;br&gt;
Mapped : 20497 (97.5% of input)&lt;br&gt;
of these: 238 ( 1.2%) have multiple alignments (13 have &amp;gt;20)&lt;br&gt;
Right reads:&lt;br&gt;
Input : 21020&lt;br&gt;
Mapped : 20499 (97.5% of input)&lt;br&gt;
of these: 243 ( 1.2%) have multiple alignments (13 have &amp;gt;20)&lt;br&gt;
97.5% overall read mapping rate.&lt;/p&gt;
&lt;p&gt;Aligned pairs: 20463&lt;br&gt;
of these: 237 ( 1.2%) have multiple alignments&lt;br&gt;
216 ( 1.1%) are discordant alignments&lt;br&gt;
96.3% concordant pair alignment rate.&lt;br&gt;
Left reads:&lt;br&gt;
Input : 9101&lt;br&gt;
Mapped : 8598 (94.5% of input)&lt;br&gt;
of these: 88 ( 1.0%) have multiple alignments (6 have &amp;gt;20)&lt;br&gt;
Right reads:&lt;br&gt;
Input : 9101&lt;br&gt;
Mapped : 8597 (94.5% of input)&lt;br&gt;
of these: 91 ( 1.1%) have multiple alignments (6 have &amp;gt;20)&lt;br&gt;
94.5% overall read mapping rate.&lt;/p&gt;
&lt;p&gt;Aligned pairs: 8583&lt;br&gt;
of these: 88 ( 1.0%) have multiple alignments&lt;br&gt;
86 ( 1.0%) are discordant alignments&lt;br&gt;
93.4% concordant pair alignment rate.&lt;/p&gt;</content></entry><entry><title>Workshop on Genomics (Week 2, Day 1, Notes) - RAD-Seq analyses with STACKS</title><link href="https://ljcohen.github.io/blog/workshop-on-genomics-week-2-day-1-notes-rad-seq-analyses-with-stacks.html" rel="alternate"></link><published>2014-01-20T10:58:00-08:00</published><updated>2014-01-20T10:58:00-08:00</updated><author><name>monsterbashseq</name></author><id>tag:ljcohen.github.io,2014-01-20:/blog/workshop-on-genomics-week-2-day-1-notes-rad-seq-analyses-with-stacks.html</id><summary type="html">&lt;p&gt;Czech food:&lt;/p&gt;
&lt;p&gt;http://www.flickr.com/photos/lpcohen/12057609436/&lt;/p&gt;
&lt;p&gt;Exercise:
http://evomicsorg.wpengine.netdna-cdn.com/wp-content/uploads/2013/03/cesky_2014_RAD_tutorial.pdf&lt;/p&gt;
&lt;p&gt;Start Amazon instance:
https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#Instances:&lt;/p&gt;
&lt;p&gt;STACKS Pipeline:&lt;/p&gt;
&lt;p&gt;Part 1. Cleaning raw data:&lt;br&gt;
- take raw reads, process RAD-tags to throw away …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Czech food:&lt;/p&gt;
&lt;p&gt;http://www.flickr.com/photos/lpcohen/12057609436/&lt;/p&gt;
&lt;p&gt;Exercise:
http://evomicsorg.wpengine.netdna-cdn.com/wp-content/uploads/2013/03/cesky_2014_RAD_tutorial.pdf&lt;/p&gt;
&lt;p&gt;Start Amazon instance:
https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#Instances:&lt;/p&gt;
&lt;p&gt;STACKS Pipeline:&lt;/p&gt;
&lt;p&gt;Part 1. Cleaning raw data:&lt;br&gt;
- take raw reads, process RAD-tags to throw away&lt;br&gt;
- Illumina big digital camera, clusters can sometimes interfere with
each other to give mixed signals&lt;br&gt;
- Phred quality scores interpret sequences: 0-40 on log scale, series of
ASCII code letters&lt;br&gt;
- difference between fasta and fastq&lt;br&gt;
- "process RAD-tags" will convert ASCII to numbers&lt;/p&gt;
&lt;p&gt;Data sets we will be working with from
&lt;a href="http://en.wikipedia.org/wiki/Stickleback"&gt;stickleback&lt;/a&gt;: samples have
in-line (first 5 nucleotides, in this case) bar codes, then also indexed
bar code with special Illumina bar codes get put by software in special
place at second and third passes of each paired ends - this gets put
into ID header line of the fastq file, you tell the "process RAD-tags"
program which barcode to use&lt;/p&gt;
&lt;p&gt;When cleaning data, want to get rid of worst of worst data - use
process_shortreads or STACKS "process RAD-tags" to clean data&lt;/p&gt;
&lt;p&gt;Stay organized in shell by setting up hierarchy directory structure for
each step. "...each step of the analysis takes its input from one
directory and places it into another directory, this is known as a
‘waterfall workspace'... A well-organized workspace makes analyses
easier and prevents data from being overwritten. "&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cyberciti.biz/faq/howto-open-a-tar-gz-file-in-linux-unix/"&gt;Unzip&lt;/a&gt;
files: multiple ways of tar, one is: tar -zxvf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@ip-10-151-69-171:~/stacks/clean/lane1$ tar -xvf /stacks_data/clean/lane1.tar
lane1_NoIndex_L001_R1_001.fastq.gz
lane1_NoIndex_L001_R1_002.fastq.gz
lane1_NoIndex_L001_R1_003.fastq.gz
lane1_NoIndex_L001_R1_004.fastq.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Stacks manual, process_radtags:&lt;br&gt;
http://creskolab.uoregon.edu/stacks/comp/process_radtags.php&lt;/p&gt;
&lt;p&gt;Fantastic Linux command line tool:
&lt;a href="http://explainshell.com"&gt;explainshell.com&lt;/a&gt;&lt;br&gt;
Will explain command-line commands line part by part. Interactive and
easy to interpret.&lt;/p&gt;
&lt;p&gt;(Advise: If you have problems with .gz files, sometimes you have to
gunzip and gzip them back again, the hardware with instances sometimes
is finicky.)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@ip-10-151-69-171:~/stacks/clean$ process_radtags -e &amp;#39;sbfI&amp;#39; -p ./lane1 -b lane1_barcodes -o ./samples -c -q -r -E phred33
Using Phred+33 encoding for quality scores.
Found 4 input file(s).
Searching for single-end, inlined barcodes.
Loaded 95 barcodes (6bp).
Processing file 1 of 4 [lane1_NoIndex_L001_R1_004.fastq]
  4000000 total reads; -225528 ambiguous barcodes; -167972 ambiguous RAD-Tags; +190285 recovered; -322184 low quality reads; 3284316 retained reads.
Processing file 2 of 4 [lane1_NoIndex_L001_R1_001.fastq]
  4000000 total reads; -230133 ambiguous barcodes; -169979 ambiguous RAD-Tags; +187630 recovered; -380013 low quality reads; 3219875 retained reads.
Processing file 3 of 4 [lane1_NoIndex_L001_R1_002.fastq]
  4000000 total reads; -235444 ambiguous barcodes; -172704 ambiguous RAD-Tags; +205939 recovered; -422009 low quality reads; 3169843 retained reads.
Processing file 4 of 4 [lane1_NoIndex_L001_R1_003.fastq]
  4000000 total reads; -228896 ambiguous barcodes; -169804 ambiguous RAD-Tags; +201360 recovered; -348627 low quality reads; 3252673 retained reads.
Closing files, flushing buffers...
Outputing details to log: &amp;#39;./samples/process_radtags.log&amp;#39;

16000000 total sequences;
  920001 ambiguous barcode drops;
  1472833 low quality read drops;
  680459 ambiguous RAD-Tag drops;
12926707 retained reads.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To perform dry run, to check if all parameters are entered correctly and
files are in the proper location, use -d for "dry run".&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Total Sequences 16000000
Ambiguous Barcodes      920001
Low Quality     1472833
Ambiguous RAD-Tag       680459
Retained Reads  12926707
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Reasons why sequences were dropped: ambiguous barcode, ambiguous
RAD-Tag, low quality reads&lt;/p&gt;
&lt;p&gt;Ambiguous barcodes are read by the software multiple times at the
beginning of reads but do not match against the input list of barcodes.
There is one in our list that occurs many times but was not specified by
the barcode list, so these were all thrown away. This might be a
mistake, so check with technician?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Sequences not recorded
Barcode Total
AATATC  190381
CCTCTG  10260
TGTGTG  3266
GTGTGT  2117
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://stackoverflow.com/questions/18686832/rename-all-files-in-folder-to-numbered-list-1-jpg-2-jpg"&gt;rename
files&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls | cat -n | while read n f; do mv &amp;quot;$f&amp;quot; &amp;quot;file-$n.jpg&amp;quot;; done
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Also, can use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ls -l
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Paired reads are phased. If going through file by pairs, if one read
gets thrown away because of quality issues the other read will be out of
phase, therefore a remainder file .rem.fq is made to allow you to keep
track. The partner didn't match. These can be added back later.&lt;/p&gt;
&lt;p&gt;Stacks flow chart:&lt;br&gt;
1. process_radtags&lt;br&gt;
2. reference genome? -&amp;gt; ustacks (no reference)/pstacks (reference)
-&amp;gt; cstacks -&amp;gt;sstacks&lt;br&gt;
3. genotypes program&lt;br&gt;
4.&lt;/p&gt;
&lt;p&gt;Look at original STACKS paper.&lt;br&gt;
- stacks = alleles&lt;br&gt;
- break down into kmers, load into dictionary, reduce search space that
may match with other alleles (lowest connection), merge together, those
become loci&lt;/p&gt;
&lt;p&gt;Could be more than one minimum spanning tree, de-leveraging algorithm&lt;/p&gt;
&lt;p&gt;If there were some reads with not enough to make a stack, those are set
aside, and a more permissive algorithm is used later (these will be
divided into primary and secondary reads). SNP-calling model can handle
error. More depth/reads, differentiating SNP from error.&lt;/p&gt;
&lt;p&gt;If you're running a job that takes several hours, if you disconnect from
terminal, your job will be terminated. Inside terminal, type 'screen',
which is another terminal, that will allow you to run your job over
several days, log on/off from different computers. Can have multiple
screens, screen -ls will tell you how many screens you have running,
communicate command to screen, use ctrl-a. ctrl-a ctrl-d disconnections.&lt;/p&gt;
&lt;p&gt;View stacks data with backend database, program has database connection
through mysql.&lt;/p&gt;
&lt;p&gt;(Unix convention: % means "prompt", don't have to actually type this.)&lt;/p&gt;
&lt;p&gt;Daemon runs database in background. Indexing big datasets. Structured
query language allowing people to interact with database. Series of
tables connected. Structured query language links tables. .php files are
web-interface of sql files.&lt;/p&gt;
&lt;p&gt;Use regular expressions to help build list of samples:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# always beginning of line
^
# always end of line
$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Editing a file (these were used to add "-s samples/" onto beginning):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cat stacks_script | sed -E &amp;#39;s/^/-s samples\//&amp;#39; &amp;amp;gt; stacks_script_path

Adding / onto end:
cat stacks_script_path | sed -E &amp;#39;s/$/ \\/&amp;#39; &amp;amp;gt; stacks_script_path
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This was the final script to run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sh stacks_script_run
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Contents of file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;denovo_map.pl -o .. -B orphy_radtags -m 4 -M 2 -n 0 -b 1 -D &amp;quot;Stickleback RAD-Seq Workshop Part 1&amp;quot; -O po$
-s samples/ms_2067.01.fa
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-s samples/ms_2067.02.fa &lt;br&gt;
   -s samples/ms_2067.03.fa &lt;br&gt;
   -s samples/ms_2067.04.fa &lt;br&gt;
   -s samples/ms_2067.05.fa &lt;br&gt;
   -s samples/ms_2067.06.fa &lt;br&gt;
   -s samples/ms_2067.08.fa &lt;br&gt;
   -s samples/ms_2067.09.fa &lt;br&gt;
   -s samples/ms_2067.10.fa &lt;br&gt;
   -s samples/ms_2067.11.fa &lt;br&gt;
   -s samples/pcr_1193.00.fa &lt;br&gt;
   -s samples/pcr_1193.01.fa &lt;br&gt;
   -s samples/pcr_1193.08.fa &lt;br&gt;
   -s samples/pcr_1193.11.fa &lt;br&gt;
   -s samples/pcr_1210.05.fa &lt;br&gt;
   -s samples/pcr_1211.01.fa &lt;br&gt;
   -s samples/pcr_1211.02.fa &lt;br&gt;
   -s samples/pcr_1211.04.fa &lt;br&gt;
   -s samples/pcr_1211.05.fa &lt;br&gt;
   -s samples/pcr_1211.06.fa &lt;br&gt;
   -s samples/rb_2217.001.fa &lt;br&gt;
   -s samples/rb_2217.003.fa &lt;br&gt;
   -s samples/rb_2217.005.fa &lt;br&gt;
   -s samples/rb_2217.006.fa &lt;br&gt;
   -s samples/rb_2217.007.fa &lt;br&gt;
   -s samples/rb_2217.010.fa &lt;br&gt;
   -s samples/rb_2217.011.fa &lt;br&gt;
   -s samples/rb_2217.014.fa &lt;br&gt;
   -s samples/rb_2217.016.fa &lt;br&gt;
   -s samples/rb_2217.018.fa   &lt;/p&gt;
&lt;p&gt;Screen! (really cool)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;screen
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Will allow you to run processes and shut down terminal and computer
while processes are still running.&lt;br&gt;
Ctrl-A+D: returns to original screen&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@ip-10-151-69-171:~/stacks/denovo$ screen -r
[detached from 6226.pts-1.ip-10-151-69-171]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can run multiple screens at the same time and keep track of them
with 4-digit number before ip address, e.g. 6309.pts-1.ip-10-151-69-171:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@ip-10-151-69-171:~/stacks/denovo$ screen
[detached from 6309.pts-1.ip-10-151-69-171]
ubuntu@ip-10-151-69-171:~/stacks/denovo$ screen -r
There are several suitable screens on:
    6309.pts-1.ip-10-151-69-171 (01/20/2014 08:37:00 PM)    (Detached)
    6226.pts-1.ip-10-151-69-171 (01/20/2014 08:35:24 PM)    (Detached)
    5992.pts-1.ip-10-151-69-171 (01/20/2014 08:29:42 PM)    (Attached)
Type &amp;quot;screen [-d] -r [pid.]tty.host&amp;quot; to resume one of them.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Ctrl-D: deletes screen&lt;/p&gt;</content></entry><entry><title>Workshop on Genomics (Notes, Day 4) - Metagenomics</title><link href="https://ljcohen.github.io/blog/workshop-on-genomics-notes-day-4-metagenomics.html" rel="alternate"></link><published>2014-01-16T13:20:00-08:00</published><updated>2014-01-16T13:20:00-08:00</updated><author><name>monsterbashseq</name></author><id>tag:ljcohen.github.io,2014-01-16:/blog/workshop-on-genomics-notes-day-4-metagenomics.html</id><summary type="html">&lt;p&gt;Dr. Mike Zoday, Broad Institute (cont'd)- Metagenomics conclusion of
talk from Day 3.&lt;/p&gt;
&lt;p&gt;Reproducility is an issue. Figure looking at different preps and
sequencing facilities.&lt;/p&gt;
&lt;p&gt;Real change vs. real truth. Want to be able to measure changes.&lt;/p&gt;
&lt;p&gt;Different filtering: Number of OTU gets higher with more reads with 454.&lt;/p&gt;
&lt;p&gt;Read …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Dr. Mike Zoday, Broad Institute (cont'd)- Metagenomics conclusion of
talk from Day 3.&lt;/p&gt;
&lt;p&gt;Reproducility is an issue. Figure looking at different preps and
sequencing facilities.&lt;/p&gt;
&lt;p&gt;Real change vs. real truth. Want to be able to measure changes.&lt;/p&gt;
&lt;p&gt;Different filtering: Number of OTU gets higher with more reads with 454.&lt;/p&gt;
&lt;p&gt;Read length important, the longer the more differences you can detect.
Read pairing is not as valuable as simply a longer read length.&lt;/p&gt;</content></entry><entry><title>Workshop on Genomics (Notes, Day 3) – Sequence Data Quality Control</title><link href="https://ljcohen.github.io/blog/workshop-on-genomics-notes-day-3-sequence-data-quality-control.html" rel="alternate"></link><published>2014-01-15T09:23:00-08:00</published><updated>2014-01-15T09:23:00-08:00</updated><author><name>monsterbashseq</name></author><id>tag:ljcohen.github.io,2014-01-15:/blog/workshop-on-genomics-notes-day-3-sequence-data-quality-control.html</id><summary type="html">&lt;p&gt;Use this link for starting AWS instance:
http://www.google.com/url?q=http%3A%2F%2Fbit.ly%2Fevomics2014&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNHw6fapggOZ33Pu5k5cSJeiduXRZg&lt;/p&gt;
&lt;p&gt;Today's lab topic:
http://evomics.org/learning/quality-assessment-and-control-of-sequence-data/&lt;/p&gt;
&lt;p&gt;http://www.flickr.com/photos/lpcohen/11964515385/&lt;/p&gt;
&lt;p&gt;Quality control is important: sequencing, library prep&lt;/p&gt;
&lt;p&gt;Given sequence files …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Use this link for starting AWS instance:
http://www.google.com/url?q=http%3A%2F%2Fbit.ly%2Fevomics2014&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AFQjCNHw6fapggOZ33Pu5k5cSJeiduXRZg&lt;/p&gt;
&lt;p&gt;Today's lab topic:
http://evomics.org/learning/quality-assessment-and-control-of-sequence-data/&lt;/p&gt;
&lt;p&gt;http://www.flickr.com/photos/lpcohen/11964515385/&lt;/p&gt;
&lt;p&gt;Quality control is important: sequencing, library prep&lt;/p&gt;
&lt;p&gt;Given sequence files from instruments, quality scores, Phred - Wiki is
good: http://en.wikipedia.org/wiki/FASTQ_format&lt;/p&gt;
&lt;p&gt;Quiz: What are phred scores (and probability of error) of first bases of
sequence?&lt;br&gt;
(Only latest Illumina data has stars at the end.)&lt;/p&gt;
&lt;p&gt;Generate quality plots, quality vs. position in read (bp). Towards end
of sequence, quality drops.&lt;/p&gt;
&lt;p&gt;Make decisions:&lt;br&gt;
- trim to certain length&lt;br&gt;
- trim bad bases&lt;br&gt;
- discard bad quality reads&lt;/p&gt;
&lt;p&gt;Stacks has program to clean data and remove low-quality reads.&lt;/p&gt;
&lt;p&gt;Programs for data cleaning: list: FASTX-Toolkit, other programs (links
on powerpoint)&lt;/p&gt;
&lt;p&gt;Nucleotide composition, are they what you expect? Consider barcodes,
restriction enzymes.&lt;/p&gt;
&lt;p&gt;Problem Set, 3 Illumina datasets: "The goal of this exercise is to
inspect the sequence data of an Illumina run."&lt;/p&gt;
&lt;p&gt;DATASET 1&lt;br&gt;
&lt;em&gt;bartonella_illumina.fastq: a small subset of an Illumina run (v.1.5)
belonging to a bovine isolate of the intracellular bacterium Bartonella&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;1. Launch FastQC by typing fastqc in the terminal window. (If you want
to run fastqc in commandline, run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fastqc -h
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, send commands to outfile to open and view results.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-145948.png"&gt;&lt;img alt="Screenshot from 2014-01-15
14:59:48" src="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-145948.png?w=640"&gt;{.alignnone
.size-large .wp-image-755 width="640"
height="577"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is the GUI:&lt;br&gt;
&lt;a href="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-143025.png"&gt;&lt;img alt="Screenshot from 2014-01-15
14:30:25" src="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-143025.png?w=640"&gt;{width="640"
height="380"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2. Load the bartonella_illumina.fastq file into FastQC (File-&amp;gt;Open).
You can view the results either within the FastQC application or the
exported report.&lt;br&gt;
3. Inspect the data contained in the sequence file,
bartonella_illumina.fastq. Have a look at the numbers output on the
“Basic Statistics” page. How many sequences do we have?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;1000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;What is the sequence length?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;38
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the GC content?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c"&gt;%GC = 37&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Examine the “Per base sequence quality” and ”Per sequence quality
scores” pages.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-143313.png"&gt;&lt;img alt="Screenshot from 2014-01-15
14:33:13" src="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-143313.png?w=640"&gt;{.alignnone
.size-large .wp-image-748 width="640"
height="481"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Roughly, how many incorrect base calls are expected at most positions?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Between 34-36
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Do you think this run gave good quality sequences?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Yes, towards the upper range (40)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Examine the “Per base sequence content”, “Per base GC content” and “Per
sequence GC content” pages. FastQC points out a “potential problem” with
an orange exclamation mark. Do you think we should worry about it in
this particular case?
&lt;a href="http://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/2%20Basic%20Operations/2.2%20Evaluating%20Results.html"&gt;Hint.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-143759.png"&gt;&lt;img alt="Screenshot from 2014-01-15
14:37:59" src="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-143759.png?w=640"&gt;{.alignnone
.wp-image-749 width="451"
height="337"}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-143818.png"&gt;&lt;img alt="Screenshot from 2014-01-15
14:38:18" src="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-143818.png?w=640"&gt;{.alignnone
.wp-image-750 width="369"
height="277"}&lt;/a&gt;
&lt;a href="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-143833.png"&gt;&lt;img alt="Screenshot from 2014-01-15
14:38:33" src="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-143833.png?w=640"&gt;{.alignnone
.wp-image-751 width="368"
height="275"}&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; 
It depends on the dataset, if the results are expected.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Examine the “Overrepresented sequences” page. Why does FastQC give a
warning message?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-144518.png"&gt;&lt;img alt="Screenshot from 2014-01-15
14:45:18" src="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-144518.png?w=640"&gt;{.alignnone
.size-large .wp-image-753 width="640"
height="125"}&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Possible adapter sequence, look this up to see if it makes sense to be in the dataset.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;DATASET 2&lt;br&gt;
&lt;em&gt;EMP_Misc_16v4EMP_NoIndex_L005_R1_001-sample.fastq.gz: a small
subset of an Illumina run (v.1.9) belonging to one Earth Microbiome
Project environmental sample sequenced for 16S amplicons (demultiplexed
from a set of pooled samples).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;1. Load the data into FASTQC (note that there is no need to unzip it
first).&lt;br&gt;
2. What can explain the nucleotide frequency pattern observed in the 8
first bases?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-145006.png"&gt;&lt;img alt="Screenshot from 2014-01-15
14:50:06" src="http://monsterbashseq.files.wordpress.com/2014/01/screenshot-from-2014-01-15-145006.png?w=640"&gt;{.alignnone
.size-large .wp-image-754 width="640"
height="486"}&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Barcode?
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3.What can explain the nucleotide frequency pattern observed in the rest
of the sequence?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Environmental sample with community of bacteria, conserved region of 16S
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4. Would you be worried in this case about the sequence duplications
levels, overrepresented sequences and kmer content? Why?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Frequencies of different bacteria in sample.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Exercise 2:&lt;br&gt;
http://hannonlab.cshl.edu/fastx_toolkit/commandline.html&lt;br&gt;
Remove the sequences that have more than 25% of the bases with Q &amp;lt; 30
using the appropiate fastx-toolkit program (once you find it, use “-h”
option for usage). Note that you need to add “-Q 33″ to the command as
the sequences have a different encoding (Phred + 33) than the default of
fastx-toolkit (Phred + 64). How many reads are kept at the end of the
process?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@domU-12-31-39-02-88-C1:~/qc$ fastq_quality_filter -i SRR026762-sample.fastq -q 30 -Q 33 -v -p 75 -o output.fastq
Quality cut-off: 30
Minimum percentage: 75
Input: 100000 reads.
Output: 53832 reads.
discarded 46168 (46%) low-quality reads.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Clip the adaptor sequence of the quality filtered file using the
appropiate fastx-toolkit program (once you find it, use “-h” option for
usage). Set the options so that you remove the sequences that are
shorter than 8 nucleotides and that you see the number of kept and
discarded sequences on screen. Note that you need to add “-Q 33″ to the
command as the sequences have a different encoding (Phred + 33) than the
default of fastx-toolkit (Phred + 64). How many reads are kept at the
end of the process?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ubuntu@domU-12-31-39-02-88-C1:~/qc$ fastx_clipper -a ATCTCGTATGCCGTCTTCTGCTTG -l 8 -v -Q 33 -i output.fastq -o SRR026762-sample-qf-at.fastq
Clipping Adapter: ATCTCGTATGCCGTCTTCTGCTTG
Min. Length: 8
Input: 53832 reads.
Output: 52701 reads.
discarded 461 too-short reads.
discarded 553 adapter-only reads.
discarded 117 N reads.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Trimming the adapter sequences sometimes may worsen the overall quality
scores. There are two types of overrepresented sequences, Library prep
and others have no hit. Sequencing primers, primer dimers, are being
added to library and being sequenced. This happens in microRNA
sequencing often because they're so small. Remove these by aligning to
see if they all match, then trim. Use program designed to work with
microRNA and take into account adapter sequences and primer dimers.&lt;/p&gt;</content></entry></feed>